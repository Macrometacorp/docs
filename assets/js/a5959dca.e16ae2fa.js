"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[19198],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var a=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var o=a.createContext({}),p=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(o.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,i=e.originalType,o=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=p(n),m=l,g=u["".concat(o,".").concat(m)]||u[m]||c[m]||i;return n?a.createElement(g,r(r({ref:t},d),{},{components:n})):a.createElement(g,r({ref:t},d))}));function m(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=n.length,r=new Array(i);r[0]=u;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:l,r[1]=s;for(var p=2;p<i;p++)r[p]=n[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},82423:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>c,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var a=n(87462),l=(n(67294),n(3905));const i={title:"Search View Commands"},r="Search Views (gdnsl view)",s={unversionedId:"cli/search-views-cli",id:"cli/search-views-cli",title:"Search View Commands",description:"Get commands related to search views.",source:"@site/docs/cli/search-views-cli.md",sourceDirName:"cli",slug:"/cli/search-views-cli",permalink:"/docs/cli/search-views-cli",draft:!1,editUrl:"https://github.com/macrometacorp/docs/edit/main/docs/cli/search-views-cli.md",tags:[],version:"current",frontMatter:{title:"Search View Commands"},sidebar:"defaultSidebar",previous:{title:"Search Commands",permalink:"/docs/cli/search-cli"},next:{title:"Stream Worker Commands",permalink:"/docs/cli/stream-workers-cli"}},o={},p=[{value:"gdnsl view create",id:"gdnsl-view-create",level:2},{value:"gdnsl view list",id:"gdnsl-view-list",level:2},{value:"gdnsl view describe",id:"gdnsl-view-describe",level:2},{value:"gdnsl view rename",id:"gdnsl-view-rename",level:2},{value:"gdnsl view update",id:"gdnsl-view-update",level:2},{value:"gdnsl view delete",id:"gdnsl-view-delete",level:2}],d={toc:p};function c(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"search-views-gdnsl-view"},"Search Views (gdnsl view)"),(0,l.kt)("p",null,"Get commands related to search views."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"gdnsl view [flags]\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Options:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"  -h, --help                  Help for views.\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Options inherited:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"      --config string         gdnsl config file (default is ./gdnsl.yaml)\n")),(0,l.kt)("h2",{id:"gdnsl-view-create"},"gdnsl view create"),(0,l.kt)("p",null,"Create a view."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"gdnsl view create <view-name> [flags]\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'  # Create test view on demo collection\n  gdnsl view create test --collection demo\n\n  # Create test view on demo collection with analyzer\n  gdnsl view create test --collection demo --analyzer identity\n\n  # Create test view on demo collection with fields\n  gdnsl view update test --collection demo --field "name:text_en,text_fr" --field "age:text_en"\n  \n  # Create test view on demo collection with store-values\n  gdnsl view create test --collection demo --store-values none\n\n  # Create test view on demo collection with track-list-positions\n  gdnsl view create test --collection demo --track-list-positions\n\n  # Create test view on demo collection with include-all-fields\n  gdnsl view create test --collection demo --include-all-fields\n\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Options:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'  -h, --help                   Help to create a view.\n      --analyzer string        Analyzers to be used for indexing of string values. Can be given multiple times. (default: identity).\n      --field string           Field and analyzers mapping in the format <fieldName:analyzer1,analyzer2> \n                               Example: "age:text_en,text_fr". Can be given multiple times.\n      --store-values string    How should the view track the attribute values, this setting allows for additional value retrieval optimizations, one of:\n                               none: Do not store values by the view.\n                               id: Store only information about value presence, to allow use of the EXISTS() function (default "none").\n      --track-list-positions boolean  The flag determines whether or not values in a lists should be treated separate (default: false).\n      --include-all-fields boolean    The flag determines whether or not to index all fields on a particular level of depth (default: false).\n      --fabric                 Name of the fabric to use.\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Options inherited:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"  --config string              gdnsl config file (default is ./gdnsl.yaml)\n")),(0,l.kt)("h2",{id:"gdnsl-view-list"},"gdnsl view list"),(0,l.kt)("p",null,"Get list of views."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"gdnsl view list [flags]\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"  # List views\n  gdnsl view list\n\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Options:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"  -h, --help                  Help to get list of views.\n      --fabric                Name of the fabric to use.\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Options inherited:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"      --config string         gdnsl config file (default is ./gdnsl.yaml)\n")),(0,l.kt)("h2",{id:"gdnsl-view-describe"},"gdnsl view describe"),(0,l.kt)("p",null,"Describe a view."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"gdnsl view describe <view-name> [flags]\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"  # Describe demo view\n  gdnsl view describe demo\n\n  # Describe demo view properties\n  gdnsl view describe demo --properties\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Options:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"  -h, --help                  Help to describe a view.\n      --properties            View properties.\n      --fabric                Name of the fabric to use.\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Options inherited:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"      --config string         gdnsl config file (default is ./gdnsl.yaml)\n")),(0,l.kt)("h2",{id:"gdnsl-view-rename"},"gdnsl view rename"),(0,l.kt)("p",null,"Rename a view."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"gdnsl view rename <old-name> <new-name> [flags]\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"  # Rename test view with new name demo\n  gdnsl view rename test demo\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Options:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"  -h, --help                  Help to rename a view.\n      --fabric                Name of the fabric to use.\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Options inherited:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"     --config string         gdnsl config file (default is ./gdnsl.yaml)\n")),(0,l.kt)("h2",{id:"gdnsl-view-update"},"gdnsl view update"),(0,l.kt)("p",null,"Update a view. Enable or disable view capability of a collection."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"gdnsl view update <view-name> [flags]\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'  # update test view on demo collection with analyzer\n  gdnsl view update test --collection demo --analyzer identity\n\n  # update test view on demo collection with fields\n  gdnsl view update test --collection demo --field "name:text_en,text_fr" --field "age:text_en" \n  \n  # update test view on demo collection with store-values\n  gdnsl view update test --collection demo --store-values none\n\n  # update test view on demo collection with track-list-positions\n  gdnsl view update test --collection demo --track-list-positions\n\n  # update test view on demo collection with include-all-fields\n  gdnsl view update test --collection demo --include-all-fields\n\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Options:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'  -h, --help                          Help to describe a view.\n      --analyzer string               Analyzers to be used for indexing of string values. Can be given multiple times. (default: identity).\n      --field string                  Field and analyzers mapping in the format <fieldName:analyzer1,analyzer2> \n                                      Example: "age:text_en,text_fr". Can be given multiple times.\n      --store-values string           How should the view track the attribute values, this setting allows for additional value retrieval optimizations, one of:\n                                      none: Do not store values by the view.\n                                      id: Store only information about value presence, to allow use of the EXISTS() function (default "none").\n      --track-list-positions boolean  The flag determines whether or not values in a lists should be treated separate (default: false).\n      --include-all-fields boolean    The flag determines whether or not to index all fields on a particular level of depth (default: false).\n      --fabric                        Name of the fabric to use.\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Options inherited:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"  --config string                     gdnsl config file (default is ./gdnsl.yaml)\n")),(0,l.kt)("h2",{id:"gdnsl-view-delete"},"gdnsl view delete"),(0,l.kt)("p",null,"Delete a view."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"gdnsl view delete <view-name> [flags]\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"  # Delete demo view\n  gdnsl view delete demo\n\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Options:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"  -h, --help                  Help to delete a view.\n      --fabric                Name of the fabric to use.\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Options inherited:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"    --config string           gdnsl config file (default is ./gdnsl.yaml)\n")))}c.isMDXComponent=!0}}]);