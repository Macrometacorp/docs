"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[85898],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>c});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},s=Object.keys(e);for(r=0;r<s.length;r++)a=s[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)a=s[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var m=r.createContext({}),i=function(e){var t=r.useContext(m),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=i(e.components);return r.createElement(m.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,s=e.originalType,m=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=i(a),c=n,N=u["".concat(m,".").concat(c)]||u[c]||d[c]||s;return a?r.createElement(N,l(l({ref:t},p),{},{components:a})):r.createElement(N,l({ref:t},p))}));function c(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=a.length,l=new Array(s);l[0]=u;var o={};for(var m in t)hasOwnProperty.call(t,m)&&(o[m]=t[m]);o.originalType=e,o.mdxType="string"==typeof e?e:n,l[1]=o;for(var i=2;i<s;i++)l[i]=a[i];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},96950:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>m,contentTitle:()=>l,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>i});var r=a(87462),n=(a(67294),a(3905));const s={sidebar_position:1,title:"Global Address Book"},l=void 0,o={unversionedId:"apps/address-book",id:"apps/address-book",title:"Global Address Book",description:"Using Streams",source:"@site/docs/apps/address-book.md",sourceDirName:"apps",slug:"/apps/address-book",permalink:"/docs/apps/address-book",draft:!1,editUrl:"https://github.com/macrometacorp/docs/edit/main/docs/apps/address-book.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Global Address Book"},sidebar:"defaultSidebar",previous:{title:"Overview",permalink:"/docs/apps"},next:{title:"Crypto Trading Bot",permalink:"/docs/apps/crypto-trading"}},m={},i=[{value:"Using Streams",id:"using-streams",level:2},{value:"On GDN",id:"on-gdn",level:3},{value:"Using RESTQL",id:"using-restql",level:2},{value:"GDN",id:"gdn",level:3}],p={toc:i};function d(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"using-streams"},"Using Streams"),(0,n.kt)("h3",{id:"on-gdn"},"On GDN"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"th"},"Email")),(0,n.kt)("th",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"th"},"Passsword")),(0,n.kt)("th",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"th"},"Geo Fabric")),(0,n.kt)("th",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"th"},"Collection")),(0,n.kt)("th",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"th"},"GUI")),(0,n.kt)("th",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"th"},"Source Code")))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"mailto:demo@macrometa.io"},"demo@macrometa.io")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"xxxxxxxx")),(0,n.kt)("td",{parentName:"tr",align:null},"_","system"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"addresses")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"https://macrometacorp.github.io/tutorial-addressbook-streams/"},"AddressBook")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"https://github.com/Macrometacorp/tutorial-addressbook-streams"},"github"))))),(0,n.kt)("p",null,"Populate ",(0,n.kt)("inlineCode",{parentName:"p"},"addresses")," collection with data:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},'\n// Query to insert addresses\nFOR persons IN [\n  { firstName: "Joseph", lastName: "Smith", email: "jsmith2020@gmail.com" },\n  { firstName: "Astrid", lastName: "Young", email: "missmoneybags@young.co.sg" },\n  { firstName: "Boris", lastName: "Balastikov", email: "bb@refundit.com" },\n  { firstName: "Sherlock", lastName: "Jones", email: "pd@elementary.org" },\n  { firstName: "Alpha", lastName: "Simpson", email: "alf@simpsonrealtech.com" },\n  { firstName: "Jose", lastName: "Garcia", email: "j.garcia@nebulus.com" },\n  { firstName: "Lee", lastName: "Ki", email: "Lee.ki@symbol.com" },\n  { firstName: "Mark", lastName: "Goldfine", email: "mark@tidalwave.com" },\n  { firstName: "Ramesh", lastName: "Sriram", email: "ramesh@lifely.com" } \n  ]\n  INSERT persons INTO addresses\n\n')),(0,n.kt)("p",null,"Queries for RESTQL"),(0,n.kt)("p",null,"Query Name: addAddress"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"INSERT { firstName: @firstName, lastName: @lastName, email: @email }\n  INTO addresses\n")),(0,n.kt)("p",null,"Query Name: getAddresses"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"FOR address IN addresses\n    RETURN address\n")),(0,n.kt)("p",null,"Query Name: updateEmail"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"UPDATE { _key: @key }\n  WITH { email: @email }\n  IN addresses\n")),(0,n.kt)("p",null,"Query Name: removeAddress"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"REMOVE { _key: @key} \n  IN addresses\n")),(0,n.kt)("h2",{id:"using-restql"},"Using RESTQL"),(0,n.kt)("h3",{id:"gdn"},"GDN"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"th"},"Email")),(0,n.kt)("th",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"th"},"Passsword")),(0,n.kt)("th",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"th"},"Geo Fabric")),(0,n.kt)("th",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"th"},"Collection")),(0,n.kt)("th",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"th"},"GUI")),(0,n.kt)("th",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"th"},"Source Code")))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"mailto:demo@macrometa.io"},"demo@macrometa.io")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"xxxxxx")),(0,n.kt)("td",{parentName:"tr",align:null},"_","system"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"addresses")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"https://macrometacorp.github.io/tutorial-addressbook-restql/"},"AddressBook (RESTQL)")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"https://github.com/Macrometacorp/tutorial-addressbook-restql"},"github"))))),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Note: The demo app automatically creates the following RESTQLs as part of startup.")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"insertAddress:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"INSERT { firstName: @firstName, lastName: @lastName, email: @email}\n  INTO addresses\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"getAddresses:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"FOR entry IN addresses\n  RETURN entry\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"removeAddress:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"REMOVE @_key IN addresses\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"updateAddress:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"UPDATE @_key\n  WITH { firstName: @firstName, lastName: @lastName, email: @email }\n  IN addresses\n")))}d.isMDXComponent=!0}}]);