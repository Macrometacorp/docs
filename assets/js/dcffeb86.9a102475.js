"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[88030],{3905:(t,e,n)=>{n.d(e,{Zo:()=>s,kt:()=>N});var a=n(67294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function o(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},l=Object.keys(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var p=a.createContext({}),d=function(t){var e=a.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},s=function(t){var e=d(t.components);return a.createElement(p.Provider,{value:e},t.children)},m={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},u=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,l=t.originalType,p=t.parentName,s=o(t,["components","mdxType","originalType","parentName"]),u=d(n),N=r,k=u["".concat(p,".").concat(N)]||u[N]||m[N]||l;return n?a.createElement(k,i(i({ref:e},s),{},{components:n})):a.createElement(k,i({ref:e},s))}));function N(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=n.length,i=new Array(l);i[0]=u;var o={};for(var p in e)hasOwnProperty.call(e,p)&&(o[p]=e[p]);o.originalType=t,o.mdxType="string"==typeof t?t:r,i[1]=o;for(var d=2;d<l;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},19823:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>d});var a=n(87462),r=(n(67294),n(3905));const l={title:"http (Sink)"},i=void 0,o={unversionedId:"cep/sink/http",id:"cep/sink/http",title:"http (Sink)",description:"HTTP sink publishes messages via HTTP or HTTPS protocols using methods such as POST, GET, PUT, and DELETE on formats text and JSON. It can also publish to endpoints protected by basic authentication or OAuth 2.0.",source:"@site/docs/cep/sink/http.md",sourceDirName:"cep/sink",slug:"/cep/sink/http",permalink:"/docs/cep/sink/http",draft:!1,editUrl:"https://github.com/macrometacorp/docs/edit/main/docs/cep/sink/http.md",tags:[],version:"current",frontMatter:{title:"http (Sink)"},sidebar:"defaultSidebar",previous:{title:"http-service-response (Sink)",permalink:"/docs/cep/sink/http-service-response"},next:{title:"inMemory (Sink)",permalink:"/docs/cep/sink/inMemory"}},p={},d=[{value:"Syntax",id:"syntax",level:2},{value:"Query Parameters",id:"query-parameters",level:2},{value:"System Parameters",id:"system-parameters",level:2},{value:"Example 1",id:"example-1",level:2},{value:"Example 2",id:"example-2",level:2}],s={toc:d};function m(t){let{components:e,...n}=t;return(0,r.kt)("wrapper",(0,a.Z)({},s,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"HTTP sink publishes messages via HTTP or HTTPS protocols using methods such as POST, GET, PUT, and DELETE on formats ",(0,r.kt)("inlineCode",{parentName:"p"},"text")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"JSON"),". It can also publish to endpoints protected by basic authentication or OAuth 2.0."),(0,r.kt)("h2",{id:"syntax"},"Syntax"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'CREATE SINK <NAME> WITH (type="http", map.type="<STRING>" publisher.url="<STRING>", basic.auth.username="<STRING>", basic.auth.password="<STRING>", https.truststore.file="<STRING>", https.truststore.password="<STRING>", oauth.username="<STRING>", oauth.password="<STRING>", consumer.key="<STRING>", consumer.secret="<STRING>", token.url="<STRING>", refresh.token="<STRING>", headers="<STRING>", method="<STRING>", socket.idle.timeout="<INT>", chunk.disabled="<BOOL>", ssl.protocol="<STRING>", ssl.verification.disabled="<BOOL>", tls.store.type="<STRING>", ssl.configurations="<STRING>", proxy.host="<STRING>", proxy.port="<STRING>", proxy.username="<STRING>", proxy.password="<STRING>", client.bootstrap.configurations="<STRING>", max.pool.active.connections="<INT>", min.pool.idle.connections="<INT>", max.pool.idle.connections="<INT>", min.evictable.idle.time="<STRING>", time.between.eviction.runs="<STRING>", max.wait.time="<STRING>", test.on.borrow="<BOOL>", test.while.idle="<BOOL>", exhausted.action="<INT>", hostname.verification.enabled="<BOOL>")\n')),(0,r.kt)("h2",{id:"query-parameters"},"Query Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Default Value"),(0,r.kt)("th",{parentName:"tr",align:null},"Possible Data Types"),(0,r.kt)("th",{parentName:"tr",align:null},"Optional"),(0,r.kt)("th",{parentName:"tr",align:null},"Dynamic"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"publisher.url"),(0,r.kt)("td",{parentName:"tr",align:null},"The URL to which the outgoing events should be published. Examples: ",(0,r.kt)("inlineCode",{parentName:"td"},"http://localhost:8080/endpoint"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"https://localhost:8080/endpoint")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"STRING"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"No")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"basic.auth.username"),(0,r.kt)("td",{parentName:"tr",align:null},"The username to be included in the authentication header when calling endpoints protected by basic authentication. ",(0,r.kt)("inlineCode",{parentName:"td"},"basic.auth.password")," property should be also set when using this property."),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"STRING"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"No")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"basic.auth.password"),(0,r.kt)("td",{parentName:"tr",align:null},"The password to be included in the authentication header when calling endpoints protected by basic authentication. ",(0,r.kt)("inlineCode",{parentName:"td"},"basic.auth.username")," property should be also set when using this property."),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"STRING"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"No")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"https.truststore.file"),(0,r.kt)("td",{parentName:"tr",align:null},"The file path of the client truststore when sending messages through ",(0,r.kt)("inlineCode",{parentName:"td"},"https")," protocol."),(0,r.kt)("td",{parentName:"tr",align:null},"`","\\${carbon.home}/resources/security/client-truststore.jks","`"),(0,r.kt)("td",{parentName:"tr",align:null},"STRING"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"No")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"https.truststore.password"),(0,r.kt)("td",{parentName:"tr",align:null},"The password for the client-truststore."),(0,r.kt)("td",{parentName:"tr",align:null},"gdncarbon"),(0,r.kt)("td",{parentName:"tr",align:null},"STRING"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"No")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"oauth.username"),(0,r.kt)("td",{parentName:"tr",align:null},"The username to be included in the authentication header when calling endpoints protected by OAuth 2.0. ",(0,r.kt)("inlineCode",{parentName:"td"},"oauth.password")," property should be also set when using this property."),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"STRING"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"No")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"oauth.password"),(0,r.kt)("td",{parentName:"tr",align:null},"The password to be included in the authentication header when calling endpoints protected by OAuth 2.0. ",(0,r.kt)("inlineCode",{parentName:"td"},"oauth.username")," property should be also set when using this property."),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"STRING"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"No")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"consumer.key"),(0,r.kt)("td",{parentName:"tr",align:null},"Consumer key used for calling endpoints protected by OAuth 2.0"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"STRING"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"No")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"consumer.secret"),(0,r.kt)("td",{parentName:"tr",align:null},"Consumer secret used for calling endpoints protected by OAuth 2.0"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"STRING"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"No")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"token.url"),(0,r.kt)("td",{parentName:"tr",align:null},"Token URL to generate a new access tokens when calling endpoints protected by OAuth 2.0"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"STRING"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"No")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"refresh.token"),(0,r.kt)("td",{parentName:"tr",align:null},"Refresh token used for generating new access tokens when calling endpoints protected by OAuth 2.0"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"STRING"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"No")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"headers"),(0,r.kt)("td",{parentName:"tr",align:null},"HTTP request headers in format ",(0,r.kt)("inlineCode",{parentName:"td"},"\"'<key>:<value>','<key>:<value>'\""),". When ",(0,r.kt)("inlineCode",{parentName:"td"},"Content-Type")," header is not provided the system derives the Content-Type based on the provided sink mapper as following: - ",(0,r.kt)("inlineCode",{parentName:"td"},"map.type='json'"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"application/json"),"  - ",(0,r.kt)("inlineCode",{parentName:"td"},"map.type='text'"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"plain/text"),"  - ",(0,r.kt)("inlineCode",{parentName:"td"},"map.type='keyvalue'"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"application/x-www-form-urlencoded"),"  - For all other cases system defaults to ",(0,r.kt)("inlineCode",{parentName:"td"},"plain/text")," Also the ",(0,r.kt)("inlineCode",{parentName:"td"},"Content-Length")," header need not to be provided, as the system automatically defines it by calculating the size of the payload."),(0,r.kt)("td",{parentName:"tr",align:null},"Content-Type and Content-Length headers"),(0,r.kt)("td",{parentName:"tr",align:null},"STRING"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"No")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"method"),(0,r.kt)("td",{parentName:"tr",align:null},"The HTTP method used for calling the endpoint."),(0,r.kt)("td",{parentName:"tr",align:null},"POST"),(0,r.kt)("td",{parentName:"tr",align:null},"STRING"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"No")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"socket.idle.timeout"),(0,r.kt)("td",{parentName:"tr",align:null},"Socket timeout in millis."),(0,r.kt)("td",{parentName:"tr",align:null},"6000"),(0,r.kt)("td",{parentName:"tr",align:null},"INT"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"No")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"chunk.disabled"),(0,r.kt)("td",{parentName:"tr",align:null},"Disable chunked transfer encoding."),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"BOOL"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"No")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ssl.protocol"),(0,r.kt)("td",{parentName:"tr",align:null},"SSL/TLS protocol."),(0,r.kt)("td",{parentName:"tr",align:null},"TLS"),(0,r.kt)("td",{parentName:"tr",align:null},"STRING"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"No")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ssl.verification.disabled"),(0,r.kt)("td",{parentName:"tr",align:null},"Disable SSL verification."),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"BOOL"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"No")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"tls.store.type"),(0,r.kt)("td",{parentName:"tr",align:null},"TLS store type."),(0,r.kt)("td",{parentName:"tr",align:null},"JKS"),(0,r.kt)("td",{parentName:"tr",align:null},"STRING"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"No")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ssl.configurations"),(0,r.kt)("td",{parentName:"tr",align:null},"SSL/TSL configurations in format ",(0,r.kt)("inlineCode",{parentName:"td"},"\"'<key>:<value>','<key>:<value>'\""),". Some supported parameters:  - SSL/TLS protocols: ",(0,r.kt)("inlineCode",{parentName:"td"},"'sslEnabledProtocols:TLSv1.1,TLSv1.2'"),"  - List of ciphers: ",(0,r.kt)("inlineCode",{parentName:"td"},"'ciphers:TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256'"),"  - Enable session creation: ",(0,r.kt)("inlineCode",{parentName:"td"},"'client.enable.session.creation:true'"),"  - Supported server names: ",(0,r.kt)("inlineCode",{parentName:"td"},"'server.suported.server.names:server'"),"  - Add HTTP SNIMatcher: ",(0,r.kt)("inlineCode",{parentName:"td"},"'server.supported.snimatchers:SNIMatcher'")),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"STRING"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"No")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"proxy.host"),(0,r.kt)("td",{parentName:"tr",align:null},"Proxy server host"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"STRING"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"No")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"proxy.port"),(0,r.kt)("td",{parentName:"tr",align:null},"Proxy server port"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"STRING"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"No")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"proxy.username"),(0,r.kt)("td",{parentName:"tr",align:null},"Proxy server username"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"STRING"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"No")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"proxy.password"),(0,r.kt)("td",{parentName:"tr",align:null},"Proxy server password"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"STRING"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"No")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"client.bootstrap.configurations"),(0,r.kt)("td",{parentName:"tr",align:null},"Client bootstrap configurations in format ",(0,r.kt)("inlineCode",{parentName:"td"},"\"'<key>:<value>','<key>:<value>'\""),". Some supported configurations :  - Client connect timeout in millis: ",(0,r.kt)("inlineCode",{parentName:"td"},"'client.bootstrap.connect.timeout:15000'"),"  - Client socket timeout in seconds: ",(0,r.kt)("inlineCode",{parentName:"td"},"'client.bootstrap.socket.timeout:15'"),"  - Client socket reuse: ",(0,r.kt)("inlineCode",{parentName:"td"},"'client.bootstrap.socket.reuse:true'"),"  - Enable TCP no delay: ",(0,r.kt)("inlineCode",{parentName:"td"},"'client.bootstrap.nodelay:true'"),"  - Enable client keep alive: ",(0,r.kt)("inlineCode",{parentName:"td"},"'client.bootstrap.keepalive:true'"),"  - Send buffer size: ",(0,r.kt)("inlineCode",{parentName:"td"},"'client.bootstrap.sendbuffersize:1048576'"),"  - Receive buffer size: ",(0,r.kt)("inlineCode",{parentName:"td"},"'client.bootstrap.recievebuffersize:1048576'")),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"STRING"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"No")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"max.pool.active.connections"),(0,r.kt)("td",{parentName:"tr",align:null},"Maximum possible number of active connection per client pool."),(0,r.kt)("td",{parentName:"tr",align:null},"-1"),(0,r.kt)("td",{parentName:"tr",align:null},"INT"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"No")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"min.pool.idle.connections"),(0,r.kt)("td",{parentName:"tr",align:null},"Minimum number of idle connections that can exist per client pool."),(0,r.kt)("td",{parentName:"tr",align:null},"0"),(0,r.kt)("td",{parentName:"tr",align:null},"INT"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"No")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"max.pool.idle.connections"),(0,r.kt)("td",{parentName:"tr",align:null},"Maximum number of idle connections that can exist per client pool."),(0,r.kt)("td",{parentName:"tr",align:null},"100"),(0,r.kt)("td",{parentName:"tr",align:null},"INT"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"No")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"min.evictable.idle.time"),(0,r.kt)("td",{parentName:"tr",align:null},"Minimum time (in millis) a connection may sit idle in the client pool before it become eligible for eviction."),(0,r.kt)("td",{parentName:"tr",align:null},"300000"),(0,r.kt)("td",{parentName:"tr",align:null},"STRING"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"No")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"time.between.eviction.runs"),(0,r.kt)("td",{parentName:"tr",align:null},"Time between two eviction operations (in millis) on the client pool."),(0,r.kt)("td",{parentName:"tr",align:null},"30000"),(0,r.kt)("td",{parentName:"tr",align:null},"STRING"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"No")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"max.wait.time"),(0,r.kt)("td",{parentName:"tr",align:null},"The maximum time (in millis) the pool will wait (when there are no available connections) for a connection to be returned to the pool."),(0,r.kt)("td",{parentName:"tr",align:null},"60000"),(0,r.kt)("td",{parentName:"tr",align:null},"STRING"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"No")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"test.on.borrow"),(0,r.kt)("td",{parentName:"tr",align:null},"Enable connections to be validated before being borrowed from the client pool."),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},"BOOL"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"No")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"test.while.idle"),(0,r.kt)("td",{parentName:"tr",align:null},"Enable connections to be validated during the eviction operation (if any)."),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},"BOOL"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"No")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"exhausted.action"),(0,r.kt)("td",{parentName:"tr",align:null},"Action that should be taken when the maximum number of active connections are being used. This action should be indicated as an int and possible action values are following. 0 - Fail the request. 1 - Block the request, until a connection returns to the pool. 2 - Grow the connection pool size."),(0,r.kt)("td",{parentName:"tr",align:null},"1 (Block when exhausted)"),(0,r.kt)("td",{parentName:"tr",align:null},"INT"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"No")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"hostname.verification.enabled"),(0,r.kt)("td",{parentName:"tr",align:null},"Enable hostname verification."),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},"BOOL"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"No")))),(0,r.kt)("h2",{id:"system-parameters"},"System Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Default Value"),(0,r.kt)("th",{parentName:"tr",align:null},"Possible Parameters"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"clientBootstrapClientGroupSize"),(0,r.kt)("td",{parentName:"tr",align:null},"Number of client threads to perform non-blocking read and write to one or more channels."),(0,r.kt)("td",{parentName:"tr",align:null},"(Number of available processors) ","*"," 2"),(0,r.kt)("td",{parentName:"tr",align:null},"Any positive integer")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"clientBootstrapBossGroupSize"),(0,r.kt)("td",{parentName:"tr",align:null},"Number of boss threads to accept incoming connections."),(0,r.kt)("td",{parentName:"tr",align:null},"Number of available processors"),(0,r.kt)("td",{parentName:"tr",align:null},"Any positive integer")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"clientBootstrapWorkerGroupSize"),(0,r.kt)("td",{parentName:"tr",align:null},"Number of worker threads to accept the connections from boss threads and perform non-blocking read and write from one or more channels."),(0,r.kt)("td",{parentName:"tr",align:null},"(Number of available processors) ","*"," 2"),(0,r.kt)("td",{parentName:"tr",align:null},"Any positive integer")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"trustStoreLocation"),(0,r.kt)("td",{parentName:"tr",align:null},"The default truststore file path."),(0,r.kt)("td",{parentName:"tr",align:null},"`","\\${carbon.home}/resources/security/client-truststore.jks","`"),(0,r.kt)("td",{parentName:"tr",align:null},"Path to client truststore ","`",".jks","`"," file")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"trustStorePassword"),(0,r.kt)("td",{parentName:"tr",align:null},"The default truststore password."),(0,r.kt)("td",{parentName:"tr",align:null},"gdncarbon"),(0,r.kt)("td",{parentName:"tr",align:null},"Truststore password as string")))),(0,r.kt)("h2",{id:"example-1"},"Example 1"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"CREATE SINK StockStream WITH (type = 'http', map.type = 'json', publisher.url = 'http://stocks.com/stocks') (symbol string, price float, volume long);\n")),(0,r.kt)("p",null,"Events arriving on the StockStream will be published to the HTTP endpoint ",(0,r.kt)("inlineCode",{parentName:"p"},"http://stocks.com/stocks")," using ",(0,r.kt)("inlineCode",{parentName:"p"},"POST")," method with Content-Type ",(0,r.kt)("inlineCode",{parentName:"p"},"application/json")," by converting those events to the default JSON format:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{\n  "event": {\n    "symbol": "FB",\n    "price": 24.5,\n    "volume": 5000\n  }\n}\n')),(0,r.kt)("h2",{id:"example-2"},"Example 2"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"CREATE SINK FooStream WITH (type='http', map.type='json', publisher.url = 'http://localhost:8009/foo', client.bootstrap.configurations = \"'client.bootstrap.socket.timeout:20'\", max.pool.active.connections = '1', headers = \"{{headers}}\", map.payload=\"\"\"<stock>{{payloadBody}}</stock>\"\"\") (payloadBody string, headers string);\n")),(0,r.kt)("p",null,"Events arriving on FooStream will be published to the HTTP endpoint ",(0,r.kt)("inlineCode",{parentName:"p"},"http://localhost:8009/foo")," using ",(0,r.kt)("inlineCode",{parentName:"p"},"POST")," method with Content-Type ",(0,r.kt)("inlineCode",{parentName:"p"},"application/json")," and setting ",(0,r.kt)("inlineCode",{parentName:"p"},"payloadBody")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"header")," attribute values. If the ",(0,r.kt)("inlineCode",{parentName:"p"},"payloadBody")," contains"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{\n  "symbol": "gdn",\n  "price": 55.6,\n  "volume": 100\n}\n')),(0,r.kt)("p",null,"and ",(0,r.kt)("inlineCode",{parentName:"p"},"header")," contains ",(0,r.kt)("inlineCode",{parentName:"p"},"'topic:foobar'")," values, then the system will generate an output with the body:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{\n  "stock": {\n    "symbol": "gdn",\n    "price": 55.6,\n    "volume": 100\n  }\n}\n')),(0,r.kt)("p",null,"and HTTP headers: ",(0,r.kt)("inlineCode",{parentName:"p"},"Content-Length:xxx"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Content-Location:'xxx'"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Content-Type:'application/json'"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"HTTP_METHOD:'POST'")))}m.isMDXComponent=!0}}]);