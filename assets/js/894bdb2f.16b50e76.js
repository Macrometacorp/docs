"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9940],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),i=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=i(e.components);return a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),c=i(n),d=r,g=c["".concat(s,".").concat(d)]||c[d]||m[d]||o;return n?a.createElement(g,l(l({ref:t},u),{},{components:n})):a.createElement(g,l({ref:t},u))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=c;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:r,l[1]=p;for(var i=2;i<o;i++)l[i]=n[i];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},43546:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>p,toc:()=>i});var a=n(87462),r=(n(67294),n(3905));const o={title:"json (Source Mapper)"},l=void 0,p={unversionedId:"cep/query-guide/functions/sourcemapper/json",id:"cep/query-guide/functions/sourcemapper/json",title:"json (Source Mapper)",description:"This extension is a JSON-to-Event input mapper. Transports that accept",source:"@site/docs/cep/query-guide/functions/sourcemapper/json.md",sourceDirName:"cep/query-guide/functions/sourcemapper",slug:"/cep/query-guide/functions/sourcemapper/json",permalink:"/docs/cep/query-guide/functions/sourcemapper/json",draft:!1,editUrl:"https://github.com/macrometacorp/docs/edit/main/docs/cep/query-guide/functions/sourcemapper/json.md",tags:[],version:"current",frontMatter:{title:"json (Source Mapper)"},sidebar:"defaultSidebar",previous:{title:"csv (Source Mapper)",permalink:"/docs/cep/query-guide/functions/sourcemapper/csv"},next:{title:"keyvalue (Source Mapper)",permalink:"/docs/cep/query-guide/functions/sourcemapper/keyvalue"}},s={},i=[{value:"Syntax",id:"syntax",level:2},{value:"Query Parameters",id:"query-parameters",level:2},{value:"Example 1",id:"example-1",level:2},{value:"Example 2",id:"example-2",level:2},{value:"Example 3",id:"example-3",level:2},{value:"Example 4",id:"example-4",level:2}],u={toc:i};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This extension is a JSON-to-Event input mapper. Transports that accept\nJSON messages can use this extension to convert an incoming JSON\nmessage into a Stream App event."),(0,r.kt)("p",null,'Users can either send a pre-defined JSON\nformat, where event conversion happens without any configurations, or\nuse the JSON path to map from a custom JSON message. In default mapping,\nthe JSON string of the event can be enclosed by the element "event",\nthough optional.'),(0,r.kt)("h2",{id:"syntax"},"Syntax"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'    CREATE SOURCE <NAME> WITH (map.type="json", enclosing.element="<STRING>", fail.on.missing.attribute="<BOOL>")\n')),(0,r.kt)("h2",{id:"query-parameters"},"Query Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Default Value"),(0,r.kt)("th",{parentName:"tr",align:null},"Possible Data Types"),(0,r.kt)("th",{parentName:"tr",align:null},"Optional"),(0,r.kt)("th",{parentName:"tr",align:null},"Dynamic"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"enclosing.element"),(0,r.kt)("td",{parentName:"tr",align:null},"This is used to specify the enclosing element when sending multiple events in the same JSON message. Mapper treats the child elements of a given enclosing element as events and executes the JSON path expressions on these child elements. If the enclosing.element is not provided then the multiple-event scenario is disregarded and the JSON path is evaluated based on the root element."),(0,r.kt)("td",{parentName:"tr",align:null},"\\$"),(0,r.kt)("td",{parentName:"tr",align:null},"STRING"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"No")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"fail.on.missing.attribute"),(0,r.kt)("td",{parentName:"tr",align:null},"This parameter allows users to handle unknown attributes.The value of this can either be true or false. By default it is true.  If a JSON execution fails or returns null, mapper drops that message. However, setting this property to false prompts mapper to send an event with a null value to Stream App, where users can handle it as required, ie., assign a default value.)"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},"BOOL"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"No")))),(0,r.kt)("h2",{id:"example-1"},"Example 1"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"    CREATE SOURCE FooStream WITH (type='stream', topic='stock', map.type='json') (symbol string, price float, volume long);\n")),(0,r.kt)("p",null,"This configuration performs a default JSON input mapping. For a single\nevent, the input is required to be in one of the following formats:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'    {\xa0\xa0\xa0\xa0\n        "event":{\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\n            "symbol":"GDN",\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\n            "price":55.6,\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\n            "volume":100\xa0\xa0\xa0\xa0\n        }\n    }\n')),(0,r.kt)("p",null,"or"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'    {\xa0\xa0\xa0\xa0\n        "symbol":"GDN",\xa0\xa0\xa0\xa0\n        "price":55.6,\xa0\xa0\xa0\xa0\n        "volume":100\n    }\n')),(0,r.kt)("h2",{id:"example-2"},"Example 2"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"    CREATE SOURCE FooStream WITH (type='stream', topic='stock', map.type='json') (symbol string, price float, volume long);\n")),(0,r.kt)("p",null,"This configuration performs a default JSON input mapping. For multiple\nevents, the input is required to be in one of the following formats:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'    [\n        {"event":\n            {"symbol":"GDN","price":55.6,"volume":100}\n        },\n        {"event":\n            {"symbol":"GDN","price":56.6,"volume":99}\n        },\n        {"event":\n            {"symbol":"GDN","price":57.6,"volume":80}\n        }\n    ]\n')),(0,r.kt)("p",null,"or"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'    [\n        {"symbol":"GDN","price":55.6,"volume":100},\n        {"symbol":"GDN","price":56.6,"volume":99},\n        {"symbol":"GDN","price":57.6,"volume":80}\n    ]\n')),(0,r.kt)("h2",{id:"example-3"},"Example 3"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'    CREATE SOURCE FooStream WITH (type=\'stream\', topic=\'stock\', map.type=\'json\', enclosing.element="$.portfolio", map.attributes.symbol="company.symbol", map.attributes.price="price", map.attributes.volume="volume" ) (symbol string, price float, volume long);\n')),(0,r.kt)("p",null,"This configuration performs a custom JSON mapping. For a single event,\nthe expected input is similar to the one shown below:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'    {\xa0\n     "portfolio":{\xa0\xa0\xa0\xa0\xa0\n            "stock":{\n                "volume":100,\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\n                "company":{\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\n                    "symbol":"GDN"\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\n                },\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\n                "price":55.6\xa0\xa0\xa0\xa0\xa0\xa0\xa0\n            }\xa0\xa0\xa0\n        }\n    }\n')),(0,r.kt)("h2",{id:"example-4"},"Example 4"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"    CREATE SOURCE FooStream WITH (type='stream', topic='stock', map.type='json', enclosing.element=\"$.portfolio\", map.attributes.symbol = 'stock.company.symbol', map.attributes.price = 'stock.price', map.attributes.volume = 'stock.volume') (symbol string, price float, volume long);```\n")),(0,r.kt)("p",null,"The configuration performs a custom JSON mapping. For multiple events, expected input looks as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'    {"portfolio":\xa0\xa0\xa0\n        [\n            {"stock":{\n                "volume":100,\n                "company":{\n                    "symbol":"GDN"\n                },\n                "price":56.6\n                }\n            },\n            {"stock":{\n                "volume":200,\n                "company":{\n                    "symbol":"GDN"\n                },\n                "price":57.6\n                }\n            }\n        ]\n    }\n')))}m.isMDXComponent=!0}}]);