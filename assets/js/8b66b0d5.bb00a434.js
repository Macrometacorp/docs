"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[30811],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=s(n),d=a,g=m["".concat(p,".").concat(d)]||m[d]||u[d]||o;return n?r.createElement(g,i(i({ref:t},c),{},{components:n})):r.createElement(g,i({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},87599:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=n(87462),a=(n(67294),n(3905));const o={title:"contains (Function)"},i=void 0,l={unversionedId:"cep/query-guide/functions/geospatial/contains",id:"cep/query-guide/functions/geospatial/contains",title:"contains (Function)",description:"Two available sets of parameters:",source:"@site/docs/cep/query-guide/functions/geospatial/contains.md",sourceDirName:"cep/query-guide/functions/geospatial",slug:"/cep/query-guide/functions/geospatial/contains",permalink:"/docs/cep/query-guide/functions/geospatial/contains",draft:!1,editUrl:"https://github.com/macrometacorp/docs/edit/main/docs/cep/query-guide/functions/geospatial/contains.md",tags:[],version:"current",frontMatter:{title:"contains (Function)"},sidebar:"defaultSidebar",previous:{title:"closestPoints (Stream Function)",permalink:"/docs/cep/query-guide/functions/geospatial/closestpoints"},next:{title:"crosses (Stream Processor)",permalink:"/docs/cep/query-guide/functions/geospatial/crosses"}},p={},s=[{value:"Syntax",id:"syntax",level:2},{value:"Query Parameters",id:"query-parameters",level:2},{value:"Example 1",id:"example-1",level:2},{value:"Example 2",id:"example-2",level:2}],c={toc:s};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Two available sets of parameters:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"First set returns ",(0,a.kt)("inlineCode",{parentName:"li"},"true")," if the specified coordinates are contained within the ",(0,a.kt)("inlineCode",{parentName:"li"},"geo.json.geometry.fence"),"."),(0,a.kt)("li",{parentName:"ul"},"Second set returns ",(0,a.kt)("inlineCode",{parentName:"li"},"true")," if the ",(0,a.kt)("inlineCode",{parentName:"li"},"geo.json.geometry")," is contained within the ",(0,a.kt)("inlineCode",{parentName:"li"},"geo.json.geometry.fence"),".")),(0,a.kt)("h2",{id:"syntax"},"Syntax"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"<BOOL> geo:contains(<DOUBLE> longitude, <DOUBLE> latitude, <STRING> geo.json.geometry.fence)\n<BOOL> geo:contains(<STRING> geo.json.geometry, <STRING> geo.json.geometry.fence)\n")),(0,a.kt)("h2",{id:"query-parameters"},"Query Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"),(0,a.kt)("th",{parentName:"tr",align:null},"Possible Data Types"),(0,a.kt)("th",{parentName:"tr",align:null},"Optional"),(0,a.kt)("th",{parentName:"tr",align:null},"Dynamic"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"longitude"),(0,a.kt)("td",{parentName:"tr",align:null},"Longitude of the geo location."),(0,a.kt)("td",{parentName:"tr",align:null},"DOUBLE"),(0,a.kt)("td",{parentName:"tr",align:null},"Yes"),(0,a.kt)("td",{parentName:"tr",align:null},"Yes")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"latitude"),(0,a.kt)("td",{parentName:"tr",align:null},"Latitude of the geo location."),(0,a.kt)("td",{parentName:"tr",align:null},"DOUBLE"),(0,a.kt)("td",{parentName:"tr",align:null},"Yes"),(0,a.kt)("td",{parentName:"tr",align:null},"Yes")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"geo.json.geometry"),(0,a.kt)("td",{parentName:"tr",align:null},"String that contains geometry type and coordinates for a GeoJSON geometry."),(0,a.kt)("td",{parentName:"tr",align:null},"STRING"),(0,a.kt)("td",{parentName:"tr",align:null},"Yes"),(0,a.kt)("td",{parentName:"tr",align:null},"Yes")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"geo.json.geometry.fence"),(0,a.kt)("td",{parentName:"tr",align:null},"String that contains geometry type and coordinates for a GeoJSON geometry fence."),(0,a.kt)("td",{parentName:"tr",align:null},"String"),(0,a.kt)("td",{parentName:"tr",align:null},"No"),(0,a.kt)("td",{parentName:"tr",align:null},"Yes")))),(0,a.kt)("h2",{id:"example-1"},"Example 1"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"geo:contains(0.5, 0.5, {'type':'Polygon','coordinates':[[[0,0],[0,2],[1,2],[1,0],[0,0]]]} )\n")),(0,a.kt)("p",null,"This example returns ",(0,a.kt)("inlineCode",{parentName:"p"},"true")," because the coordinates are within the ",(0,a.kt)("inlineCode",{parentName:"p"},"geo.json.geometry.fence"),"."),(0,a.kt)("h2",{id:"example-2"},"Example 2"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"geo:contains( {'type': 'Circle', 'radius': 110575, 'coordinates':[1.5, 1.5]} , {'type':'Polygon','coordinates':[[[0,0],[0,4],[3,4],[3,0],[0,0]]]} )\n")),(0,a.kt)("p",null,"This example returns ",(0,a.kt)("inlineCode",{parentName:"p"},"true")," because ",(0,a.kt)("inlineCode",{parentName:"p"},"geo.json.geometry")," is within ",(0,a.kt)("inlineCode",{parentName:"p"},"geo.json.geometry.fence"),"."))}u.isMDXComponent=!0}}]);