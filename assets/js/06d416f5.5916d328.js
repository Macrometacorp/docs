"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3983],{3905:(e,a,t)=>{t.d(a,{Zo:()=>c,kt:()=>d});var r=t(67294);function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function o(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?o(Object(t),!0).forEach((function(a){n(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function i(e,a){if(null==e)return{};var t,r,n=function(e,a){if(null==e)return{};var t,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var l=r.createContext({}),p=function(e){var a=r.useContext(l),t=a;return e&&(t="function"==typeof e?e(a):s(s({},a),e)),t},c=function(e){var a=p(e.components);return r.createElement(l.Provider,{value:a},e.children)},u={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},m=r.forwardRef((function(e,a){var t=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=p(t),d=n,k=m["".concat(l,".").concat(d)]||m[d]||u[d]||o;return t?r.createElement(k,s(s({ref:a},c),{},{components:t})):r.createElement(k,s({ref:a},c))}));function d(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var o=t.length,s=new Array(o);s[0]=m;var i={};for(var l in a)hasOwnProperty.call(a,l)&&(i[l]=a[l]);i.originalType=e,i.mdxType="string"==typeof e?e:n,s[1]=i;for(var p=2;p<o;p++)s[p]=t[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},33894:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var r=t(87462),n=(t(67294),t(3905));const o={sidebar_position:10,title:"Kafka Java Client"},s=void 0,i={unversionedId:"streams/kafka_on_gdn/kafka-java-client",id:"streams/kafka_on_gdn/kafka-java-client",title:"Kafka Java Client",description:"You can use Kafka Java client to create Java producer, consumer.",source:"@site/docs/streams/kafka_on_gdn/kafka-java-client.md",sourceDirName:"streams/kafka_on_gdn",slug:"/streams/kafka_on_gdn/kafka-java-client",permalink:"/docs/streams/kafka_on_gdn/kafka-java-client",draft:!1,editUrl:"https://github.com/macrometacorp/docs/edit/main/docs/streams/kafka_on_gdn/kafka-java-client.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10,title:"Kafka Java Client"},sidebar:"defaultSidebar",previous:{title:"Kafka on GDN - Beta",permalink:"/docs/streams/kafka_on_gdn/"},next:{title:"Kafka Python Client",permalink:"/docs/streams/kafka_on_gdn/kafka-python-client"}},l={},p=[{value:"Installation",id:"installation",level:2},{value:"Maven",id:"maven",level:2},{value:"Kafka Properties",id:"kafka-properties",level:2},{value:"Producer",id:"producer",level:2},{value:"Consumer",id:"consumer",level:2}],c={toc:p};function u(e){let{components:a,...t}=e;return(0,n.kt)("wrapper",(0,r.Z)({},c,t,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"You can use Kafka Java client to create Java producer, consumer."),(0,n.kt)("p",null,"The Kafka consumer is ",(0,n.kt)("em",{parentName:"p"},"not")," thread-safe. The Kafka producer is thread-safe."),(0,n.kt)("p",null,"This document focuses only on the client API for producing and consuming messages on Kafka topics."),(0,n.kt)("h2",{id:"installation"},"Installation"),(0,n.kt)("p",null,"The latest version of the Kafka Java client library is available via ",(0,n.kt)("a",{parentName:"p",href:"https://mvnrepository.com/artifact/org.apache.kafka/kafka-clients"},"Maven Central"),". To use the latest version, add the ",(0,n.kt)("inlineCode",{parentName:"p"},"kafka-clients")," library to your build configuration."),(0,n.kt)("h2",{id:"maven"},"Maven"),(0,n.kt)("p",null,"If you use Maven, then add the following information to the pom.xml file:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"\x3c!-- in your <properties> block --\x3e\n<kafka.version>2.8.0</kafka.version>\n\n\x3c!-- in your <dependencies> block --\x3e\n<dependency>\n    <groupId>org.apache.kafka</groupId>\n    <artifactId>kafka-clients</artifactId>\n    <version>${kafka.version}</version>\n</dependency>\n")),(0,n.kt)("h2",{id:"kafka-properties"},"Kafka Properties"),(0,n.kt)("p",null,"To connect to Kafka using client libraries, you should specify the following Kafka properties:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},'Properties props = new Properties();\nString username = "<my-tenant>/<my-fabric>";\nString password = "token:<my-api-key or my-JWT>";\nString jaasTemplate = "org.apache.kafka.common.security.plain.PlainLoginModule required username=\\"%s\\" password=\\"%s\\";";\nString jaasCfg = String.format(jaasTemplate, username, password);\nprops.put("sasl.jaas.config", jaasCfg);\nprops.put("sasl.mechanism", "PLAIN");\nprops.put("security.protocol", "SASL_PLAINTEXT");\nprops.put("bootstrap.servers", "<my-gdn>.<my-paas>.macrometa.io:9092");\nNote: The topic/stream in GDN could be either global or local that was mentioned above in username variable.\n')),(0,n.kt)("p",null,"If you use TLS authentication, then you should add or replace the following Kafka properties:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},'props.put("security.protocol", "SASL_SSL");\nprops.put("ssl.truststore.location", "<path-to-file-client.truststore.jks>");\nprops.put("ssl.truststore.password", "<truststore-password>");\nprops.put("ssl.endpoint.identification.algorithm", "");\nprops.put("bootstrap.servers", "<my-gdn>.<my-paas>.macrometa.io:9093");\n')),(0,n.kt)("h2",{id:"producer"},"Producer"),(0,n.kt)("p",null,"In Kafka, producers write messages to topics."),(0,n.kt)("p",null,"Add the following Producer properties for specifying a subscription and serializers:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},'props.put("key.serializer", "org.apache.kafka.common.serialization.StringSerializer");\nprops.put("value.serializer", "org.apache.kafka.common.serialization.StringSerializer");\n')),(0,n.kt)("p",null,"Once you've configured Kafka Properties, you can create a Producer and send a message for a specific Kafka topic. The topic should have prefix of global either local namespace. A full topic name would match this format: ",(0,n.kt)("inlineCode",{parentName:"p"},"<c8globals or c8locals>.<my-topic>"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},'Producer<String, String> producer = new KafkaProducer<String, String>(props);\nproducer.send(new ProducerRecord<String, String>("<c8globals or c8locals>.<my-topic>", "<message-key-1>", "<message-value-1>"));\n')),(0,n.kt)("p",null,"Make sure that you close your producer when you do not need it."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"producer.close();\n")),(0,n.kt)("h2",{id:"consumer"},"Consumer"),(0,n.kt)("p",null,"In Kafka, consumers subscribe to topics and handle messages that producers publish to those topics. You can instantiate a new consumer by first instantiating a Properties object and passing it properties (as above)."),(0,n.kt)("p",null,"Add the following Consumer properties for specifying a subscription and serializers:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},'props.put("enable.auto.commit", "false");\nprops.put("group.id", <my-subscription>);\nprops.put("key.deserializer", "org.apache.kafka.common.serialization.StringDeserializer");\nprops.put("value.deserializer", "org.apache.kafka.common.serialization.StringDeserializer");\n')),(0,n.kt)("p",null,"Once you've configured a Properties object, you can create a Consumer by specifying a topic or multiple topics with global either local distribution."),(0,n.kt)("p",null,"For example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},'Arrays.asList("c8globals.topic-1", "c8locals.topic-2").\n\nKafkaConsumer<String, String> consumer = new KafkaConsumer<String, String>(props);\nconsumer.subscribe(Arrays.asList("<c8globals or c8locals>.<my-topic>"));\n')),(0,n.kt)("p",null,"The subscribe method automatically subscribes the consumer to the specified topic and subscription."),(0,n.kt)("p",null,"One way to make the consumer listen to the topic is to set up a while loop. In this example loop, the consumer listens for messages, prints the contents of any received message, and then acknowledges that the message has been processed by the ",(0,n.kt)("inlineCode",{parentName:"p"},"commitAsync()")," method."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},'while (true) {\n    ConsumerRecords<String, String> records = consumer.poll(100);\n    for (ConsumerRecord<String, String> record : records){\n        System.out.printf(">>> offset = %d, key = %s, value = %s\\n",\n                record.offset(), record.key(), record.value());\n        \n    }\n    consumer.commitAsync();\n}\n')),(0,n.kt)("p",null,"Verify that you close your consumer when you do not need it."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"consumer.close();\n")))}u.isMDXComponent=!0}}]);