"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[90908],{3905:(e,a,t)=>{t.d(a,{Zo:()=>m,kt:()=>k});var r=t(67294);function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function l(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,r)}return t}function p(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?l(Object(t),!0).forEach((function(a){n(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function i(e,a){if(null==e)return{};var t,r,n=function(e,a){if(null==e)return{};var t,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var s=r.createContext({}),o=function(e){var a=r.useContext(s),t=a;return e&&(t="function"==typeof e?e(a):p(p({},a),e)),t},m=function(e){var a=o(e.components);return r.createElement(s.Provider,{value:a},e.children)},u={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},N=r.forwardRef((function(e,a){var t=e.components,n=e.mdxType,l=e.originalType,s=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),N=o(t),k=n,y=N["".concat(s,".").concat(k)]||N[k]||u[k]||l;return t?r.createElement(y,p(p({ref:a},m),{},{components:t})):r.createElement(y,p({ref:a},m))}));function k(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var l=t.length,p=new Array(l);p[0]=N;var i={};for(var s in a)hasOwnProperty.call(a,s)&&(i[s]=a[s]);i.originalType=e,i.mdxType="string"==typeof e?e:n,p[1]=i;for(var o=2;o<l;o++)p[o]=t[o];return r.createElement.apply(null,p)}return r.createElement.apply(null,t)}N.displayName="MDXCreateElement"},87647:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>s,contentTitle:()=>p,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>o});var r=t(87462),n=(t(67294),t(3905));const l={title:"Array Functions"},p=void 0,i={unversionedId:"queryworkers/c8ql/functions/array",id:"queryworkers/c8ql/functions/array",title:"Array Functions",description:"C8QL provides functions for higher-level array manipulation. Also see the numeric functions for functions that work on number arrays. If you want to concatenate the elements of an array equivalent to join() in JavaScript, see CONCAT() and CONCATSEPARATOR() in the string functions chapter.",source:"@site/docs/queryworkers/c8ql/functions/array.md",sourceDirName:"queryworkers/c8ql/functions",slug:"/queryworkers/c8ql/functions/array",permalink:"/docs/queryworkers/c8ql/functions/array",draft:!1,editUrl:"https://github.com/macrometacorp/docs/edit/main/docs/queryworkers/c8ql/functions/array.md",tags:[],version:"current",frontMatter:{title:"Array Functions"},sidebar:"defaultSidebar",previous:{title:"Functions",permalink:"/docs/queryworkers/c8ql/functions/"},next:{title:"Control Flow Functions",permalink:"/docs/queryworkers/c8ql/functions/control-flow"}},s={},o=[{value:"APPEND()",id:"append",level:2},{value:"CONTAINS_ARRAY()",id:"contains_array",level:2},{value:"COUNT()",id:"count",level:2},{value:"COUNT_DISTINCT()",id:"count_distinct",level:2},{value:"COUNT_UNIQUE()",id:"count_unique",level:2},{value:"FIRST()",id:"first",level:2},{value:"FLATTEN()",id:"flatten",level:2},{value:"INTERSECTION()",id:"intersection",level:2},{value:"LAST()",id:"last",level:2},{value:"LENGTH()",id:"length",level:2},{value:"MINUS()",id:"minus",level:2},{value:"NTH()",id:"nth",level:2},{value:"OUTERSECTION()",id:"outersection",level:2},{value:"POP()",id:"pop",level:2},{value:"POSITION()",id:"position",level:2},{value:"PUSH()",id:"push",level:2},{value:"REMOVE_NTH()",id:"remove_nth",level:2},{value:"REMOVE_VALUE()",id:"remove_value",level:2},{value:"REMOVE_VALUES()",id:"remove_values",level:2},{value:"REVERSE()",id:"reverse",level:2},{value:"SHIFT()",id:"shift",level:2},{value:"SLICE()",id:"slice",level:2},{value:"SORTED()",id:"sorted",level:2},{value:"SORTED_UNIQUE()",id:"sorted_unique",level:2},{value:"UNION()",id:"union",level:2},{value:"UNION_DISTINCT()",id:"union_distinct",level:2},{value:"UNIQUE()",id:"unique",level:2},{value:"UNSHIFT()",id:"unshift",level:2}],m={toc:o};function u(e){let{components:a,...t}=e;return(0,n.kt)("wrapper",(0,r.Z)({},m,t,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"C8QL provides functions for higher-level array manipulation. Also see the ",(0,n.kt)("a",{parentName:"p",href:"/docs/queryworkers/c8ql/functions/numeric"},"numeric functions")," for functions that work on number arrays. If you want to concatenate the elements of an array equivalent to ",(0,n.kt)("inlineCode",{parentName:"p"},"join()")," in JavaScript, see ",(0,n.kt)("a",{parentName:"p",href:"string#concat"},"CONCAT()")," and ",(0,n.kt)("a",{parentName:"p",href:"string#concat_separator"},"CONCAT_SEPARATOR()")," in the string functions chapter."),(0,n.kt)("p",null,"Apart from that, C8QL also offers several language constructs:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"simple ",(0,n.kt)("a",{parentName:"li",href:"/docs/queryworkers/c8ql/data-types#arrays--lists"},"array access")," of individual elements,"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/queryworkers/c8ql/array-operators"},"array operators")," for array expansion and contraction, optionally with inline filter, limit and projection,"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/queryworkers/c8ql/operators#array-comparison-operators"},"array comparison operators")," to compare each element in an array to a value or the elements of another array,"),(0,n.kt)("li",{parentName:"ul"},"loop-based operations on arrays using ",(0,n.kt)("a",{parentName:"li",href:"/docs/queryworkers/c8ql/operations/for"},"FOR"),",\n",(0,n.kt)("a",{parentName:"li",href:"/docs/queryworkers/c8ql/operations/sort"},"SORT"),",\n",(0,n.kt)("a",{parentName:"li",href:"/docs/queryworkers/c8ql/operations/limit"},"LIMIT"),",\nas well as ",(0,n.kt)("a",{parentName:"li",href:"/docs/queryworkers/c8ql/operations/collect"},"COLLECT")," for grouping,\nwhich also offers efficient aggregation.")),(0,n.kt)("h2",{id:"append"},"APPEND()"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"APPEND(anyArray, values, unique) \u2192 newArray")),(0,n.kt)("p",null,"Add all elements of an array to another array. All values are added at the end of the array (right side)."),(0,n.kt)("p",null,"It can also be used to append a single element to an array. It is not necessary to wrap it in an array (unless it is an array itself). You may also use ",(0,n.kt)("a",{parentName:"p",href:"#push"},"PUSH()")," instead."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"anyArray")," (array): array with elements of arbitrary type"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"values")," (array","|","any): array, whose elements shall be added to ",(0,n.kt)("em",{parentName:"li"},"anyArray")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"unique")," (bool, ",(0,n.kt)("em",{parentName:"li"},"optional"),"): if set to ",(0,n.kt)("em",{parentName:"li"},"true"),", only those ",(0,n.kt)("em",{parentName:"li"},"values")," will be added that are not already contained in ",(0,n.kt)("em",{parentName:"li"},"anyArray"),". The default is ",(0,n.kt)("em",{parentName:"li"},"false"),"."),(0,n.kt)("li",{parentName:"ul"},"returns ",(0,n.kt)("strong",{parentName:"li"},"newArray")," (array): the modified array")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Examples")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"RETURN APPEND([ 1, 2, 3 ], [ 5, 6, 9 ])\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"RETURN APPEND([ 1, 2, 3 ], [ 3, 4, 5, 2, 9 ], true)\n")),(0,n.kt)("h2",{id:"contains_array"},"CONTAINS_ARRAY()"),(0,n.kt)("p",null,"This is an alias for ",(0,n.kt)("a",{parentName:"p",href:"#position"},"POSITION()"),"."),(0,n.kt)("h2",{id:"count"},"COUNT()"),(0,n.kt)("p",null,"This is an alias for ",(0,n.kt)("a",{parentName:"p",href:"#length"},"LENGTH()"),"."),(0,n.kt)("h2",{id:"count_distinct"},"COUNT_DISTINCT()"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"COUNT_DISTINCT(anyArray) \u2192 number")),(0,n.kt)("p",null,"Get the number of distinct elements in an array."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"anyArray")," (array): array with elements of arbitrary type"),(0,n.kt)("li",{parentName:"ul"},"returns ",(0,n.kt)("strong",{parentName:"li"},"number"),": the number of distinct elements in ",(0,n.kt)("em",{parentName:"li"},"anyArray"),".")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Examples")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"RETURN COUNT_DISTINCT([ 1, 2, 3 ])\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},'RETURN COUNT_DISTINCT([ "yes", "no", "yes", "sauron", "no", "yes" ])\n')),(0,n.kt)("h2",{id:"count_unique"},"COUNT_UNIQUE()"),(0,n.kt)("p",null,"This is an alias for ",(0,n.kt)("a",{parentName:"p",href:"#count_distinct"},"COUNT_DISTINCT()"),"."),(0,n.kt)("h2",{id:"first"},"FIRST()"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"FIRST(anyArray) \u2192 firstElement")),(0,n.kt)("p",null,"Get the first element of an array. It is the same as ",(0,n.kt)("inlineCode",{parentName:"p"},"anyArray[0]"),"."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"anyArray")," (array): array with elements of arbitrary type"),(0,n.kt)("li",{parentName:"ul"},"returns ",(0,n.kt)("strong",{parentName:"li"},"firstElement")," (any","|","null): the first element of ",(0,n.kt)("em",{parentName:"li"},"anyArray"),", or ",(0,n.kt)("em",{parentName:"li"},"null")," if the array is empty.")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Examples")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"RETURN FIRST([ 1, 2, 3 ])\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"RETURN FIRST([])\n")),(0,n.kt)("h2",{id:"flatten"},"FLATTEN()"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"FLATTEN(anyArray, depth) \u2192 flatArray")),(0,n.kt)("p",null,"Turn an array of arrays into a flat array. All array elements in ",(0,n.kt)("em",{parentName:"p"},"array")," will be expanded in the result array. Non-array elements are added as they are. The function will recurse into sub-arrays up to the specified depth. Duplicates will not be removed."),(0,n.kt)("p",null,"Also see ",(0,n.kt)("a",{parentName:"p",href:"/docs/queryworkers/c8ql/array-operators#array-contraction"},"array contraction"),"."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"array")," (array): array with elements of arbitrary type, including nested arrays"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"depth")," (number, ",(0,n.kt)("em",{parentName:"li"},"optional"),"):  flatten up to this many levels, the default is 1"),(0,n.kt)("li",{parentName:"ul"},"returns ",(0,n.kt)("strong",{parentName:"li"},"flatArray")," (array): a flattened array")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Examples")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"RETURN FLATTEN( [ 1, 2, [ 3, 4 ], 5, [ 6, 7 ], [ 8, [ 9, 10 ] ] ] )\n")),(0,n.kt)("p",null,"To fully flatten the example array, use a ",(0,n.kt)("em",{parentName:"p"},"depth")," of 2:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"RETURN FLATTEN( [ 1, 2, [ 3, 4 ], 5, [ 6, 7 ], [ 8, [ 9, 10 ] ] ], 2 )\n")),(0,n.kt)("h2",{id:"intersection"},"INTERSECTION()"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"INTERSECTION(array1, array2, ... arrayN) \u2192 newArray")),(0,n.kt)("p",null,"Return the intersection of all arrays specified. The result is an array of values that occur in all arguments."),(0,n.kt)("p",null,"Other set operations are "),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#union"},"UNION()"),","),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#minus"},"MINUS()")," and"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#outersection"},"OUTERSECTION()"),".")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"arrays")," (array, ",(0,n.kt)("em",{parentName:"li"},"repeatable"),"): an arbitrary number of arrays as multiple arguments (at least 2)"),(0,n.kt)("li",{parentName:"ul"},"returns ",(0,n.kt)("strong",{parentName:"li"},"newArray")," (array): a single array with only the elements, which exist in all provided arrays. The element order is random. Duplicates are removed.")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Examples")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"RETURN INTERSECTION( [1,2,3,4,5], [2,3,4,5,6], [3,4,5,6,7] )\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"RETURN INTERSECTION( [2,4,6], [8,10,12], [14,16,18] )\n")),(0,n.kt)("h2",{id:"last"},"LAST()"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"LAST(anyArray) \u2192 lastElement")),(0,n.kt)("p",null,"Get the last element of an array. It is the same as ",(0,n.kt)("inlineCode",{parentName:"p"},"anyArray[-1]"),"."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"anyArray")," (array): array with elements of arbitrary type"),(0,n.kt)("li",{parentName:"ul"},"returns ",(0,n.kt)("strong",{parentName:"li"},"lastElement")," (any","|","null): the last element of ",(0,n.kt)("em",{parentName:"li"},"anyArray")," or ",(0,n.kt)("em",{parentName:"li"},"null")," if the array is empty.")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Example")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"RETURN LAST( [1,2,3,4,5] )\n")),(0,n.kt)("h2",{id:"length"},"LENGTH()"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"LENGTH(anyArray) \u2192 length")),(0,n.kt)("p",null,"Determine the number of elements in an array."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"anyArray")," (array): array with elements of arbitrary type"),(0,n.kt)("li",{parentName:"ul"},"returns ",(0,n.kt)("strong",{parentName:"li"},"length")," (number): the number of array elements in ",(0,n.kt)("em",{parentName:"li"},"anyArray"),".")),(0,n.kt)("p",null,(0,n.kt)("em",{parentName:"p"},"LENGTH()")," can also determine the ",(0,n.kt)("a",{parentName:"p",href:"/docs/queryworkers/c8ql/functions/document#length"},"number of attribute keys")," of an object / document, the ",(0,n.kt)("a",{parentName:"p",href:"/docs/queryworkers/c8ql/functions/database#length"},"amount of documents")," in a collection and the ",(0,n.kt)("a",{parentName:"p",href:"/docs/queryworkers/c8ql/functions/string#length"},"character length")," of a string."),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Input"),(0,n.kt)("th",{parentName:"tr",align:null},"Length"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"String"),(0,n.kt)("td",{parentName:"tr",align:null},"Number of Unicode characters")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Number"),(0,n.kt)("td",{parentName:"tr",align:null},"Number of Unicode characters that represent the number")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Array"),(0,n.kt)("td",{parentName:"tr",align:null},"Number of elements")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Object"),(0,n.kt)("td",{parentName:"tr",align:null},"Number of first level elements")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"true"),(0,n.kt)("td",{parentName:"tr",align:null},"1")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"false"),(0,n.kt)("td",{parentName:"tr",align:null},"0")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"null"),(0,n.kt)("td",{parentName:"tr",align:null},"0")))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Examples")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},'RETURN LENGTH( "Macrometa" )\n')),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"RETURN LENGTH( 1234 )\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"RETURN LENGTH( [1,2,3,4,5,6,7] )\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"RETURN LENGTH( false )\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"RETURN LENGTH( {a:1, b:2, c:3, d:4, e:{f:5,g:6}} )\n")),(0,n.kt)("h2",{id:"minus"},"MINUS()"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"MINUS(array1, array2, ... arrayN) \u2192 newArray")),(0,n.kt)("p",null,"Return the difference of all arrays specified."),(0,n.kt)("p",null,"Other set operations are"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#union"},"UNION()"),","),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#intersection"},"INTERSECTION()")," and"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#outersection"},"OUTERSECTION()"),".")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"arrays")," (array, ",(0,n.kt)("em",{parentName:"li"},"repeatable"),"): an arbitrary number of arrays as multiple arguments (at least 2)"),(0,n.kt)("li",{parentName:"ul"},"returns ",(0,n.kt)("strong",{parentName:"li"},"newArray")," (array): an array of values that occur in the first array, but not in any of the subsequent arrays. The order of the result array is undefined and should not be relied on. Duplicates will be removed.")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Example")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"RETURN MINUS( [1,2,3,4], [3,4,5,6], [5,6,7,8] )\n")),(0,n.kt)("h2",{id:"nth"},"NTH()"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"NTH(anyArray, position) \u2192 nthElement")),(0,n.kt)("p",null,"Get the element of an array at a given position. It is the same as ",(0,n.kt)("inlineCode",{parentName:"p"},"anyArray[position]")," for positive positions, but does not support negative positions."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"anyArray")," (array): array with elements of arbitrary type"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"position")," (number): position of desired element in array, positions start at 0"),(0,n.kt)("li",{parentName:"ul"},"returns ",(0,n.kt)("strong",{parentName:"li"},"nthElement")," (any","|","null): the array element at the given ",(0,n.kt)("em",{parentName:"li"},"position"),". If ",(0,n.kt)("em",{parentName:"li"},"position")," is negative or beyond the upper bound of the array, then ",(0,n.kt)("em",{parentName:"li"},"null")," will be returned.")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Examples")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},'RETURN NTH( [ "foo", "bar", "baz" ], 2 )\n')),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},'RETURN NTH( [ "foo", "bar", "baz" ], 3 )\n')),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},'RETURN NTH( [ "foo", "bar", "baz" ], -1 )\n')),(0,n.kt)("h2",{id:"outersection"},"OUTERSECTION()"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"OUTERSECTION(array1, array2, ... arrayN) \u2192 newArray")),(0,n.kt)("p",null,"Return the values that occur only once across all arrays specified."),(0,n.kt)("p",null,"Other set operations are ",(0,n.kt)("a",{parentName:"p",href:"#union"},"UNION()"),",\n",(0,n.kt)("a",{parentName:"p",href:"#minus"},"MINUS()")," and\n",(0,n.kt)("a",{parentName:"p",href:"#intersection"},"INTERSECTION()"),"."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"arrays")," (array, ",(0,n.kt)("em",{parentName:"li"},"repeatable"),"): an arbitrary number of arrays as multiple arguments\n(at least 2)"),(0,n.kt)("li",{parentName:"ul"},"returns ",(0,n.kt)("strong",{parentName:"li"},"newArray")," (array): a single array with only the elements that exist only once\nacross all provided arrays. The element order is random.")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Example")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"RETURN OUTERSECTION( [ 1, 2, 3 ], [ 2, 3, 4 ], [ 3, 4, 5 ] )\n")),(0,n.kt)("h2",{id:"pop"},"POP()"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"POP(anyArray) \u2192 newArray")),(0,n.kt)("p",null,"Remove the last element of ",(0,n.kt)("em",{parentName:"p"},"array"),"."),(0,n.kt)("p",null,"To append an element (right side), see ",(0,n.kt)("a",{parentName:"p",href:"#push"},"PUSH()"),".",(0,n.kt)("br",null),"\nTo remove the first element, see ",(0,n.kt)("a",{parentName:"p",href:"#shift"},"SHIFT()"),".",(0,n.kt)("br",null),"\nTo remove an element at an arbitrary position, see ",(0,n.kt)("a",{parentName:"p",href:"#remove_nth"},"REMOVE_NTH()"),"."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"anyArray")," (array): an array with elements of arbitrary type"),(0,n.kt)("li",{parentName:"ul"},"returns ",(0,n.kt)("strong",{parentName:"li"},"newArray")," (array): ",(0,n.kt)("em",{parentName:"li"},"anyArray")," without the last element. If it's already empty or has only a single element left, an empty array is returned.")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Examples")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"RETURN POP( [ 1, 2, 3, 4 ] )\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"RETURN POP( [ 1 ] )\n")),(0,n.kt)("h2",{id:"position"},"POSITION()"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"POSITION(anyArray, search, returnIndex) \u2192 position")),(0,n.kt)("p",null,"Return whether ",(0,n.kt)("em",{parentName:"p"},"search")," is contained in ",(0,n.kt)("em",{parentName:"p"},"array"),". Optionally return the position."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"anyArray")," (array): the haystack, an array with elements of arbitrary type"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"search")," (any): the needle, an element of arbitrary type"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"returnIndex")," (bool, ",(0,n.kt)("em",{parentName:"li"},"optional"),"): if set to ",(0,n.kt)("em",{parentName:"li"},"true"),", the position of the match is returned instead of a boolean. The default is ",(0,n.kt)("em",{parentName:"li"},"false"),"."),(0,n.kt)("li",{parentName:"ul"},"returns ",(0,n.kt)("strong",{parentName:"li"},"position")," (bool","|","number): ",(0,n.kt)("em",{parentName:"li"},"true")," if ",(0,n.kt)("em",{parentName:"li"},"search")," is contained in ",(0,n.kt)("em",{parentName:"li"},"anyArray"),", ",(0,n.kt)("em",{parentName:"li"},"false")," otherwise. If ",(0,n.kt)("em",{parentName:"li"},"returnIndex")," is enabled, the position of the match is returned (positions start at 0), or ",(0,n.kt)("em",{parentName:"li"},"-1")," if it's not found.")),(0,n.kt)("p",null,"To determine if or at which position a string occurs in another string, see the ",(0,n.kt)("a",{parentName:"p",href:"/docs/queryworkers/c8ql/functions/string#contains"},"CONTAINS() string function"),"."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Examples")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"RETURN POSITION( [2,4,6,8], 4 )\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"RETURN POSITION( [2,4,6,8], 4, true )\n")),(0,n.kt)("h2",{id:"push"},"PUSH()"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"PUSH(anyArray, value, unique) \u2192 newArray")),(0,n.kt)("p",null,"Append ",(0,n.kt)("em",{parentName:"p"},"value")," to ",(0,n.kt)("em",{parentName:"p"},"anyArray")," (right side)."),(0,n.kt)("p",null,"To remove the last element, see ",(0,n.kt)("a",{parentName:"p",href:"#pop"},"POP()"),".",(0,n.kt)("br",null),"\nTo prepend a value (left side), see ",(0,n.kt)("a",{parentName:"p",href:"#unshift"},"UNSHIFT()"),".",(0,n.kt)("br",null),"\nTo append multiple elements, see ",(0,n.kt)("a",{parentName:"p",href:"#append"},"APPEND()"),"."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"anyArray")," (array): array with elements of arbitrary type"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"value")," (any): an element of arbitrary type"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"unique")," (bool): if set to ",(0,n.kt)("em",{parentName:"li"},"true"),", then ",(0,n.kt)("em",{parentName:"li"},"value")," is not added if already present in the array. The default is ",(0,n.kt)("em",{parentName:"li"},"false"),"."),(0,n.kt)("li",{parentName:"ul"},"returns ",(0,n.kt)("strong",{parentName:"li"},"newArray")," (array): ",(0,n.kt)("em",{parentName:"li"},"anyArray")," with ",(0,n.kt)("em",{parentName:"li"},"value")," added at the end (right side)")),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("p",{parentName:"admonition"},"The ",(0,n.kt)("em",{parentName:"p"},"unique")," flag only controls if ",(0,n.kt)("em",{parentName:"p"},"value")," is added if it's already present in ",(0,n.kt)("em",{parentName:"p"},"anyArray"),". Duplicate elements that already exist in ",(0,n.kt)("em",{parentName:"p"},"anyArray")," will not be removed. To make an array unique, use the ",(0,n.kt)("a",{parentName:"p",href:"#unique"},"UNIQUE()")," function.")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Examples")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"RETURN PUSH([ 1, 2, 3 ], 4)\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"RETURN PUSH([ 1, 2, 2, 3 ], 2, true)\n")),(0,n.kt)("h2",{id:"remove_nth"},"REMOVE_NTH()"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"REMOVE_NTH(anyArray, position) \u2192 newArray")),(0,n.kt)("p",null,"Remove the element at ",(0,n.kt)("em",{parentName:"p"},"position")," from the ",(0,n.kt)("em",{parentName:"p"},"anyArray"),"."),(0,n.kt)("p",null,"To remove the first element, see ",(0,n.kt)("a",{parentName:"p",href:"#shift"},"SHIFT()"),".",(0,n.kt)("br",null),"\nTo remove the last element, see ",(0,n.kt)("a",{parentName:"p",href:"#pop"},"POP()"),"."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"anyArray")," (array): array with elements of arbitrary type"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"position")," (number): the position of the element to remove. Positions start at 0. Negative positions are supported, with -1 being the last array element. If ",(0,n.kt)("em",{parentName:"li"},"position")," is out of bounds, the array is returned unmodified."),(0,n.kt)("li",{parentName:"ul"},"returns ",(0,n.kt)("strong",{parentName:"li"},"newArray")," (array): ",(0,n.kt)("em",{parentName:"li"},"anyArray")," without the element at ",(0,n.kt)("em",{parentName:"li"},"position"))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Examples")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},'RETURN REMOVE_NTH( [ "a", "b", "c", "d", "e" ], 1 )\n')),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},'RETURN REMOVE_NTH( [ "a", "b", "c", "d", "e" ], -2 )\n')),(0,n.kt)("h2",{id:"remove_value"},"REMOVE_VALUE()"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"REMOVE_VALUE(anyArray, value, limit) \u2192 newArray")),(0,n.kt)("p",null,"Remove all occurrences of ",(0,n.kt)("em",{parentName:"p"},"value")," in ",(0,n.kt)("em",{parentName:"p"},"anyArray"),". Optionally with a ",(0,n.kt)("em",{parentName:"p"},"limit"),"\nto the number of removals."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"anyArray")," (array): array with elements of arbitrary type"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"value")," (any): an element of arbitrary type"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"limit")," (number, ",(0,n.kt)("em",{parentName:"li"},"optional"),"): cap the number of removals to this value"),(0,n.kt)("li",{parentName:"ul"},"returns ",(0,n.kt)("strong",{parentName:"li"},"newArray")," (array): ",(0,n.kt)("em",{parentName:"li"},"anyArray")," with ",(0,n.kt)("em",{parentName:"li"},"value")," removed")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Examples")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},'RETURN REMOVE_VALUE( [ "a", "b", "b", "a", "c" ], "a" )\n')),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},'RETURN REMOVE_VALUE( [ "a", "b", "b", "a", "c" ], "a", 1 )\n')),(0,n.kt)("h2",{id:"remove_values"},"REMOVE_VALUES()"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"REMOVE_VALUES(anyArray, values) \u2192 newArray")),(0,n.kt)("p",null,"Remove all occurrences of any of the ",(0,n.kt)("em",{parentName:"p"},"values")," from ",(0,n.kt)("em",{parentName:"p"},"anyArray"),"."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"anyArray")," (array): array with elements of arbitrary type"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"values")," (array): an array with elements of arbitrary type, that shall be removed from ",(0,n.kt)("em",{parentName:"li"},"anyArray")),(0,n.kt)("li",{parentName:"ul"},"returns ",(0,n.kt)("strong",{parentName:"li"},"newArray")," (array): ",(0,n.kt)("em",{parentName:"li"},"anyArray")," with all individual ",(0,n.kt)("em",{parentName:"li"},"values")," removed")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Example")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},'RETURN REMOVE_VALUES( [ "a", "a", "b", "c", "d", "e", "f" ], [ "a", "f", "d" ] )\n')),(0,n.kt)("h2",{id:"reverse"},"REVERSE()"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"REVERSE(anyArray) \u2192 reversedArray")),(0,n.kt)("p",null,"Return an array with its elements reversed."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"anyArray")," (array): array with elements of arbitrary type"),(0,n.kt)("li",{parentName:"ul"},"returns ",(0,n.kt)("strong",{parentName:"li"},"reversedArray")," (array): a new array with all elements of ",(0,n.kt)("em",{parentName:"li"},"anyArray")," in reversed order")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Example")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"RETURN REVERSE ( [2,4,6,8,10] )\n")),(0,n.kt)("h2",{id:"shift"},"SHIFT()"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"SHIFT(anyArray) \u2192 newArray")),(0,n.kt)("p",null,"Remove the first element of ",(0,n.kt)("em",{parentName:"p"},"anyArray"),"."),(0,n.kt)("p",null,"To prepend an element (left side), see ",(0,n.kt)("a",{parentName:"p",href:"#unshift"},"UNSHIFT()"),".",(0,n.kt)("br",null),"\nTo remove the last element, see ",(0,n.kt)("a",{parentName:"p",href:"#pop"},"POP()"),".",(0,n.kt)("br",null),"\nTo remove an element at an arbitrary position, see ",(0,n.kt)("a",{parentName:"p",href:"#remove_nth"},"REMOVE_NTH()"),"."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"anyArray")," (array): array with elements with arbitrary type"),(0,n.kt)("li",{parentName:"ul"},"returns ",(0,n.kt)("strong",{parentName:"li"},"newArray")," (array): ",(0,n.kt)("em",{parentName:"li"},"anyArray")," without the left-most element. If ",(0,n.kt)("em",{parentName:"li"},"anyArray")," is already empty or has only one element left, an empty array is returned.")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Examples")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"RETURN SHIFT( [ 1, 2, 3, 4 ] )\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"RETURN SHIFT( [ 1 ] )\n")),(0,n.kt)("h2",{id:"slice"},"SLICE()"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"SLICE(anyArray, start, length) \u2192 newArray")),(0,n.kt)("p",null,"Extract a slice of ",(0,n.kt)("em",{parentName:"p"},"anyArray"),"."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"anyArray")," (array): array with elements of arbitrary type"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"start")," (number): start extraction at this element. Positions start at 0. Negative values indicate positions from the end of the array."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"length")," (number, ",(0,n.kt)("em",{parentName:"li"},"optional"),"): extract up to ",(0,n.kt)("em",{parentName:"li"},"length")," elements, or all elements from ",(0,n.kt)("em",{parentName:"li"},"start")," up to ",(0,n.kt)("em",{parentName:"li"},"length")," if negative (exclusive)"),(0,n.kt)("li",{parentName:"ul"},"returns ",(0,n.kt)("strong",{parentName:"li"},"newArray")," (array): the specified slice of ",(0,n.kt)("em",{parentName:"li"},"anyArray"),". If ",(0,n.kt)("em",{parentName:"li"},"length")," is not specified, all array elements starting at ",(0,n.kt)("em",{parentName:"li"},"start")," will be returned.")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Examples")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"RETURN SLICE( [ 1, 2, 3, 4, 5 ], 0, 1 )\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"RETURN SLICE( [ 1, 2, 3, 4, 5 ], 1, 2 )\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"RETURN SLICE( [ 1, 2, 3, 4, 5 ], 3 )\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"RETURN SLICE( [ 1, 2, 3, 4, 5 ], 1, -1 )\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"RETURN SLICE( [ 1, 2, 3, 4, 5 ], 0, -2 )\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"RETURN SLICE( [ 1, 2, 3, 4, 5 ], -3, 2 )\n")),(0,n.kt)("h2",{id:"sorted"},"SORTED()"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"SORTED(anyArray) \u2192 newArray")),(0,n.kt)("p",null,"Sort all elements in ",(0,n.kt)("em",{parentName:"p"},"anyArray"),". The function will use the default comparison order for C8QL value types."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"anyArray")," (array): array with elements of arbitrary type"),(0,n.kt)("li",{parentName:"ul"},"returns ",(0,n.kt)("strong",{parentName:"li"},"newArray")," (array): ",(0,n.kt)("em",{parentName:"li"},"anyArray"),", with elements sorted")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Example")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"RETURN SORTED( [ 8,4,2,10,6 ] )\n")),(0,n.kt)("h2",{id:"sorted_unique"},"SORTED_UNIQUE()"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"SORTED_UNIQUE(anyArray) \u2192 newArray")),(0,n.kt)("p",null,"Sort all elements in ",(0,n.kt)("em",{parentName:"p"},"anyArray"),". The function will use the default comparison order for C8QL value types. Additionally, the values in the result array will be made unique."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"anyArray")," (array): array with elements of arbitrary type"),(0,n.kt)("li",{parentName:"ul"},"returns ",(0,n.kt)("strong",{parentName:"li"},"newArray")," (array): ",(0,n.kt)("em",{parentName:"li"},"anyArray"),", with elements sorted and duplicates removed")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Example")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"RETURN SORTED_UNIQUE( [ 8,4,2,10,6,2,8,6,4 ] )\n")),(0,n.kt)("h2",{id:"union"},"UNION()"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"UNION(array1, array2, ... arrayN) \u2192 newArray")),(0,n.kt)("p",null,"Return the union of all arrays specified."),(0,n.kt)("p",null,"Other set operations are ",(0,n.kt)("a",{parentName:"p",href:"#minus"},"MINUS()"),",\n",(0,n.kt)("a",{parentName:"p",href:"#intersection"},"INTERSECTION()")," and\n",(0,n.kt)("a",{parentName:"p",href:"#outersection"},"OUTERSECTION()"),"."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"arrays")," (array, ",(0,n.kt)("em",{parentName:"li"},"repeatable"),"): an arbitrary number of arrays as multiple arguments (at least 2)"),(0,n.kt)("li",{parentName:"ul"},"returns ",(0,n.kt)("strong",{parentName:"li"},"newArray")," (array): all array elements combined in a single array, in any order")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Examples")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"RETURN UNION(\n    [ 1, 2, 3 ],\n    [ 1, 2 ]\n)\n")),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("p",{parentName:"admonition"},"No duplicates will be removed. In order to remove duplicates, please use either ",(0,n.kt)("a",{parentName:"p",href:"#union_distinct"},"UNION_DISTINCT()")," or apply ",(0,n.kt)("a",{parentName:"p",href:"#unique"},"UNIQUE()")," on the result of ",(0,n.kt)("em",{parentName:"p"},"UNION()"),":")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"RETURN UNIQUE(\n    UNION(\n        [ 1, 2, 3 ],\n        [ 1, 2 ]\n    )\n)\n")),(0,n.kt)("h2",{id:"union_distinct"},"UNION_DISTINCT()"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"UNION_DISTINCT(array1, array2, ... arrayN) \u2192 newArray")),(0,n.kt)("p",null,"Return the union of distinct values of all arrays specified."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"arrays")," (array, ",(0,n.kt)("em",{parentName:"li"},"repeatable"),"): an arbitrary number of arrays as multiple arguments (at least 2)"),(0,n.kt)("li",{parentName:"ul"},"returns ",(0,n.kt)("strong",{parentName:"li"},"newArray")," (array): the elements of all given arrays in a single array, without duplicates, in any order")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Example")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"RETURN UNION_DISTINCT(\n    [ 1, 2, 3 ],\n    [ 1, 2 ]\n)\n")),(0,n.kt)("h2",{id:"unique"},"UNIQUE()"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"UNIQUE(anyArray) \u2192 newArray")),(0,n.kt)("p",null,"Return all unique elements in ",(0,n.kt)("em",{parentName:"p"},"anyArray"),". To determine uniqueness, the function will use the comparison order."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"anyArray")," (array): array with elements of arbitrary type"),(0,n.kt)("li",{parentName:"ul"},"returns ",(0,n.kt)("strong",{parentName:"li"},"newArray")," (array): ",(0,n.kt)("em",{parentName:"li"},"anyArray")," without duplicates, in any order")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Example")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"RETURN UNIQUE( [ 1,2,2,3,3,3,4,4,4,4,5,5,5,5,5 ] )\n")),(0,n.kt)("h2",{id:"unshift"},"UNSHIFT()"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"UNSHIFT(anyArray, value, unique) \u2192 newArray")),(0,n.kt)("p",null,"Prepend ",(0,n.kt)("em",{parentName:"p"},"value")," to ",(0,n.kt)("em",{parentName:"p"},"anyArray")," (left side)."),(0,n.kt)("p",null,"To remove the first element, see ",(0,n.kt)("a",{parentName:"p",href:"#shift"},"SHIFT()"),".",(0,n.kt)("br",null),"\nTo append a value (right side), see ",(0,n.kt)("a",{parentName:"p",href:"#push"},"PUSH()"),"."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"anyArray")," (array): array with elements of arbitrary type"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"value")," (any): an element of arbitrary type"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"unique")," (bool): if set to ",(0,n.kt)("em",{parentName:"li"},"true"),", then ",(0,n.kt)("em",{parentName:"li"},"value")," is not added if already present in the array. The default is ",(0,n.kt)("em",{parentName:"li"},"false"),"."),(0,n.kt)("li",{parentName:"ul"},"returns ",(0,n.kt)("strong",{parentName:"li"},"newArray")," (array): ",(0,n.kt)("em",{parentName:"li"},"anyArray")," with ",(0,n.kt)("em",{parentName:"li"},"value")," added at the start (left side)")),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("p",{parentName:"admonition"},"The ",(0,n.kt)("em",{parentName:"p"},"unique")," flag only controls if ",(0,n.kt)("em",{parentName:"p"},"value")," is added if it's already present in ",(0,n.kt)("em",{parentName:"p"},"anyArray"),". Duplicate elements that already exist in ",(0,n.kt)("em",{parentName:"p"},"anyArray")," will not be removed. To make an array unique, use the ",(0,n.kt)("a",{parentName:"p",href:"#unique"},"UNIQUE()")," function.")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Examples")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"RETURN UNSHIFT( [ 1, 2, 3 ], 4 )\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"RETURN UNSHIFT( [ 1, 2, 3 ], 2, true )\n")))}u.isMDXComponent=!0}}]);