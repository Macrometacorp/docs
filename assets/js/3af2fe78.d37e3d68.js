"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[22035],{3905:(e,s,a)=>{a.d(s,{Zo:()=>u,kt:()=>p});var t=a(67294);function n(e,s,a){return s in e?Object.defineProperty(e,s,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[s]=a,e}function r(e,s){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);s&&(t=t.filter((function(s){return Object.getOwnPropertyDescriptor(e,s).enumerable}))),a.push.apply(a,t)}return a}function l(e){for(var s=1;s<arguments.length;s++){var a=null!=arguments[s]?arguments[s]:{};s%2?r(Object(a),!0).forEach((function(s){n(e,s,a[s])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(s){Object.defineProperty(e,s,Object.getOwnPropertyDescriptor(a,s))}))}return e}function c(e,s){if(null==e)return{};var a,t,n=function(e,s){if(null==e)return{};var a,t,n={},r=Object.keys(e);for(t=0;t<r.length;t++)a=r[t],s.indexOf(a)>=0||(n[a]=e[a]);return n}(e,s);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)a=r[t],s.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var o=t.createContext({}),i=function(e){var s=t.useContext(o),a=s;return e&&(a="function"==typeof e?e(s):l(l({},s),e)),a},u=function(e){var s=i(e.components);return t.createElement(o.Provider,{value:s},e.children)},m={inlineCode:"code",wrapper:function(e){var s=e.children;return t.createElement(t.Fragment,{},s)}},g=t.forwardRef((function(e,s){var a=e.components,n=e.mdxType,r=e.originalType,o=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),g=i(a),p=n,d=g["".concat(o,".").concat(p)]||g[p]||m[p]||r;return a?t.createElement(d,l(l({ref:s},u),{},{components:a})):t.createElement(d,l({ref:s},u))}));function p(e,s){var a=arguments,n=s&&s.mdxType;if("string"==typeof e||n){var r=a.length,l=new Array(r);l[0]=g;var c={};for(var o in s)hasOwnProperty.call(s,o)&&(c[o]=s[o]);c.originalType=e,c.mdxType="string"==typeof e?e:n,l[1]=c;for(var i=2;i<r;i++)l[i]=a[i];return t.createElement.apply(null,l)}return t.createElement.apply(null,a)}g.displayName="MDXCreateElement"},14539:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>o,contentTitle:()=>l,default:()=>m,frontMatter:()=>r,metadata:()=>c,toc:()=>i});var t=a(87462),n=(a(67294),a(3905));const r={title:"User Commands"},l="Users (gdnsl user)",c={unversionedId:"cli/users-cli",id:"cli/users-cli",title:"User Commands",description:"User commands",source:"@site/docs/cli/users-cli.md",sourceDirName:"cli",slug:"/cli/users-cli",permalink:"/docs/cli/users-cli",draft:!1,editUrl:"https://github.com/macrometacorp/docs/edit/main/docs/cli/users-cli.md",tags:[],version:"current",frontMatter:{title:"User Commands"},sidebar:"defaultSidebar",previous:{title:"Stream Commands",permalink:"/docs/cli/streams-cli"},next:{title:"Account Management",permalink:"/docs/account-management/"}},o={},i=[{value:"gdnsl user get",id:"gdnsl-user-get",level:2},{value:"gdnsl user set",id:"gdnsl-user-set",level:2},{value:"gdnsl user clear",id:"gdnsl-user-clear",level:2}],u={toc:i};function m(e){let{components:s,...a}=e;return(0,n.kt)("wrapper",(0,t.Z)({},u,a,{components:s,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"users-gdnsl-user"},"Users (gdnsl user)"),(0,n.kt)("p",null,"User commands"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"  gdnsl user [flags]\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Examples:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"\n    # List all the users of a fabric\n    gdnsl user --fabric '_system' --list\n\n    # List data about the specified user of  a fabric\n    gdnsl user --fabric '_system' --list --username anurag\n    \n    # Create user.\n    gdnsl user --fabric '_system' --email 'anurag@macrometa.com' --username 'anurag' --password 'mm1234' --active --param 'key = value' --create \n\n    # Update user.\n    gdnsl user --fabric '_system' --username 'anurag' --password 'mm1234'  --active --param 'key = value' --update \n  \n    # Replace user.\n    gdnsl user --fabric '_system' --username 'anurag' --password 'mm1234'  --active --param 'key = value' --replace \n      \n    # Remove user.\n    gdnsl user --fabric '_system' --username 'anurag' --delete   \n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Options:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"  -h, --help                Help for user commands.\n      --fabric              Name of the fabric.\n      --list                Flag to list all the users.\n      --username            Username of the specified user.\n      --email               Email of the user.\n      --password            Password of the user.\n      --active              Optional flag that specifies whether the user is active. (default to true)\n      --create              Flag to create a user.\n      --replace             Replace the user details.\n      --update              Update the user details.\n      --delete              Delete a user.\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Options inherited:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"      --config string       gdnsl config file (default is ./gdnsl.yaml)\n")),(0,n.kt)("h2",{id:"gdnsl-user-get"},"gdnsl user get"),(0,n.kt)("p",null,"Gets the access levels for the user."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"  gdnsl user get [flags]\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Examples:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"   \n  # List the  accessible streams and collections in a db for a user. \n  gdnsl user get --db-name geoCountry  --username anurag \n\n  # List the full accessible streams and collections in a db for a user. \n  gdnsl user get --db-name geoCountry --username anurag --full  \n\n  # List the  accessible streams and collections for all dbs for a user.\n  gdnsl user get --username anurag \n\n  # List the full accessible streams and collections for all dbs for a user.  \n  gdnsl user get --username anurag --full  \n\n  # List all the  accessible streams in a db for a user.\n  gdnsl user get --username  anurag --db-name geoCity --all-stream  \n\n  # List all the full accessible streams in a db for a user.\n  gdnsl user get --username  anurag --db-name geoCity --all-stream --full  \n\n  # Return the access level for a specific stream.\n  gdnsl user get --db-name geocountry --stream countryStream   \n\n  # Return the access level for all collections.\n  gdnsl user get --username anurag --db-name geocountry --all-collection  \n\n  # Return the full access level for all collections.\n  gdnsl user get --username anurag --db-name geocountry --all-collection --full  \n\n  # Return the access level for a specific collection.\n  gdnsl user get --username anurag --db-name geocountry --collection country  \n\n  # Get the billing access level.\n  gdnsl user get --username anurag --billing\n\n  # Get the list of attributes for the specified user.\n  gdnsl user get --username anurag --attributes \n    \n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Options:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"  -h, --help              Help to access levels for the user.\n      --db-name           Name of the db of which you need to know the access level(Default is _system).\n      --fabric            Name of the fabric (Default is _system).\n      --all-stream        Get access level for all the streams.\n      --stream            Name of the stream.      \n      --all-collection    Get access level for all the collections.\n      --collection        Name of the collection.\n      --billing           Get billing access level.\n      --attributes        Flag for creating updating removing the attributes.\n      --full              Return the full set of access levels for all databases and all collections.\n      --param             Key=value pair as equal separated string.\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Options inherited:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"      --config string     gdnsl config file (default is ./gdnsl.yaml)\n")),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("p",{parentName:"admonition"},'If access level for stream is not set then default("',"_",'") access level will be use. If default("',"_",'") access level is also not set then database access level will be use.You need the Administrate server access level in order to execute this command.')),(0,n.kt)("h2",{id:"gdnsl-user-set"},"gdnsl user set"),(0,n.kt)("p",null,"Sets the access levels for the user."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"  gdnsl user set  [flags] \n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Examples:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'  # Set the stream access level to publish and subscribe for a specific stream in the database.\n  gdnsl user set --username  anurag --db-name  geoCountry --stream  countryStream --permissions rw\n\n  # Set the stream access level to subscribe for a specific stream in the database.\n  gdnsl user set  --username anurag --db-name  geoCity --stream cityStream --permissions ro\n\n  # Set the stream access level to publish  for a specific stream in the database. \n  gdnsl user set  --username  anurag --db-name  geoState --stream stateStream --permissions wo\n\n  # Set the stream access level to No access for a specific stream in the database. \n  gdnsl user set  --username  anurag --db-name  geoRegion --stream regionStream --permissions none\n\n  # Set the database access level to Administrate for a specific database. \n  gdnsl user set  --username  anurag --db-name persons --permissions rw\n\n  # Set the database access level to Access for a specific database. \n  gdnsl user set  --username  anurag --db-name persons --permissions ro\n\n  # Set the database access level to No access for a specific database. \n  gdnsl user set  --username tanurag --db-name persons --permissions none\n\n  # Set the collection access level to Read/Write for a specific collection in the database.\n  gdnsl user  set  --username tanurag --db-name  geoCountry --collection  country --permissions rw\n\n  # Set the collection access level to Read Only for a specific collection in the databas.\n  gdnsl user  set  --username tanurag --db-name  geoCity --collection city --permissions ro\n\n  # Set the collection access level to No access for a specific collection in the database. \n  gdnsl user  set  --username tanurag --db-name  geoRegion --collection region  --permissions none\n\n  # Set the billing access level to Administrate.\n  gdnsl user set --billing --username  anurag --permissions rw\n\n  # Set the billing access level to Access.\n  gdnsl user set  --billing --username  anurag --permissions ro\n\n  # Set the billing access level to No access. \n  gdnsl user set  --billing --username  anurag --permissions none\n\n  # Set the attributes for the specific user.\n  gdnsl user set --attributes --username  anurag --param "key1=Value1" --param "key2=Value2"\n\n')),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Options:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"  -h, --help              Help to set access levels for the user.\n      --db-name           Name of the db of which you need to know the access level(Default is _system).\n      --fabric            Name of the fabric (Default is _system).\n      --stream            Name of the stream.\n      --collection        Name of the collection.\n      --all-collection    Get access level for all the collections.\n      --all-stream        Get access level for all the streams.\n      --param             Key=value pair as equal separated string.\n      --permissions       Permission flag for all the streams, collections,fabric and billing.\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Options inherited:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"      --config string     gdnsl config file (default is ./gdnsl.yaml)\n")),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("p",{parentName:"admonition"},'If access level for stream is not set then default("',"_",'") access level will be use. If default("',"_",'") access level is also not set then database access level will be use.You need the Administrate server access level in order to execute this command.')),(0,n.kt)("h2",{id:"gdnsl-user-clear"},"gdnsl user clear"),(0,n.kt)("p",null,"Clear the access levels for the user."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"  gdnsl user clear [flags]\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Examples:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"\n    # Clears the stream access level for given stream for specific user.\n    gdnsl user clear --username anurag --fabric geoCountry --stream countryStream\n\n    # Clears the fabric access level on the persons fabric for the specific user.\n    gdnsl user clear --username anurag --fabric persons\n\n    # Clears the collection access level for the country collection in fabric geoCountry for the specific user.\n    gdnsl user clear --username anurag--fabric  geoCountry --collection country\n\n    # Clears the billing access level of a specific user.\n    gdnsl user clear --username anurag --billing\n\n    # Delete  attributes  of a specific user.\n    gdnsl user clear --username anurag --attributes = 'name'\n\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Options:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"  -h, --help                  Help to clear the access levels for the user.\n      --fabric                Name of the fabric. (default is _system).\n      --stream                Name of the stream.      \n      --collection            Name of the collection.\n      --billing               Billing access level\n      --attributes            All attributes of the user\n      --attribute             Attribute key.\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Options inherited:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"      --config string         gdnsl config file (default is ./gdnsl.yaml)\n")),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("p",{parentName:"admonition"},'If access level for stream is not set then default("',"_",'") access level will be use. If default("',"_",'") access level is also not set then database access level will be use.You need the Administrate server access level in order to execute this command.')))}m.isMDXComponent=!0}}]);