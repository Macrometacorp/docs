"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[70715],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=l(n),d=o,h=m["".concat(c,".").concat(d)]||m[d]||p[d]||r;return n?a.createElement(h,s(s({ref:t},u),{},{components:n})):a.createElement(h,s({ref:t},u))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,s=new Array(r);s[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var l=2;l<r;l++)s[l]=n[l];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},85162:(e,t,n)=>{n.d(t,{Z:()=>s});var a=n(67294),o=n(34334);const r="tabItem_Ymn6";function s(e){let{children:t,hidden:n,className:s}=e;return a.createElement("div",{role:"tabpanel",className:(0,o.Z)(r,s),hidden:n},t)}},65488:(e,t,n)=>{n.d(t,{Z:()=>d});var a=n(87462),o=n(67294),r=n(34334),s=n(72389),i=n(67392),c=n(7094),l=n(12466);const u="tabList__CuJ",p="tabItem_LNqP";function m(e){const{lazy:t,block:n,defaultValue:s,values:m,groupId:d,className:h}=e,b=o.Children.map(e.children,(e=>{if((0,o.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),f=m??b.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),y=(0,i.l)(f,((e,t)=>e.value===t.value));if(y.length>0)throw new Error(`Docusaurus error: Duplicate values "${y.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const g=null===s?s:s??b.find((e=>e.props.default))?.props.value??b[0].props.value;if(null!==g&&!f.some((e=>e.value===g)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${g}" but none of its children has the corresponding value. Available values are: ${f.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:v,setTabGroupChoices:w}=(0,c.U)(),[T,k]=(0,o.useState)(g),x=[],{blockElementScrollPositionUntilNextRender:E}=(0,l.o5)();if(null!=d){const e=v[d];null!=e&&e!==T&&f.some((t=>t.value===e))&&k(e)}const O=e=>{const t=e.currentTarget,n=x.indexOf(t),a=f[n].value;a!==T&&(E(t),k(a),null!=d&&w(d,String(a)))},N=e=>{let t=null;switch(e.key){case"ArrowRight":{const n=x.indexOf(e.currentTarget)+1;t=x[n]??x[0];break}case"ArrowLeft":{const n=x.indexOf(e.currentTarget)-1;t=x[n]??x[x.length-1];break}}t?.focus()};return o.createElement("div",{className:(0,r.Z)("tabs-container",u)},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":n},h)},f.map((e=>{let{value:t,label:n,attributes:s}=e;return o.createElement("li",(0,a.Z)({role:"tab",tabIndex:T===t?0:-1,"aria-selected":T===t,key:t,ref:e=>x.push(e),onKeyDown:N,onFocus:O,onClick:O},s,{className:(0,r.Z)("tabs__item",p,s?.className,{"tabs__item--active":T===t})}),n??t)}))),t?(0,o.cloneElement)(b.filter((e=>e.props.value===T))[0],{className:"margin-top--md"}):o.createElement("div",{className:"margin-top--md"},b.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==T})))))}function d(e){const t=(0,s.Z)();return o.createElement(m,(0,a.Z)({key:String(t)},e))}},30426:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>c,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var a=n(87462),o=(n(67294),n(3905)),r=n(65488),s=n(85162);const i={sidebar_position:30,title:"Auth Example - Connect to GDN"},c=void 0,l={unversionedId:"account-management/auth/connect-to-gdn",id:"account-management/auth/connect-to-gdn",title:"Auth Example - Connect to GDN",description:"The first step in using GDN is to establish a connection to a local region. When this code executes, it initializes the server connection to the region URL you specified.",source:"@site/docs/account-management/auth/connect-to-gdn.md",sourceDirName:"account-management/auth",slug:"/account-management/auth/connect-to-gdn",permalink:"/docs/account-management/auth/connect-to-gdn",draft:!1,editUrl:"https://github.com/macrometacorp/docs/edit/main/docs/account-management/auth/connect-to-gdn.md",tags:[],version:"current",sidebarPosition:30,frontMatter:{sidebar_position:30,title:"Auth Example - Connect to GDN"},sidebar:"defaultSidebar",previous:{title:"JSON Web Tokens (JWTs)",permalink:"/docs/account-management/auth/jwts"},next:{title:"Plans",permalink:"/docs/account-management/plans/"}},u={},p=[],m={toc:p};function d(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The first step in using GDN is to establish a connection to a local region. When this code executes, it initializes the server connection to the region URL you specified."),(0,o.kt)("p",null,"The code example below shows how you might use authentication in your code."),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"The example below assumes you have already installed one or more Macrometa SDKs. For instructions, refer to ",(0,o.kt)("a",{parentName:"p",href:"/docs/sdks/install-sdks"},"Install SDKs"),".")),(0,o.kt)(r.Z,{groupId:"operating-systems",mdxType:"Tabs"},(0,o.kt)(s.Z,{value:"js",label:"Javascript",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'const jsc8 = require("jsc8");\n\n// Email and password to authenticate client instance\nconst email = "nemo@nautilus.com";\nconst password = "xxxxxx";\nconst fabric = "_system";\n\nconst client = new jsc8({\n  url: "https://play.paas.macrometa.io",\n  fabricName: fabric\n});\n\n// Or create an authenticated instance with a JWT token.\nconst clientUsingJwt = new jsc8({\n  url: "https://play.paas.macrometa.io",\n  token: "XXXX",\n  fabricName: fabric\n});\n\n// Or create an authenticated instance with an API key.\nconst clientUsingApiKey = new jsc8({\n  url: "https://play.paas.macrometa.io",\n  apiKey: "XXXX",\n  fabricName: fabric\n});\n\nasync function main() {\n  await client\n    .login(email, password)\n    .then((e) => console.log("1. User authentication done!"))\n    .catch((error) => error);\n}\n\nmain()\n  .then()\n  .catch((error) => console.log(error));\n\n'))),(0,o.kt)(s.Z,{value:"py",label:"Python",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py"},"from c8 import C8Client\n\n# Define constants\nURL = \"play.paas.macrometa.io\"\nGEO_FABRIC = \"_system\" # Change this if you need to log in to a fabric other than _system.\nAPI_KEY = \"my API key\" # Change this to your API key.\n\n# Authenticate with your email and password\nclient = C8Client(protocol='https', host= URL, port=443,\n                    email='nemo@nautilus.com', password='xxxxx',\n                    geofabric= GEO_FABRIC)\n\n# Authenticate with API key (recommended)\nclient = C8Client(protocol='https', host=URL, port=443, apikey = API_KEY, geofabric = GEO_FABRIC)\n\n# Authenticate with JWT\nclient = C8Client(protocol='https', host=URL, port=443, token=\"XXXX\", geofabric = GEO_FABRIC)\n"))),(0,o.kt)(s.Z,{value:"",label:"Rest",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'import requests\nimport json\n\n# Constants\nURL = "api-gdn.macrometa.io"\nHTTP_URL = "https://{}".format(URL)\nEMAIL = "nemo@nautilus.com"\nPASSWORD = "xxxxxx"\nAUTH_TOKEN = "bearer "\n\n# Create an HTTPS Session\nurl = "{}/_open/auth".format(HTTP_URL)\npayload = {\n  \'email\':EMAIL,\n  \'password\':PASSWORD\n}\nheaders = {\n  \'content-type\': \'application/json\'\n}\n\nresponse = requests.post(url, data = json.dumps(payload), headers = headers)\n\nif response.status_code == 200:\n  resp_body = json.loads(response.text)\n  AUTH_TOKEN += resp_body["jwt"]\n  TENANT = resp_body["tenant"]\nelse:\n  raise Exception("Error while getting auth token. Code:{}, Reason:{}".format(response.status_code,response.reason))\n\n\nsession = requests.session()\nsession.headers.update({"content-type": \'application/json\'})\nsession.headers.update({"authorization": AUTH_TOKEN})  \n')))))}d.isMDXComponent=!0}}]);