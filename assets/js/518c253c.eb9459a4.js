"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[43787],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=u(e,["components","mdxType","originalType","parentName"]),c=s(n),d=a,v=c["".concat(l,".").concat(d)]||c[d]||m[d]||i;return n?r.createElement(v,o(o({ref:t},p),{},{components:n})):r.createElement(v,o({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=c;var u={};for(var l in t)hasOwnProperty.call(t,l)&&(u[l]=t[l]);u.originalType=e,u.mdxType="string"==typeof e?e:a,o[1]=u;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},92728:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>u,toc:()=>s});var r=n(87462),a=(n(67294),n(3905));const i={title:"ever (Window)"},o=void 0,u={unversionedId:"cep/query-guide/functions/unique/ever",id:"cep/query-guide/functions/unique/ever",title:"ever (Window)",description:"Window that retains the latest events based on a given unique keys. When",source:"@site/docs/cep/query-guide/functions/unique/ever.md",sourceDirName:"cep/query-guide/functions/unique",slug:"/cep/query-guide/functions/unique/ever",permalink:"/docs/cep/query-guide/functions/unique/ever",draft:!1,editUrl:"https://github.com/macrometacorp/docs/edit/main/docs/cep/query-guide/functions/unique/ever.md",tags:[],version:"current",frontMatter:{title:"ever (Window)"},sidebar:"defaultSidebar",previous:{title:"deduplicate (Stream Processor)",permalink:"/docs/cep/query-guide/functions/unique/deduplicate"},next:{title:"externalTimeBatch (Window)",permalink:"/docs/cep/query-guide/functions/unique/externalTimeBatch"}},l={},s=[{value:"Syntax",id:"syntax",level:2},{value:"Query Parameters",id:"query-parameters",level:2},{value:"Example 1",id:"example-1",level:2},{value:"Example 2",id:"example-2",level:2},{value:"Example 3",id:"example-3",level:2}],p={toc:s};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Window that retains the latest events based on a given unique keys. When\na new event arrives with the same key it replaces the one that exist in\nthe window."),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"This function is not recommended to be used when the\nmaximum number of unique attributes are undefined, as there is a risk of\nsystem going out to memory.")),(0,a.kt)("h2",{id:"syntax"},"Syntax"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"unique:ever(<INT|LONG|FLOAT|BOOL|DOUBLE|STRING> unique.key)\nunique:ever(<INT|LONG|FLOAT|BOOL|DOUBLE|STRING> unique.key, <INT|LONG|FLOAT|BOOL|DOUBLE|STRING> ...)\n")),(0,a.kt)("h2",{id:"query-parameters"},"Query Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"),(0,a.kt)("th",{parentName:"tr",align:null},"Default Value"),(0,a.kt)("th",{parentName:"tr",align:null},"Possible Data Types"),(0,a.kt)("th",{parentName:"tr",align:null},"Optional"),(0,a.kt)("th",{parentName:"tr",align:null},"Dynamic"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"unique.key"),(0,a.kt)("td",{parentName:"tr",align:null},"The attribute used to checked for uniqueness."),(0,a.kt)("td",{parentName:"tr",align:null}),(0,a.kt)("td",{parentName:"tr",align:null},"INT LONG FLOAT BOOL DOUBLE STRING"),(0,a.kt)("td",{parentName:"tr",align:null},"No"),(0,a.kt)("td",{parentName:"tr",align:null},"Yes")))),(0,a.kt)("h2",{id:"example-1"},"Example 1"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"CREATE STREAM LoginEvents (timestamp long, ip string);\n\nfrom LoginEvents WINDOW UNIQUE:ever(ip)\nselect count(ip) as ipCount\ninsert events into UniqueIps;\n")),(0,a.kt)("p",null,"Query collects all unique events based on the ",(0,a.kt)("inlineCode",{parentName:"p"},"ip")," attribute by\nretaining the latest unique events from the ",(0,a.kt)("inlineCode",{parentName:"p"},"LoginEvents")," stream. Then\nthe query counts the unique ",(0,a.kt)("inlineCode",{parentName:"p"},"ip"),"s arrived so far and outputs the\n",(0,a.kt)("inlineCode",{parentName:"p"},"ipCount")," via the ",(0,a.kt)("inlineCode",{parentName:"p"},"UniqueIps")," stream."),(0,a.kt)("h2",{id:"example-2"},"Example 2"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"CREATE STREAM DriverChangeStream (trainID string, driver string);\n\nfrom DriverChangeStream WINDOW UNIQUE:ever(trainID)\nselect trainID, driver\ninsert expired events into PreviousDriverChangeStream;\n")),(0,a.kt)("p",null,"Query collects all unique events based on the ",(0,a.kt)("inlineCode",{parentName:"p"},"trainID")," attribute by\nretaining the latest unique events from the ",(0,a.kt)("inlineCode",{parentName:"p"},"DriverChangeStream")," stream.\nThe query outputs the previous unique event stored in the window as the\nexpired events are emitted via ",(0,a.kt)("inlineCode",{parentName:"p"},"PreviousDriverChangeStream")," stream."),(0,a.kt)("h2",{id:"example-3"},"Example 3"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"CREATE STREAM StockStream (symbol string, price float);\nCREATE STREAM PriceRequestStream(symbol string);\n\nfrom StockStream WINDOW UNIQUE:ever(symbol) as s join PriceRequestStream as p\non s.symbol == p.symbol\nselect s.symbol as symbol, s.price as price\ninsert events into PriceResponseStream;\n")),(0,a.kt)("p",null,"Query stores the last unique event for each ",(0,a.kt)("inlineCode",{parentName:"p"},"symbol")," attribute of\n",(0,a.kt)("inlineCode",{parentName:"p"},"StockStream")," stream, and joins them with events arriving on the\n",(0,a.kt)("inlineCode",{parentName:"p"},"PriceRequestStream")," for equal ",(0,a.kt)("inlineCode",{parentName:"p"},"symbol")," attributes to fetch the latest\n",(0,a.kt)("inlineCode",{parentName:"p"},"price")," for each requested ",(0,a.kt)("inlineCode",{parentName:"p"},"symbol")," and output via ",(0,a.kt)("inlineCode",{parentName:"p"},"PriceResponseStream"),"\nstream."))}m.isMDXComponent=!0}}]);