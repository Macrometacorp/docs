"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[91419],{3905:(t,e,n)=>{n.d(e,{Zo:()=>d,kt:()=>N});var a=n(67294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},l=Object.keys(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var o=a.createContext({}),p=function(t){var e=a.useContext(o),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},d=function(t){var e=p(t.components);return a.createElement(o.Provider,{value:e},t.children)},m={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},u=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,l=t.originalType,o=t.parentName,d=s(t,["components","mdxType","originalType","parentName"]),u=p(n),N=r,k=u["".concat(o,".").concat(N)]||u[N]||m[N]||l;return n?a.createElement(k,i(i({ref:e},d),{},{components:n})):a.createElement(k,i({ref:e},d))}));function N(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=n.length,i=new Array(l);i[0]=u;var s={};for(var o in e)hasOwnProperty.call(e,o)&&(s[o]=e[o]);s.originalType=t,s.mdxType="string"==typeof t?t:r,i[1]=s;for(var p=2;p<l;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},64771:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>o,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>s,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const l={title:"rabbitmq (Sink)"},i=void 0,s={unversionedId:"cep/sink/rabbitmq",id:"cep/sink/rabbitmq",title:"rabbitmq (Sink)",description:"The rabbitmq sink pushes the events into a rabbitmq broker using the AMQP protocol",source:"@site/docs/cep/sink/rabbitmq.md",sourceDirName:"cep/sink",slug:"/cep/sink/rabbitmq",permalink:"/docs/cep/sink/rabbitmq",draft:!1,editUrl:"https://github.com/macrometacorp/docs/edit/main/docs/cep/sink/rabbitmq.md",tags:[],version:"current",frontMatter:{title:"rabbitmq (Sink)"},sidebar:"defaultSidebar",previous:{title:"prometheus (Sink)",permalink:"/docs/cep/sink/prometheus"},next:{title:"s3 (Sink)",permalink:"/docs/cep/sink/s3"}},o={},p=[{value:"Query Parameters",id:"query-parameters",level:2},{value:"Example 1",id:"example-1",level:2}],d={toc:p};function m(t){let{components:e,...n}=t;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The rabbitmq sink pushes the events into a rabbitmq broker using the AMQP protocol"),(0,r.kt)("p",null,"Syntax"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'CREATE SINK <NAME> WITH (type="rabbitmq", map.type="<STRING>", uri="<STRING>", heartbeat="<INT>", exchange.name="<STRING>", exchange.type="<STRING>", exchange.durable.enabled="<BOOL>", exchange.autodelete.enabled="<BOOL>", delivery.mode="<INT>", content.type="<STRING>", content.encoding="<STRING>", priority="<INT>", correlation.id="<STRING>", reply.to="<STRING>", expiration="<STRING>", message.id="<STRING>", timestamp="<STRING>", type="<STRING>", user.id="<STRING>", app.id="<STRING>", routing.key="<STRING>", headers="<STRING>", tls.enabled="<BOOL>", tls.truststore.path="<STRING>", tls.truststore.password="<STRING>", tls.truststore.type="<STRING>", tls.version="<STRING>")\n')),(0,r.kt)("h2",{id:"query-parameters"},"Query Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Default Value"),(0,r.kt)("th",{parentName:"tr",align:null},"Possible Data Types"),(0,r.kt)("th",{parentName:"tr",align:null},"Optional"),(0,r.kt)("th",{parentName:"tr",align:null},"Dynamic"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"uri"),(0,r.kt)("td",{parentName:"tr",align:null},"The URI that used to connect to an AMQP server. If no URI is specified, an error is logged in the CLI.e.g., ",(0,r.kt)("inlineCode",{parentName:"td"},"amqp://guest:guest"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"amqp://guest:guest@localhost:5672")),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"STRING"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"No")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"heartbeat"),(0,r.kt)("td",{parentName:"tr",align:null},"The period of time (in seconds) after which the peer TCP connection should be considered unreachable (down) by RabbitMQ and client libraries."),(0,r.kt)("td",{parentName:"tr",align:null},"60"),(0,r.kt)("td",{parentName:"tr",align:null},"INT"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"No")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"exchange.name"),(0,r.kt)("td",{parentName:"tr",align:null},"The name of the exchange that decides what to do with a message it sends.If the ",(0,r.kt)("inlineCode",{parentName:"td"},"exchange.name")," already exists in the RabbitMQ server, then the system uses that ",(0,r.kt)("inlineCode",{parentName:"td"},"exchange.name")," instead of redeclaring."),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"STRING"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"exchange.type"),(0,r.kt)("td",{parentName:"tr",align:null},"The type of the exchange.name. The exchange types available are ",(0,r.kt)("inlineCode",{parentName:"td"},"direct"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"fanout"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"topic")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"headers"),". For a detailed description of each type, see ","[","RabbitMQ - AMQP Concepts","]","(",(0,r.kt)("a",{parentName:"td",href:"https://www.rabbitmq.com/tutorials/amqp-concepts.html"},"https://www.rabbitmq.com/tutorials/amqp-concepts.html"),")"),(0,r.kt)("td",{parentName:"tr",align:null},"direct"),(0,r.kt)("td",{parentName:"tr",align:null},"STRING"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"exchange.durable.enabled"),(0,r.kt)("td",{parentName:"tr",align:null},"If this is set to ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),", the exchange remains declared even if the broker restarts."),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"BOOL"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"exchange.autodelete.enabled"),(0,r.kt)("td",{parentName:"tr",align:null},"If this is set to ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),", the exchange is automatically deleted when it is not used anymore."),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"BOOL"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"delivery.mode"),(0,r.kt)("td",{parentName:"tr",align:null},"This determines whether the connection should be persistent or not. The value must be either ",(0,r.kt)("inlineCode",{parentName:"td"},"1")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"2"),".If the delivery.mode = 1, then the connection is not persistent. If the delivery.mode = 2, then the connection is persistent."),(0,r.kt)("td",{parentName:"tr",align:null},"1"),(0,r.kt)("td",{parentName:"tr",align:null},"INT"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"No")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"content.type"),(0,r.kt)("td",{parentName:"tr",align:null},"The message content type. This should be the ",(0,r.kt)("inlineCode",{parentName:"td"},"MIME")," content type."),(0,r.kt)("td",{parentName:"tr",align:null},"null"),(0,r.kt)("td",{parentName:"tr",align:null},"STRING"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"No")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"content.encoding"),(0,r.kt)("td",{parentName:"tr",align:null},"The message content encoding. The value should be ",(0,r.kt)("inlineCode",{parentName:"td"},"MIME")," content encoding."),(0,r.kt)("td",{parentName:"tr",align:null},"null"),(0,r.kt)("td",{parentName:"tr",align:null},"STRING"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"No")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"priority"),(0,r.kt)("td",{parentName:"tr",align:null},"Specify a value within the range 0 to 9 in this parameter to indicate the message priority."),(0,r.kt)("td",{parentName:"tr",align:null},"0"),(0,r.kt)("td",{parentName:"tr",align:null},"INT"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"correlation.id"),(0,r.kt)("td",{parentName:"tr",align:null},"The message correlated to the current message. e.g., The request to which this message is a reply. When a request arrives, a message describing the task is pushed to the queue by the front end server. After that the frontend server blocks to wait for a response message with the same correlation ID. A pool of worker machines listen on queue, and one of them picks up the task, performs it, and returns the result as message. Once a message with right correlation ID arrives, thefront end server continues to return the response to the caller."),(0,r.kt)("td",{parentName:"tr",align:null},"null"),(0,r.kt)("td",{parentName:"tr",align:null},"STRING"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"reply.to"),(0,r.kt)("td",{parentName:"tr",align:null},"This is an anonymous exclusive callback queue. When the RabbitMQ receives a message with the ",(0,r.kt)("inlineCode",{parentName:"td"},"reply.to")," property, it sends the response to the mentioned queue. This is commonly used to name a reply queue (or any other identifier that helps a consumer application to direct its response)."),(0,r.kt)("td",{parentName:"tr",align:null},"null"),(0,r.kt)("td",{parentName:"tr",align:null},"STRING"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"No")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"expiration"),(0,r.kt)("td",{parentName:"tr",align:null},"The expiration time after which the message is deleted. The value of the expiration field describes the TTL (Time To Live) period in milliseconds."),(0,r.kt)("td",{parentName:"tr",align:null},"null"),(0,r.kt)("td",{parentName:"tr",align:null},"STRING"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"No")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"message.id"),(0,r.kt)("td",{parentName:"tr",align:null},"The message identifier. If applications need to identify messages, it is recommended that they use this attribute instead of putting it into the message payload."),(0,r.kt)("td",{parentName:"tr",align:null},"null"),(0,r.kt)("td",{parentName:"tr",align:null},"STRING"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"timestamp"),(0,r.kt)("td",{parentName:"tr",align:null},"Timestamp of the moment when the message was sent. If you do not specify a value for this parameter, the system automatically generates the current date and time as the timestamp value. The format of the timestamp value is ",(0,r.kt)("inlineCode",{parentName:"td"},"dd/mm/yyyy"),"."),(0,r.kt)("td",{parentName:"tr",align:null},"current timestamp"),(0,r.kt)("td",{parentName:"tr",align:null},"STRING"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"No")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"type"),(0,r.kt)("td",{parentName:"tr",align:null},"The type of the message. e.g., The type of the event or the command represented by the message."),(0,r.kt)("td",{parentName:"tr",align:null},"null"),(0,r.kt)("td",{parentName:"tr",align:null},"STRING"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"No")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"user.id"),(0,r.kt)("td",{parentName:"tr",align:null},"The user ID specified here is verified by RabbitMQ against theuser name of the actual connection. This is an optional parameter."),(0,r.kt)("td",{parentName:"tr",align:null},"null"),(0,r.kt)("td",{parentName:"tr",align:null},"STRING"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"No")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"app.id"),(0,r.kt)("td",{parentName:"tr",align:null},"The identifier of the application that produced the message."),(0,r.kt)("td",{parentName:"tr",align:null},"null"),(0,r.kt)("td",{parentName:"tr",align:null},"STRING"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"No")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"routing.key"),(0,r.kt)("td",{parentName:"tr",align:null},"The key based on which the excahnge determines how to route the message to the queue. The routing key is similar to an address for the message."),(0,r.kt)("td",{parentName:"tr",align:null},"empty"),(0,r.kt)("td",{parentName:"tr",align:null},"STRING"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"headers"),(0,r.kt)("td",{parentName:"tr",align:null},"The headers of the message. The attributes used for routing are taken from the this paremeter. A message is considered matching if the value of the header equals the value specified upon binding."),(0,r.kt)("td",{parentName:"tr",align:null},"null"),(0,r.kt)("td",{parentName:"tr",align:null},"STRING"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"tls.enabled"),(0,r.kt)("td",{parentName:"tr",align:null},"This parameter specifies whether an encrypted communication channel should be established or not. When this parameter is set to ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),", the ",(0,r.kt)("inlineCode",{parentName:"td"},"tls.truststore.path")," and ",(0,r.kt)("inlineCode",{parentName:"td"},"tls.truststore.password")," parameters are initialized."),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"BOOL"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"No")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"tls.truststore.path"),(0,r.kt)("td",{parentName:"tr",align:null},"The file path to the location of the truststore of the client that sends the RabbitMQ events via the ",(0,r.kt)("inlineCode",{parentName:"td"},"AMQP")," protocol. A custom client-truststore can be specified if required. If a custom truststore is not specified, then the system uses the default client-trustore in the ",(0,r.kt)("inlineCode",{parentName:"td"},"${carbon.home}/resources/security")," directory."),(0,r.kt)("td",{parentName:"tr",align:null},"\\${carbon.home}/resources/security/client-truststore.jks"),(0,r.kt)("td",{parentName:"tr",align:null},"STRING"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"No")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"tls.truststore.password"),(0,r.kt)("td",{parentName:"tr",align:null},"The password for the client-truststore. A custom password can be specified if required. If no custom password is specified, then the system uses ",(0,r.kt)("inlineCode",{parentName:"td"},"gdncarbon")," as the default password."),(0,r.kt)("td",{parentName:"tr",align:null},"gdncarbon"),(0,r.kt)("td",{parentName:"tr",align:null},"STRING"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"No")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"tls.truststore.type"),(0,r.kt)("td",{parentName:"tr",align:null},"The type of the truststore."),(0,r.kt)("td",{parentName:"tr",align:null},"JKS"),(0,r.kt)("td",{parentName:"tr",align:null},"STRING"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"No")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"tls.version"),(0,r.kt)("td",{parentName:"tr",align:null},"The version of the tls/ssl."),(0,r.kt)("td",{parentName:"tr",align:null},"SSL"),(0,r.kt)("td",{parentName:"tr",align:null},"STRING"),(0,r.kt)("td",{parentName:"tr",align:null},"Yes"),(0,r.kt)("td",{parentName:"tr",align:null},"No")))),(0,r.kt)("h2",{id:"example-1"},"Example 1"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"@App:name('TestExecutionPlan')\nCREATE STREAM FooStream (symbol string, price float, volume long);\n\n@info(name = 'query1')\nCREATE SINK BarStream WITH (type ='rabbitmq', uri = 'amqp://guest:guest@localhost:5672', exchange.name = 'direct', routing.key= 'direct', map.type='xml') (symbol string, price float, volume long);\n\ninsert into BarStream\nfrom FooStream select symbol, price, volume ;\n")),(0,r.kt)("p",null,"This query publishes events to the ",(0,r.kt)("inlineCode",{parentName:"p"},"direct")," exchange with the ",(0,r.kt)("inlineCode",{parentName:"p"},"direct")," exchange type and the ",(0,r.kt)("inlineCode",{parentName:"p"},"directTest")," routing key."))}m.isMDXComponent=!0}}]);