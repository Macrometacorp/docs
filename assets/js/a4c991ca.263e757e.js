"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[97295],{3905:(e,t,n)=>{n.d(t,{Zo:()=>o,kt:()=>N});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var m=a.createContext({}),p=function(e){var t=a.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},o=function(e){var t=p(e.components);return a.createElement(m.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,m=e.parentName,o=d(e,["components","mdxType","originalType","parentName"]),k=p(n),N=r,s=k["".concat(m,".").concat(N)]||k[N]||u[N]||i;return n?a.createElement(s,l(l({ref:t},o),{},{components:n})):a.createElement(s,l({ref:t},o))}));function N(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=k;var d={};for(var m in t)hasOwnProperty.call(t,m)&&(d[m]=t[m]);d.originalType=e,d.mdxType="string"==typeof e?e:r,l[1]=d;for(var p=2;p<i;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},34878:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>d,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const i={sidebar_position:60,title:"Data Summarizations (Aggregations) Examples"},l=void 0,d={unversionedId:"cep/examples/data-summarization",id:"cep/examples/data-summarization",title:"Data Summarizations (Aggregations) Examples",description:"This page explains ways to aggregate or transform your data. For more information information on windows refer to Stream Worker Query Guide.",source:"@site/docs/cep/examples/data-summarization.md",sourceDirName:"cep/examples",slug:"/cep/examples/data-summarization",permalink:"/docs/cep/examples/data-summarization",draft:!1,editUrl:"https://github.com/macrometacorp/docs/edit/main/docs/cep/examples/data-summarization.md",tags:[],version:"current",sidebarPosition:60,frontMatter:{sidebar_position:60,title:"Data Summarizations (Aggregations) Examples"},sidebar:"defaultSidebar",previous:{title:"Data Transformation Examples",permalink:"/docs/cep/examples/data-transformation"},next:{title:"Patterns and Trends Detection Examples",permalink:"/docs/cep/examples/patterns-and-trends"}},m={},p=[{value:"Sliding Time",id:"sliding-time",level:2},{value:"Sliding Time Example",id:"sliding-time-example",level:3},{value:"Sliding Time Aggregation Behavior",id:"sliding-time-aggregation-behavior",level:3},{value:"Batch (Tumbling) Time",id:"batch-tumbling-time",level:2},{value:"Batch Time Example",id:"batch-time-example",level:3},{value:"Batch Time Aggregation Behavior",id:"batch-time-aggregation-behavior",level:3},{value:"Sliding Event Count",id:"sliding-event-count",level:2},{value:"Sliding Event Count Example",id:"sliding-event-count-example",level:3},{value:"Sliding Event Count Aggregation Behavior",id:"sliding-event-count-aggregation-behavior",level:3},{value:"Batch (Tumbling) Event Count",id:"batch-tumbling-event-count",level:2},{value:"Batch Event Count Example",id:"batch-event-count-example",level:3},{value:"Batch Event Count Aggregation Behavior",id:"batch-event-count-aggregation-behavior",level:3},{value:"Session",id:"session",level:2},{value:"Session Example",id:"session-example",level:3},{value:"Session Aggregation Behavior",id:"session-aggregation-behavior",level:3},{value:"Named Window",id:"named-window",level:2},{value:"Named Window Example",id:"named-window-example",level:3},{value:"Named Window Aggregation Behavior",id:"named-window-aggregation-behavior",level:3}],o={toc:p};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},o,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This page explains ways to aggregate or transform your data. For more information information on ",(0,r.kt)("a",{parentName:"p",href:"/docs/cep/query-guide/query#window"},"windows")," refer to ",(0,r.kt)("a",{parentName:"p",href:"/docs/cep/query-guide/"},"Stream Worker Query Guide"),"."),(0,r.kt)("h2",{id:"sliding-time"},"Sliding Time"),(0,r.kt)("p",null,"This example shows aggregating events over time in a sliding manner."),(0,r.kt)("h3",{id:"sliding-time-example"},"Sliding Time Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE STREAM TemperatureStream(sensorId string, temperature double);\n\nCREATE SINK STREAM OverallTemperatureStream(avgTemperature double, maxTemperature double, numberOfEvents long);\nCREATE SINK STREAM SensorIdTemperatureStream(sensorId string, avgTemperature double, maxTemperature double);\n\n@info(name = 'Overall-analysis')\nINSERT ALL events INTO OverallTemperatureStream\n-- Calculate average, maximum, and count for `temperature` attribute.\nSELECT avg(temperature) AS avgTemperature,\n       max(temperature) AS maxTemperature,\n       count() as numberOfEvents\n-- Aggregate events over `1 minute` sliding window\nFROM TemperatureStream window time(1 min);\n-- Output when events are added, and removed (expired) from `window time()`.\n\n\n@info(name = 'SensorId-analysis')\nINSERT INTO SensorIdTemperatureStream\nSELECT sensorId,\n-- Calculate average, and maximum for `temperature`, by grouping events by `sensorId`.\n       avg(temperature) as avgTemperature,\n       max(temperature) as maxTemperature\n-- Aggregate events over `30 seconds` sliding window\nFROM TemperatureStream window time(30 sec)       \nGROUP BY sensorId\n-- Output events only when `avgTemperature` is greater than `20.0`.\nHAVING avgTemperature > 20.0;\n-- Output only when events are added to `window time()`.\n")),(0,r.kt)("h3",{id:"sliding-time-aggregation-behavior"},"Sliding Time Aggregation Behavior"),(0,r.kt)("p",null,"When events are sent to ",(0,r.kt)("inlineCode",{parentName:"p"},"TemperatureStream")," stream, following events are emitted at ",(0,r.kt)("inlineCode",{parentName:"p"},"OverallTemperatureStream")," via ",(0,r.kt)("inlineCode",{parentName:"p"},"Overall-analysis")," query, and ",(0,r.kt)("inlineCode",{parentName:"p"},"SensorIdTemperatureStream")," via ",(0,r.kt)("inlineCode",{parentName:"p"},"SensorId-analysis")," query."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Time"),(0,r.kt)("th",{parentName:"tr",align:null},"Input to ",(0,r.kt)("inlineCode",{parentName:"th"},"TemperatureStream")),(0,r.kt)("th",{parentName:"tr",align:null},"Output at ",(0,r.kt)("inlineCode",{parentName:"th"},"OverallTemperatureStream")),(0,r.kt)("th",{parentName:"tr",align:null},"Output at ",(0,r.kt)("inlineCode",{parentName:"th"},"SensorIdTemperatureStream")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"9:00:00"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"18.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"18.0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"18.0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"1"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"No events, as having ",(0,r.kt)("br",null),"condition not satisfied.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"9:00:10"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"23.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"20.5"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"23.0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"2"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"23.0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"23.0"),"]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"9:00:20"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"22.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"21.0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"23.0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"3"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"22.5"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"22.0"),"]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"9:00:40"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"No events, as expired ",(0,r.kt)("br",null),"events are not emitted.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"9:00:50"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"No events, as expired ",(0,r.kt)("br",null),"events are not emitted.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"9:00:00"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"22.5"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"23.0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"2"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"9:01:10"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"17.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"19.5"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"22.0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"2"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"9:01:20"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"17.0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"17.0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"1"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"9:02:10"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"null"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"null"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"-")))),(0,r.kt)("h2",{id:"batch-tumbling-time"},"Batch (Tumbling) Time"),(0,r.kt)("p",null,"This example shows aggregating events over time in a batch (tumbling) manner."),(0,r.kt)("h3",{id:"batch-time-example"},"Batch Time Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE STREAM TemperatureStream(sensorId string, temperature double);\n\nCREATE SINK STREAM OverallTemperatureStream(avgTemperature double, maxTemperature double, numberOfEvents long);\nCREATE SINK STREAM SensorIdTemperatureStream(sensorId string, avgTemperature double, maxTemperature double);\n\n@info(name = 'Overall-analysis')\n-- Calculate average, maximum, and count for `temperature` attribute.\nINSERT INTO OverallTemperatureStream\nSELECT avg(temperature) AS avgTemperature,\n       max(temperature) AS maxTemperature,\n       count() AS numberOfEvents\n-- Aggregate events every `1 minute`, from the arrival of the first event.\nFROM TemperatureStream window timeBatch(1 min);\n\n\n@info(name = 'SensorId-analysis')\nINSERT INTO SensorIdTemperatureStream\nSELECT sensorId,\n-- Calculate average, and maximum for `temperature`, by grouping events by `sensorId`.\n       avg(temperature) AS avgTemperature,\n       max(temperature) AS maxTemperature\n-- Aggregate events every `30 seconds` from epoch timestamp `0`.\nFROM TemperatureStream window timeBatch(30 sec, 0)\nGROUP BY sensorId\n-- Output events only when `avgTemperature` is greater than `20.0`.\nHAVING avgTemperature > 20.0;\n")),(0,r.kt)("h3",{id:"batch-time-aggregation-behavior"},"Batch Time Aggregation Behavior"),(0,r.kt)("p",null,"When events are sent to ",(0,r.kt)("inlineCode",{parentName:"p"},"TemperatureStream")," stream, following events will get emitted at ",(0,r.kt)("inlineCode",{parentName:"p"},"OverallTemperatureStream")," stream via ",(0,r.kt)("inlineCode",{parentName:"p"},"Overall-analysis")," query, and ",(0,r.kt)("inlineCode",{parentName:"p"},"SensorIdTemperatureStream")," stream via ",(0,r.kt)("inlineCode",{parentName:"p"},"SensorId-analysis")," query."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Time"),(0,r.kt)("th",{parentName:"tr",align:null},"Input to ",(0,r.kt)("inlineCode",{parentName:"th"},"TemperatureStream")),(0,r.kt)("th",{parentName:"tr",align:null},"Output at ",(0,r.kt)("inlineCode",{parentName:"th"},"OverallTemperatureStream")),(0,r.kt)("th",{parentName:"tr",align:null},"Output at ",(0,r.kt)("inlineCode",{parentName:"th"},"SensorIdTemperatureStream")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"9:00:10"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"21.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"9:00:20"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"25.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"9:00:30"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"21.0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"21.0"),"]",",","[",(0,r.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"25.0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"25.0"),"]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"9:00:35"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"26.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"9:00:40"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"27.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"9:00:55"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"19.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"9:00:00"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"26.5"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"26.0"),"]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"9:01:10"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"23.6"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"27.0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"5"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"9:01:20"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"21.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"9:01:30"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"21.0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"21.0"),"]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"9:02:10"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"21.0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"21.0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"1"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"-")))),(0,r.kt)("h2",{id:"sliding-event-count"},"Sliding Event Count"),(0,r.kt)("p",null,"This example shows aggregating events based on event count in a sliding manner."),(0,r.kt)("h3",{id:"sliding-event-count-example"},"Sliding Event Count Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE STREAM TemperatureStream(sensorId string, temperature double);\n\nCREATE SINK STREAM OverallTemperatureStream(avgTemperature double, maxTemperature double, numberOfEvents long);\nCREATE SINK STREAM SensorIdTemperatureStream(sensorId string, avgTemperature double, maxTemperature double);\n\n@info(name = 'Overall-analysis')\nINSERT INTO OverallTemperatureStream\n-- Calculate average, maximum, and count for `temperature` attribute.\nSELECT avg(temperature) as avgTemperature,\n       max(temperature) as maxTemperature,\n       count() as numberOfEvents\n-- Aggregate last `4` events in a sliding manner.\nFROM TemperatureStream window length(4);\n\n\n@info(name = 'SensorId-analysis')\nINSERT INTO SensorIdTemperatureStream\nSELECT sensorId,\n-- Calculate average, and maximum for `temperature`, by grouping events by `sensorId`.\n       avg(temperature) as avgTemperature,\n       max(temperature) as maxTemperature\n-- Aggregate last `5` events in a sliding manner.\nFROM TemperatureStream window length(5)\nGROUP BY sensorId\n-- Output events only when `avgTemperature` is greater than or equal to `20.0`.\nHAVING avgTemperature >= 20.0;\n")),(0,r.kt)("h3",{id:"sliding-event-count-aggregation-behavior"},"Sliding Event Count Aggregation Behavior"),(0,r.kt)("p",null,"When events are sent to ",(0,r.kt)("inlineCode",{parentName:"p"},"TemperatureStream")," stream, the following events are emitted at ",(0,r.kt)("inlineCode",{parentName:"p"},"OverallTemperatureStream")," via ",(0,r.kt)("inlineCode",{parentName:"p"},"Overall-analysis")," query, and ",(0,r.kt)("inlineCode",{parentName:"p"},"SensorIdTemperatureStream")," via ",(0,r.kt)("inlineCode",{parentName:"p"},"SensorId-analysis")," query."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input to ",(0,r.kt)("inlineCode",{parentName:"th"},"TemperatureStream")),(0,r.kt)("th",{parentName:"tr",align:null},"Output at ",(0,r.kt)("inlineCode",{parentName:"th"},"OverallTemperatureStream")),(0,r.kt)("th",{parentName:"tr",align:null},"Output at ",(0,r.kt)("inlineCode",{parentName:"th"},"SensorIdTemperatureStream")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"19.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"19.0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"19.0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"1"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"No events, as having ",(0,r.kt)("br",null),"condition not satisfied ",(0,r.kt)("br",null),"for ",(0,r.kt)("inlineCode",{parentName:"td"},"'1001'"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"26.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"22.5"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"26.0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"2"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"26.0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"26.0"),"]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"24.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"23.0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"26.0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"3"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"25.5"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"24.0"),"]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"20.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"22.5"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"26.0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"4"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"No events, as having ",(0,r.kt)("br",null),"condition not satisfied ",(0,r.kt)("br",null),"for ",(0,r.kt)("inlineCode",{parentName:"td"},"'1001'"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"21.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"22.75"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"26.0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"4"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"20.0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"19.0"),"]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"22.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"21.75"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"24.0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"4"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"21.0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"20.0"),"]")))),(0,r.kt)("h2",{id:"batch-tumbling-event-count"},"Batch (Tumbling) Event Count"),(0,r.kt)("p",null,"This example shows aggregating events based on event count in a batch (tumbling) manner."),(0,r.kt)("h3",{id:"batch-event-count-example"},"Batch Event Count Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE STREAM TemperatureStream(sensorId string, temperature double);\n\nCREATE SINK STREAM OverallTemperatureStream(avgTemperature double, maxTemperature double, numberOfEvents long);\nCREATE SINK STREAM SensorIdTemperatureStream(sensorId string, avgTemperature double, maxTemperature double);\n\n@info(name = 'Overall-analysis')\ninsert into OverallTemperatureStream\n-- Calculate average, maximum, and count for `temperature` attribute.\nselect avg(temperature) as avgTemperature,\n       max(temperature) as maxTemperature,\n       count() as numberOfEvents\n-- Aggregate every `4` events in a batch manner.\nfrom TemperatureStream window lengthBatch(4);\n\n@info(name = 'SensorId-analysis')\nINSERT INTO SensorIdTemperatureStream\nSELECT sensorId,\n-- Calculate average, and maximum for `temperature`, by grouping events by `sensorId`.\n       avg(temperature) AS avgTemperature,\n       max(temperature) AS maxTemperature\n-- Aggregate every `5` events in a batch manner.\nFROM TemperatureStream window lengthBatch(5)\nGROUP BY sensorId\n-- Output events only when `avgTemperature` is greater than or equal to `20.0`.\nHAVING avgTemperature >= 20.0;\n")),(0,r.kt)("h3",{id:"batch-event-count-aggregation-behavior"},"Batch Event Count Aggregation Behavior"),(0,r.kt)("p",null,"When events are sent to ",(0,r.kt)("inlineCode",{parentName:"p"},"TemperatureStream")," stream, following events are emitted at ",(0,r.kt)("inlineCode",{parentName:"p"},"OverallTemperatureStream")," via ",(0,r.kt)("inlineCode",{parentName:"p"},"Overall-analysis")," query, and ",(0,r.kt)("inlineCode",{parentName:"p"},"SensorIdTemperatureStream")," via ",(0,r.kt)("inlineCode",{parentName:"p"},"SensorId-analysis")," query."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input to ",(0,r.kt)("inlineCode",{parentName:"th"},"TemperatureStream")),(0,r.kt)("th",{parentName:"tr",align:null},"Output at ",(0,r.kt)("inlineCode",{parentName:"th"},"OverallTemperatureStream")),(0,r.kt)("th",{parentName:"tr",align:null},"Output at ",(0,r.kt)("inlineCode",{parentName:"th"},"SensorIdTemperatureStream")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"19.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"26.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"24.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"20.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"22.5"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"26.0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"4"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"21.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"25.5"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"24.0"),"]",", ",(0,r.kt)("br",null),"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"20.0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"19.0"),"]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"22.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"21.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"22.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"21.5"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"22.0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"4"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"-")))),(0,r.kt)("h2",{id:"session"},"Session"),(0,r.kt)("p",null,"This example shows aggregating events over continuous activity sessions in a sliding manner."),(0,r.kt)("h3",{id:"session-example"},"Session Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE STREAM PurchaseStream(userId string, item string, price double);\n\nCREATE SINK STREAM OutOfOrderUserIdPurchaseStream(userId string, totalItems long, totalPrice double);\nCREATE SINK STREAM UserIdPurchaseStream(userId string, totalItems long, totalPrice double);\n\n@info(name = 'Session-analysis')\n-- Calculate count and sum of `price` per `userId` during the session.\nINSERT INTO OutOfOrderUserIdPurchaseStream\nSELECT userId,\n       count() as totalItems,\n       sum(price) as totalPrice\n-- Aggregate events over a `userId` based session window with `1 minute` session gap.\nFROM PurchaseStream window session(1 min, userId)\nGROUP BY userId;\n-- Output when events are added to the session.\n\n@info(name = 'Session-analysis-with-late-event-arrivals')\n-- Calculate count and sum of `price` per `userId` during the session.\nINSERT INTO UserIdPurchaseStream\nSELECT userId,\n       count() AS totalItems,\n       sum(price) AS totalPrice\n-- Aggregate events over a `userId` based session window with `1 minute` session gap,\n-- and `20 seconds` of allowed latency to capture late event arrivals.\nFROM PurchaseStream window session(1 min, userId, 20 sec)\nGROUP BY userId;\n-- Output when events are added to the session.\n")),(0,r.kt)("h3",{id:"session-aggregation-behavior"},"Session Aggregation Behavior"),(0,r.kt)("p",null,"When events are sent to ",(0,r.kt)("inlineCode",{parentName:"p"},"PurchaseStream")," stream, following events will get emitted at ",(0,r.kt)("inlineCode",{parentName:"p"},"UserIdPurchaseStream")," via ",(0,r.kt)("inlineCode",{parentName:"p"},"Session-analysis")," query, and ",(0,r.kt)("inlineCode",{parentName:"p"},"OutOfOrderUserIdPurchaseStream")," via ",(0,r.kt)("inlineCode",{parentName:"p"},"Session-analysis-with-late-event-arrivals")," query."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Time"),(0,r.kt)("th",{parentName:"tr",align:null},"Event Timestamp"),(0,r.kt)("th",{parentName:"tr",align:null},"Input to ",(0,r.kt)("inlineCode",{parentName:"th"},"PurchaseStream")),(0,r.kt)("th",{parentName:"tr",align:null},"Output at ",(0,r.kt)("inlineCode",{parentName:"th"},"UserIdPurchaseStream")),(0,r.kt)("th",{parentName:"tr",align:null},"Output at ",(0,r.kt)("inlineCode",{parentName:"th"},"OutOfOrderUserIdPurchaseStream")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"9:00:00"),(0,r.kt)("td",{parentName:"tr",align:null},"9:00:00"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"'cake'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"18.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"1"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"18.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"1"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"18.0"),"]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"9:00:20"),(0,r.kt)("td",{parentName:"tr",align:null},"9:00:20"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"'croissant'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"23.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"1"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"23.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"1"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"23.0"),"]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"9:00:40"),(0,r.kt)("td",{parentName:"tr",align:null},"9:00:40"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"'cake'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"22.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"2"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"45.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"2"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"45.0"),"]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"9:01:05"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"9:00:50")),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"'pie'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"22.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"No events, as event arrived late, and did not fall into a session."),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"2"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"40.0"),"]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"9:01:10"),(0,r.kt)("td",{parentName:"tr",align:null},"9:01:10"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"'cake'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"10.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"1"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"10.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"3"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"50.0"),"]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"9:01:50"),(0,r.kt)("td",{parentName:"tr",align:null},"9:01:50"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"'cake'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"20.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"1"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"20.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"1"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"23.0"),"]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"9:02:40"),(0,r.kt)("td",{parentName:"tr",align:null},"9:02:40"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"'croissant'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"23.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"1"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"23.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"1"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"23.0"),"]")))),(0,r.kt)("h2",{id:"named-window"},"Named Window"),(0,r.kt)("p",null,"This example shows defining a named window and summarizing data based on the window. This example uses ",(0,r.kt)("inlineCode",{parentName:"p"},"time")," window as the named window, but any window can be defined and used as a named window."),(0,r.kt)("h3",{id:"named-window-example"},"Named Window Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE STREAM TemperatureStream (sensorId string, temperature double);\n\nCREATE SINK STREAM MinMaxTemperatureOver1MinStream(minTemperature double, maxTemperature double);\nCREATE SINK STREAM AvgTemperaturePerSensorStream(sensorId string, avgTemperature double);\n\n-- Define a named window with name `OneMinTimeWindow` to retain events over `1 minute` in a sliding manner.\nCREATE WINDOW OneMinTimeWindow (sensorId string, temperature double) time(1 min) ;\n\n@info(name = 'Insert-to-window')\n-- Insert events in to the named time window.\nINSERT INTO OneMinTimeWindow\nFROM TemperatureStream;\n\n@info(name = 'Min-max-analysis')\n-- Calculate minimum and maximum of `temperature` on events in `OneMinTimeWindow` window.\nINSERT INTO MinMaxTemperatureOver1MinStream\nSELECT min(temperature) AS minTemperature,\n       max(temperature) AS maxTemperature\nFROM OneMinTimeWindow;\n\n@info(name = 'Per-sensor-analysis')\n-- Calculate average of `temperature`, by grouping events by `sensorId`, on the `OneMinTimeWindow` window.\nINSERT INTO AvgTemperaturePerSensorStream\nSELECT sensorId,\n       avg(temperature) as avgTemperature\nFROM OneMinTimeWindow\nGROUP BY sensorId;\n")),(0,r.kt)("h3",{id:"named-window-aggregation-behavior"},"Named Window Aggregation Behavior"),(0,r.kt)("p",null,"When events are sent to ",(0,r.kt)("inlineCode",{parentName:"p"},"TemperatureStream")," stream, following events will get emitted at ",(0,r.kt)("inlineCode",{parentName:"p"},"MinMaxTemperatureOver1MinStream")," stream via ",(0,r.kt)("inlineCode",{parentName:"p"},"Min-max-analysis")," query, and ",(0,r.kt)("inlineCode",{parentName:"p"},"AvgTemperaturePerSensorStream")," stream via ",(0,r.kt)("inlineCode",{parentName:"p"},"Per-sensor-analysis")," query."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Time"),(0,r.kt)("th",{parentName:"tr",align:null},"Input to ",(0,r.kt)("inlineCode",{parentName:"th"},"TemperatureStream")),(0,r.kt)("th",{parentName:"tr",align:null},"Output at ",(0,r.kt)("inlineCode",{parentName:"th"},"MinMaxTemperatureOver1MinStream")),(0,r.kt)("th",{parentName:"tr",align:null},"Output at ",(0,r.kt)("inlineCode",{parentName:"th"},"AvgTemperaturePerSensorStream")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"9:00:10"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"21.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"21.0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"21.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"21.0"),"]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"9:00:20"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"25.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"21.0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"25.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"25.0"),"]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"9:00:35"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"26.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"21.0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"26.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"25.5"),"]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"9:00:40"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"27.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"21.0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"27.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"26.0"),"]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"9:00:55"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"19.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"19.0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"27.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"20.0"),"]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"9:01:30"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"22.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"19.0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"27.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"25.0"),"]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"9:02:10"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"18.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"18.0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"22.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"18.0"),"]")))))}u.isMDXComponent=!0}}]);