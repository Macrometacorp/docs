"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[92895],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>g});var n=r(67294);function l(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){l(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,l=function(e,t){if(null==e)return{};var r,n,l={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(l[r]=e[r]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}var p=n.createContext({}),m=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=m(e.components);return n.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var r=e.components,l=e.mdxType,a=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=m(r),g=l,d=c["".concat(p,".").concat(g)]||c[g]||s[g]||a;return r?n.createElement(d,o(o({ref:t},u),{},{components:r})):n.createElement(d,o({ref:t},u))}));function g(e,t){var r=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=r.length,o=new Array(a);o[0]=c;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:l,o[1]=i;for(var m=2;m<a;m++)o[m]=r[m];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},295:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>s,frontMatter:()=>a,metadata:()=>i,toc:()=>m});var n=r(87462),l=(r(67294),r(3905));const a={title:"log (Stream Processor)"},o=void 0,i={unversionedId:"cep/query-guide/functions/core/log",id:"cep/query-guide/functions/core/log",title:"log (Stream Processor)",description:"Logs the message on the given priority with or without the processed event.",source:"@site/docs/cep/query-guide/functions/core/log.md",sourceDirName:"cep/query-guide/functions/core",slug:"/cep/query-guide/functions/core/log",permalink:"/docs/cep/query-guide/functions/core/log",draft:!1,editUrl:"https://github.com/macrometacorp/docs/edit/main/docs/cep/query-guide/functions/core/log.md",tags:[],version:"current",frontMatter:{title:"log (Stream Processor)"},sidebar:"defaultSidebar",previous:{title:"lengthBatch (Window)",permalink:"/docs/cep/query-guide/functions/core/lengthBatch"},next:{title:"max (Aggregate Function)",permalink:"/docs/cep/query-guide/functions/core/max"}},p={},m=[{value:"Query Parameters",id:"query-parameters",level:2},{value:"Example 1",id:"example-1",level:2},{value:"Example 2",id:"example-2",level:2},{value:"Example 3",id:"example-3",level:2},{value:"Example 4",id:"example-4",level:2},{value:"Example 5",id:"example-5",level:2},{value:"Example 6",id:"example-6",level:2}],u={toc:m};function s(e){let{components:t,...r}=e;return(0,l.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Logs the message on the given priority with or without the processed event."),(0,l.kt)("p",null,"Syntax"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"log()\nlog(<STRING> log.message)\nlog(<BOOL> is.event.logged)\nlog(<STRING> log.message, <BOOL> is.event.logged)\nlog(<STRING> priority, <STRING> log.message)\nlog(<STRING> priority, <STRING> log.message, <BOOL> is.event.logged)\n")),(0,l.kt)("h2",{id:"query-parameters"},"Query Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Default Value"),(0,l.kt)("th",{parentName:"tr",align:null},"Possible Data Types"),(0,l.kt)("th",{parentName:"tr",align:null},"Optional"),(0,l.kt)("th",{parentName:"tr",align:null},"Dynamic"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"priority"),(0,l.kt)("td",{parentName:"tr",align:null},"The priority/type of this log message (INFO, DEBUG, WARN, FATAL, ERROR, OFF, TRACE)."),(0,l.kt)("td",{parentName:"tr",align:null},"INFO"),(0,l.kt)("td",{parentName:"tr",align:null},"STRING"),(0,l.kt)("td",{parentName:"tr",align:null},"Yes"),(0,l.kt)("td",{parentName:"tr",align:null},"No")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"log.message"),(0,l.kt)("td",{parentName:"tr",align:null},"This message will be logged."),(0,l.kt)("td",{parentName:"tr",align:null},":"),(0,l.kt)("td",{parentName:"tr",align:null},"STRING"),(0,l.kt)("td",{parentName:"tr",align:null},"Yes"),(0,l.kt)("td",{parentName:"tr",align:null},"Yes")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"is.event.logged"),(0,l.kt)("td",{parentName:"tr",align:null},"To log the processed event."),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"BOOL"),(0,l.kt)("td",{parentName:"tr",align:null},"Yes"),(0,l.kt)("td",{parentName:"tr",align:null},"No")))),(0,l.kt)("h2",{id:"example-1"},"Example 1"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"insert into BarStream\nselect *\nfrom FooStream#log();\n")),(0,l.kt)("p",null,"Logs events with StreamApp name message prefix on default log level INFO."),(0,l.kt)("h2",{id:"example-2"},"Example 2"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'insert into BarStream\nselect *\nfrom FooStream#log("Sample Event :");\n')),(0,l.kt)("p",null,'Logs events with the message prefix "Sample Event :" on default log level INFO.'),(0,l.kt)("h2",{id:"example-3"},"Example 3"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'insert into BarStream\nselect *\nfrom FooStream#log("DEBUG", "Sample Event :", true);\n')),(0,l.kt)("p",null,'Logs events with the message prefix "Sample Event :" on log level DEBUG.'),(0,l.kt)("h2",{id:"example-4"},"Example 4"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'insert into BarStream\nselect *\nfrom FooStream#log("Event Arrived", false);\n')),(0,l.kt)("p",null,'For each event logs a message "Event Arrived" on default log level INFO.'),(0,l.kt)("h2",{id:"example-5"},"Example 5"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'insert into BarStream\nselect *\nfrom FooStream#log("Sample Event :", true);\n')),(0,l.kt)("p",null,'Logs events with the message prefix "Sample Event :" on default log level INFO.'),(0,l.kt)("h2",{id:"example-6"},"Example 6"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"insert into BarStream\nselect *\nfrom FooStream#log(true);\n")),(0,l.kt)("p",null,"Logs events with on default log level INFO."))}s.isMDXComponent=!0}}]);