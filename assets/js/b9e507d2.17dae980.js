"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[59653],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>d});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),i=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},u=function(e){var n=i(e.components);return a.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),m=i(t),d=r,k=m["".concat(l,".").concat(d)]||m[d]||p[d]||o;return t?a.createElement(k,s(s({ref:n},u),{},{components:t})):a.createElement(k,s({ref:n},u))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,s=new Array(o);s[0]=m;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,s[1]=c;for(var i=2;i<o;i++)s[i]=t[i];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},90657:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>i});var a=t(87462),r=(t(67294),t(3905));const o={sidebar_position:40,title:"KafkaJS Client"},s=void 0,c={unversionedId:"streams/kafka_on_gdn/kafkajs-client",id:"streams/kafka_on_gdn/kafkajs-client",title:"KafkaJS Client",description:"The KafkaJS client can be used to create Kafka producers, consumers. Full documentation here.",source:"@site/docs/streams/kafka_on_gdn/kafkajs-client.md",sourceDirName:"streams/kafka_on_gdn",slug:"/streams/kafka_on_gdn/kafkajs-client",permalink:"/docs/streams/kafka_on_gdn/kafkajs-client",draft:!1,editUrl:"https://github.com/macrometacorp/docs/edit/main/docs/streams/kafka_on_gdn/kafkajs-client.md",tags:[],version:"current",sidebarPosition:40,frontMatter:{sidebar_position:40,title:"KafkaJS Client"},sidebar:"defaultSidebar",previous:{title:"Confluent Python client",permalink:"/docs/streams/kafka_on_gdn/confluent-python-client"},next:{title:"Kafka NodeJS Client",permalink:"/docs/streams/kafka_on_gdn/kafka-nodejs-client"}},l={},i=[{value:"Installation",id:"installation",level:2},{value:"Producer",id:"producer",level:2},{value:"Consumer",id:"consumer",level:2}],u={toc:i};function p(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The KafkaJS client can be used to create Kafka producers, consumers. Full documentation ",(0,r.kt)("a",{parentName:"p",href:"https://kafka.js.org/docs/getting-started"},"here"),"."),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("p",null,"Install KafkaJS using:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"yarn add kafkajs\n")),(0,r.kt)("p",null,"or npm:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"npm install kafkajs\n")),(0,r.kt)("p",null,"Instantiate the KafkaJS client by pointing it towards at least one broker:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-node"},"const { Kafka } = require('kafkajs')\n\nconst kafka = new Kafka({\n  clientId: '<my-app>',\n  brokers: ['<my-gdn>.<my-paas>.macrometa.io:9093'],\n  sasl: { mechanism: 'plain', username: \"<my-tenant>/<my-fabric>\", password: \"token:<my-api-key>\" },\n    ssl: {\n    rejectUnauthorized: false\n    }\n})\n")),(0,r.kt)("h2",{id:"producer"},"Producer"),(0,r.kt)("p",null,"To produce a message to a topic, create a producer using our client:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-node"},"const producer = kafka.producer()\n\nawait producer.connect()\nawait producer.send({\n  topic: '<c8globals or c8locals>.<my-topic>',\n  messages: [\n    { value: 'Hello KafkaJS user!' },\n  ],\n})\n\nawait producer.disconnect()\n")),(0,r.kt)("h2",{id:"consumer"},"Consumer"),(0,r.kt)("p",null,"To verify the message has been sent to the topic, create a consumer to consume the message:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-node"},"const consumer = kafka.consumer({ groupId: '<my-group-id>' })\n\nawait consumer.connect()\nawait consumer.subscribe({ topic: '<c8globals or c8locals>.<my-topic>', fromBeginning: true })\n\nawait consumer.run({\n  eachMessage: async ({ topic, partition, message }) => {\n    console.log({\n      value: message.value.toString(),\n    })\n  }\n})\n")))}p.isMDXComponent=!0}}]);