"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[25049],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>m});var l=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);n&&(l=l.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,l)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,l,a=function(e,n){if(null==e)return{};var t,l,a={},o=Object.keys(e);for(l=0;l<o.length;l++)t=o[l],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(l=0;l<o.length;l++)t=o[l],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var r=l.createContext({}),s=function(e){var n=l.useContext(r),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=s(e.components);return l.createElement(r.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return l.createElement(l.Fragment,{},n)}},p=l.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,r=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),p=s(t),m=a,g=p["".concat(r,".").concat(m)]||p[m]||u[m]||o;return t?l.createElement(g,i(i({ref:n},d),{},{components:t})):l.createElement(g,i({ref:n},d))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=p;var c={};for(var r in n)hasOwnProperty.call(n,r)&&(c[r]=n[r]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var s=2;s<o;s++)i[s]=t[s];return l.createElement.apply(null,i)}return l.createElement.apply(null,t)}p.displayName="MDXCreateElement"},68789:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>s});var l=t(87462),a=(t(67294),t(3905));const o={title:"Document Store Commands"},i="Document Store (gdnsl document)",c={unversionedId:"cli/document-store-cli",id:"cli/document-store-cli",title:"Document Store Commands",description:"Document Store collection CLI commands.",source:"@site/docs/cli/document-store-cli.md",sourceDirName:"cli",slug:"/cli/document-store-cli",permalink:"/docs/cli/document-store-cli",draft:!1,editUrl:"https://github.com/macrometacorp/docs/edit/main/docs/cli/document-store-cli.md",tags:[],version:"current",frontMatter:{title:"Document Store Commands"},sidebar:"defaultSidebar",previous:{title:"Config Map Commands",permalink:"/docs/cli/config-map-cli"},next:{title:"Fabric Commands",permalink:"/docs/cli/fabrics-cli"}},r={},s=[{value:"gdnsl document create",id:"gdnsl-document-create",level:2},{value:"Examples",id:"examples",level:3},{value:"Options",id:"options",level:3},{value:"Options inherited",id:"options-inherited",level:3},{value:"gdnsl document describe",id:"gdnsl-document-describe",level:2},{value:"Examples",id:"examples-1",level:3},{value:"Options",id:"options-1",level:3},{value:"Options Inherited",id:"options-inherited-1",level:3},{value:"gdnsl document update",id:"gdnsl-document-update",level:2},{value:"Examples",id:"examples-2",level:3},{value:"Options",id:"options-2",level:3},{value:"Options Inherited",id:"options-inherited-2",level:3},{value:"gdnsl document delete",id:"gdnsl-document-delete",level:2},{value:"Examples",id:"examples-3",level:3},{value:"Options",id:"options-3",level:3},{value:"Options Inherited",id:"options-inherited-3",level:3}],d={toc:s};function u(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,l.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"document-store-gdnsl-document"},"Document Store (gdnsl document)"),(0,a.kt)("p",null,"Document Store collection CLI commands."),(0,a.kt)("h2",{id:"gdnsl-document-create"},"gdnsl document create"),(0,a.kt)("p",null,"Create a document."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"  gdnsl document create [flags]\n")),(0,a.kt)("h3",{id:"examples"},"Examples"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'\n  # Create a document in cities collection.\n  $ gdnsl document create --json \'{"name": "Julia"}\' --json \'{"name": "John"}\' --collection "cities"\n')),(0,a.kt)("h3",{id:"options"},"Options"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'  -h, --help                Help to create a document.\n      --collection=<value>  (required) The name of the collection.\n      --fabric=<value>      Name of the fabric. Default will be "_system".\n      --json=<value>...     (required) A json document to insert.\n\n')),(0,a.kt)("h3",{id:"options-inherited"},"Options inherited"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"      --config string       gdnsl config file (default is ./gdnsl.yaml)\n \n")),(0,a.kt)("h2",{id:"gdnsl-document-describe"},"gdnsl document describe"),(0,a.kt)("p",null,"Describe a document."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"  gdnsl document describe [KEY] [flags]\n")),(0,a.kt)("h3",{id:"examples-1"},"Examples"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"\n  # Describe a document.\n  $ gdnsl document describe 5326955 --fabric _system --collection cities\n")),(0,a.kt)("h3",{id:"options-1"},"Options"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'  -h, --help                Help to describe a document.\n      --collection=<value>  (required) The name of the collection.\n      --fabric=<value>      Name of the fabric. Default will be "_system".\n\n')),(0,a.kt)("h3",{id:"options-inherited-1"},"Options Inherited"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"      --config string       gdnsl config file (default is ./gdnsl.yaml)\n \n")),(0,a.kt)("h2",{id:"gdnsl-document-update"},"gdnsl document update"),(0,a.kt)("p",null,"Update documents."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"  gdnsl document update [flags]\n")),(0,a.kt)("h3",{id:"examples-2"},"Examples"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'\n  # Update a document.\n  $ gdnsl document update --json \'{"_key":"5685501", "name": "John"}\' --collection cities\n \n  # Update multiple documents.\n  $ gdnsl document update --json \'{"_key":"5685501", "name": "John"}\' --json \'{"_key":"5377789", "name": "Julia"}\' --collection cities\n \n  # Replace a document.\n  $ gdnsl document update --replace --json \'{"_key":"5685501", "name": "John"}\' --collection cities\n \n  # Replace multiple documents.\n  $ gdnsl document update --replace --json \'{"_key":"5685501", "name": "John"}\' --json \'{"_key":"5377789", "name": "Julia"}\' --collection cities\n')),(0,a.kt)("h3",{id:"options-2"},"Options"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'  -h, --help                Help to update a document.\n      --collection=<value>  (required) The name of the collection.\n      --fabric=<value>      Name of the fabric. Default will be "_system".\n      --json=<value>...     (required) The JSON document to update.\n      --replace             Update the existing data.\n\n')),(0,a.kt)("h3",{id:"options-inherited-2"},"Options Inherited"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"      --config string       gdnsl config file (default is ./gdnsl.yaml)\n \n")),(0,a.kt)("h2",{id:"gdnsl-document-delete"},"gdnsl document delete"),(0,a.kt)("p",null,"Delete documents."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"  gdnsl document delete [KEYS] [flags]\n")),(0,a.kt)("h3",{id:"examples-3"},"Examples"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'\n  # Delete a document.\n  $ gdnsl document delete 5326955 --collection cities\n \n  # Delete all the specified documents.\n  $ gdnsl document delete "5327664, 5327665" --collection cities\n')),(0,a.kt)("h3",{id:"options-3"},"Options"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'  -h, --help                Help to describe a document.\n      --collection=<value>  (required) The name of the collection.\n      --fabric=<value>      Name of the fabric. Default will be "_system".\n\n')),(0,a.kt)("h3",{id:"options-inherited-3"},"Options Inherited"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"      --config string       gdnsl config file (default is ./gdnsl.yaml)\n \n")))}u.isMDXComponent=!0}}]);