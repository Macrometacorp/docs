"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[61178],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>u});var r=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var a=r.createContext({}),p=function(e){var n=r.useContext(a),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(a.Provider,{value:n},e.children)},g={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,s=e.originalType,a=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=p(t),u=i,m=d["".concat(a,".").concat(u)]||d[u]||g[u]||s;return t?r.createElement(m,l(l({ref:n},c),{},{components:t})):r.createElement(m,l({ref:n},c))}));function u(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var s=t.length,l=new Array(s);l[0]=d;var o={};for(var a in n)hasOwnProperty.call(n,a)&&(o[a]=n[a]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var p=2;p<s;p++)l[p]=t[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},148:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>g,frontMatter:()=>s,metadata:()=>o,toc:()=>p});var r=t(87462),i=(t(67294),t(3905));const s={title:"Revision Commands"},l="Revision (gdnsl revision)",o={unversionedId:"cli/revision-cli",id:"cli/revision-cli",title:"Revision Commands",description:"Get commands related to revisions.",source:"@site/docs/cli/revision-cli.md",sourceDirName:"cli",slug:"/cli/revision-cli",permalink:"/docs/cli/revision-cli",draft:!1,editUrl:"https://github.com/macrometacorp/docs/edit/main/docs/cli/revision-cli.md",tags:[],version:"current",frontMatter:{title:"Revision Commands"},sidebar:"defaultSidebar",previous:{title:"Query Worker Commands",permalink:"/docs/cli/query-workers-cli"},next:{title:"Route Commands",permalink:"/docs/cli/route-cli"}},a={},p=[{value:"gdnsl revision list",id:"gdnsl-revision-list",level:2},{value:"gdnsl revision describe",id:"gdnsl-revision-describe",level:2},{value:"gdnsl revision delete",id:"gdnsl-revision-delete",level:2}],c={toc:p};function g(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"revision-gdnsl-revision"},"Revision (gdnsl revision)"),(0,i.kt)("p",null,"Get commands related to revisions."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"gdnsl revision [flags]\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Options:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"  -r, --regions             List of region names or keywords (LOCAL or ALL). Overrides the region setting in gdnsl.yml config file.\n  -h, --help                Help for revision.\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Options inherited:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"      --config string       gdnsl config file (default is ./gdnsl.yaml)\n      --log-http            Log http traffic.\n")),(0,i.kt)("h2",{id:"gdnsl-revision-list"},"gdnsl revision list"),(0,i.kt)("p",null,"List revisions for a given service."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"gdnsl revision list [name] [flags]\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Examples:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"\n  # List all revisions\n  gdnsl revision list\n\n  # List revisions for a service 'svc1' in namespace 'myapp'\n  gdnsl revision list -s svc1 -n myapp\n\n  # List all revisions in JSON output format\n  gdnsl revision list -o json\n  \n  # List revision 'web'\n  gdnsl revision list web\n\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Options:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"  -r, --regions             List of region names or keywords (LOCAL or ALL). Overrides the region setting in gdnsl.yml config file.\n  -h, --help                Help to list revisions.\n      --no-headers          When using the default output format, don't print headers (default: print headers).\n  -o, --output string       Output format. One of: json|yaml\n  -s, --service string      Service name.\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Options inherited:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"      --config string        gdnsl config file (default is ./gdnsl.yaml)\n      --log-http             Log http traffic.\n")),(0,i.kt)("h2",{id:"gdnsl-revision-describe"},"gdnsl revision describe"),(0,i.kt)("p",null,"Describe revisions."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"gdnsl revision describe NAME [flags]\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Options:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"  -r, --regions                       List of region names or keywords (LOCAL or ALL). Overrides the region setting in gdnsl.yml config file.\n      --allow-missing-template-keys   If true, ignore any errors in templates when a field or map key is missing in the template. \n                                      Only applies to golang and jsonpath output formats. (default true)\n  -h, --help                          Help to describe a revision.\n  -o, --output string                 Output format. One of: json|yaml\n  -v, --verbose                       More output.\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Options inherited:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"      --config string                 gdnsl config file (default is ./gdnsl.yaml)\n      --log-http                      Log http traffic.\n")),(0,i.kt)("h2",{id:"gdnsl-revision-delete"},"gdnsl revision delete"),(0,i.kt)("p",null,"Delete a revision."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"gdnsl revision delete NAME [flags]\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Examples:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"  # Delete a revision 'svc1-abcde' in default namespace\n  gdnsl revision delete svc1-abcde\n\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Options:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"  -r, --regions             List of region names or keywords (LOCAL or ALL). Overrides the region setting in gdnsl.yml config file.\n  -h, --help                Help to delete a revision.\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Options inherited:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"      --config string       gdnsl config file (default is ./gdnsl.yaml)\n      --log-http            log http traffic\n")))}g.isMDXComponent=!0}}]);