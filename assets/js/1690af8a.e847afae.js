"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[88186],{3905:(e,r,t)=>{t.d(r,{Zo:()=>s,kt:()=>y});var n=t(67294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function p(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=n.createContext({}),u=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):p(p({},r),e)),t},s=function(e){var r=u(e.components);return n.createElement(c.Provider,{value:r},e.children)},l={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),m=u(t),y=o,f=m["".concat(c,".").concat(y)]||m[y]||l[y]||a;return t?n.createElement(f,p(p({ref:r},s),{},{components:t})):n.createElement(f,p({ref:r},s))}));function y(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,p=new Array(a);p[0]=m;var i={};for(var c in r)hasOwnProperty.call(r,c)&&(i[c]=r[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,p[1]=i;for(var u=2;u<a;u++)p[u]=t[u];return n.createElement.apply(null,p)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},17835:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>p,default:()=>l,frontMatter:()=>a,metadata:()=>i,toc:()=>u});var n=t(87462),o=(t(67294),t(3905));const a={title:"binary (Source Mapper)"},p=void 0,i={unversionedId:"cep/query-guide/functions/sourcemapper/binary",id:"cep/query-guide/functions/sourcemapper/binary",title:"binary (Source Mapper)",description:"This extension is a binary input mapper that converts events received in",source:"@site/docs/cep/query-guide/functions/sourcemapper/binary.md",sourceDirName:"cep/query-guide/functions/sourcemapper",slug:"/cep/query-guide/functions/sourcemapper/binary",permalink:"/docs/cep/query-guide/functions/sourcemapper/binary",draft:!1,editUrl:"https://github.com/macrometacorp/docs/edit/main/docs/cep/query-guide/functions/sourcemapper/binary.md",tags:[],version:"current",frontMatter:{title:"binary (Source Mapper)"},sidebar:"defaultSidebar",previous:{title:"avro (Source Mapper)",permalink:"/docs/cep/query-guide/functions/sourcemapper/avro"},next:{title:"csv (Source Mapper)",permalink:"/docs/cep/query-guide/functions/sourcemapper/csv"}},c={},u=[{value:"Example 1",id:"example-1",level:2}],s={toc:u};function l(e){let{components:r,...t}=e;return(0,o.kt)("wrapper",(0,n.Z)({},s,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"This extension is a binary input mapper that converts events received in\n",(0,o.kt)("inlineCode",{parentName:"p"},"binary")," format to Stream App events before they are processed."),(0,o.kt)("p",null,"Syntax"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'CREATE SOURCE <NAME> WITH (map.type="binary")\n')),(0,o.kt)("h2",{id:"example-1"},"Example 1"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"CREATE SOURCE FooStream WITH (type='stream', topic='gdn', map.type='binary') (symbol string, price float, volume long);\n")),(0,o.kt)("p",null,"This query performs a mapping to convert an event of the ",(0,o.kt)("inlineCode",{parentName:"p"},"binary")," format\nto a Stream App event."))}l.isMDXComponent=!0}}]);