"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[18881],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>d});var a=n(67294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,s=function(e,t){if(null==e)return{};var n,a,s={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var c=a.createContext({}),i=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=i(e.components);return a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,s=e.mdxType,r=e.originalType,c=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),u=i(n),d=s,b=u["".concat(c,".").concat(d)]||u[d]||p[d]||r;return n?a.createElement(b,o(o({ref:t},m),{},{components:n})):a.createElement(b,o({ref:t},m))}));function d(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var r=n.length,o=new Array(r);o[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:s,o[1]=l;for(var i=2;i<r;i++)o[i]=n[i];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},85162:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(67294),s=n(34334);const r="tabItem_Ymn6";function o(e){let{children:t,hidden:n,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,s.Z)(r,o),hidden:n},t)}},65488:(e,t,n)=>{n.d(t,{Z:()=>d});var a=n(87462),s=n(67294),r=n(34334),o=n(72389),l=n(67392),c=n(7094),i=n(12466);const m="tabList__CuJ",p="tabItem_LNqP";function u(e){const{lazy:t,block:n,defaultValue:o,values:u,groupId:d,className:b}=e,f=s.Children.map(e.children,(e=>{if((0,s.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),g=u??f.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),y=(0,l.l)(g,((e,t)=>e.value===t.value));if(y.length>0)throw new Error(`Docusaurus error: Duplicate values "${y.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const v=null===o?o:o??f.find((e=>e.props.default))?.props.value??f[0].props.value;if(null!==v&&!g.some((e=>e.value===v)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${v}" but none of its children has the corresponding value. Available values are: ${g.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:h,setTabGroupChoices:k}=(0,c.U)(),[w,C]=(0,s.useState)(v),N=[],{blockElementScrollPositionUntilNextRender:T}=(0,i.o5)();if(null!=d){const e=h[d];null!=e&&e!==w&&g.some((t=>t.value===e))&&C(e)}const _=e=>{const t=e.currentTarget,n=N.indexOf(t),a=g[n].value;a!==w&&(T(t),C(a),null!=d&&k(d,String(a)))},S=e=>{let t=null;switch(e.key){case"ArrowRight":{const n=N.indexOf(e.currentTarget)+1;t=N[n]??N[0];break}case"ArrowLeft":{const n=N.indexOf(e.currentTarget)-1;t=N[n]??N[N.length-1];break}}t?.focus()};return s.createElement("div",{className:(0,r.Z)("tabs-container",m)},s.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":n},b)},g.map((e=>{let{value:t,label:n,attributes:o}=e;return s.createElement("li",(0,a.Z)({role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,key:t,ref:e=>N.push(e),onKeyDown:S,onFocus:_,onClick:_},o,{className:(0,r.Z)("tabs__item",p,o?.className,{"tabs__item--active":w===t})}),n??t)}))),t?(0,s.cloneElement)(f.filter((e=>e.props.value===w))[0],{className:"margin-top--md"}):s.createElement("div",{className:"margin-top--md"},f.map(((e,t)=>(0,s.cloneElement)(e,{key:t,hidden:e.props.value!==w})))))}function d(e){const t=(0,o.Z)();return s.createElement(u,(0,a.Z)({key:String(t)},e))}},66945:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>c,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var a=n(87462),s=(n(67294),n(3905)),r=n(65488),o=n(85162);const l={sidebar_position:70,title:"Set Permissions"},c=void 0,i={unversionedId:"account-management/permissions/set-permissions",id:"account-management/permissions/set-permissions",title:"Set Permissions",description:"Set permissions for various assets.",source:"@site/docs/account-management/permissions/set-permissions.md",sourceDirName:"account-management/permissions",slug:"/account-management/permissions/set-permissions",permalink:"/docs/account-management/permissions/set-permissions",draft:!1,editUrl:"https://github.com/macrometacorp/docs/edit/main/docs/account-management/permissions/set-permissions.md",tags:[],version:"current",sidebarPosition:70,frontMatter:{sidebar_position:70,title:"Set Permissions"},sidebar:"defaultSidebar",previous:{title:"Change API Permissions",permalink:"/docs/account-management/permissions/change-api-permissions"},next:{title:"Get Access Levels",permalink:"/docs/account-management/permissions/get-access-levels"}},m={},p=[],u={toc:p};function d(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Set permissions for various assets."),(0,s.kt)("admonition",{type:"note"},(0,s.kt)("ul",{parentName:"admonition"},(0,s.kt)("li",{parentName:"ul"},"Use ",(0,s.kt)("inlineCode",{parentName:"li"},"rw")," to set the access level to ",(0,s.kt)("inlineCode",{parentName:"li"},"Administrate"),"."),(0,s.kt)("li",{parentName:"ul"},"Use ",(0,s.kt)("inlineCode",{parentName:"li"},"ro")," to set the access level to ",(0,s.kt)("inlineCode",{parentName:"li"},"Read Only"),"."),(0,s.kt)("li",{parentName:"ul"},"Use ",(0,s.kt)("inlineCode",{parentName:"li"},"none")," to set the access level to ",(0,s.kt)("inlineCode",{parentName:"li"},"No access"),"."))),(0,s.kt)(r.Z,{groupId:"operating-systems",mdxType:"Tabs"},(0,s.kt)(o.Z,{value:"js",label:"Javascript",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'const jsc8 = require("jsc8");\n\n// Email and password to authenticate client instance\nconst email = "nemo@nautilus.com";\nconst password = "xxxxxx";\nconst fabric = "_system";\nconst keyid = "id1";\nconst collectionName = "testCollection";\nconst streamName = "testStream";\n\nconst client = new jsc8({\n  url: "https://play.paas.macrometa.io",\n  fabricName: fabric\n});\n// Or use one of the following authentication methods.\n\n// Create an authenticated instance with a JWT token.\n// const clientUsingJwt = new jsc8({url: "https://play.paas.macrometa.io" , token: "XXXX" , fabricName: fabric});\n// Create an authenticated instance with an API key.\n// const clientUsingApiKey = new jsc8({url: "https://play.paas.macrometa.io" , apiKey: "XXXX" , fabricName: fabric });\nfunction messageHandler (error) {\n  const message = {\n    "StatusCode ": error.statusCode,\n    "ErrorMessage ": error.message,\n    "ErrorNum ": error.errorNum\n  };\n  console.log(message);\n}\nasync function main () {\n  await client\n    .login(email, password)\n    .then((e) => console.log("1. User authentication done!"))\n    .catch((error) => error);\n\n  console.log("\\n2. Listing collections");\n  await client\n    .getCollections()\n    .then((collections) => {\n      console.log(collections);\n    })\n    .catch((error) => messageHandler(error));\n\n  console.log("\\n3. Creating collection");\n  await client\n    .createCollection(collectionName)\n    .then((collection) => {\n      console.log("Collection created successfully");\n    })\n    .catch((error) => messageHandler(error));\n\n  console.log("\\n4. Setting collection access level access level to read write");\n  await client\n    .setCollectionAccessLevel(keyid, fabric, collectionName, "rw")\n    .then((collectionAccessLevel) => {\n      console.log(collectionAccessLevel);\n    })\n    .catch((error) => messageHandler(error));\n\n  console.log("\\n5. Creating stream " + streamName);\n  await client\n    .createStream(streamName)\n    .then((stream) => console.log(stream))\n    .catch((error) => messageHandler(error));\n\n  console.log(\n    "\\n6. Setting stream " + streamName + " access level to read only"\n  );\n  await client\n    .setStreamAccessLevel(keyid, fabric, "c8globals." + streamName, "ro")\n    .then((streamAccessLevel) => console.log(streamAccessLevel))\n    .catch((error) => messageHandler(error));\n\n  console.log(\n    "\\n7. Setting database " +\n      fabric +\n      " access level to read write for Key_ID " +\n      keyid\n  );\n  await client\n    .setDatabaseAccessLevel(keyid, fabric, "rw")\n    .then((databaseAccessLevel) => console.log(databaseAccessLevel))\n    .catch((error) => messageHandler(error));\n}\n\nmain()\n  .then()\n  .catch((error) => console.log(error));\n\n'))),(0,s.kt)(o.Z,{value:"py",label:"Python",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-py"},"from c8 import C8Client\n\n# Create a connection to gdn\nclient = C8Client(protocol='https', host='play.paas.macrometa.io', port=443,\n                        email='nemo@nautilus.com', password='xxxxx',\n                        geofabric='_system')\n\n# Set Accesslevels for an API Key\n\n# Create a new collection if it does not exist\nif client.has_collection('testCollection'):\n    print(\"Collection exists\")\nelse:\n    client.create_collection_kv(name='testCollection')\n# Create a new stream\n# print(client.create_stream('testStream'))\n\nprint(\"Set Database Access Level: \", client.set_database_access_level('id1', '_system', 'rw'))\n\nprint(\"Set Collection Access Level: \", client.set_collection_access_level('id1', 'testCollection', '_system', 'rw'))\n\nprint(\"Set Stream Access Level: \", client.set_stream_access_level('id1','c8globals.testStream', '_system'))\n"))),(0,s.kt)(o.Z,{value:"RA",label:"Rest API",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'URL = "api-gdn.macrometa.io"\nHTTP_URL = "https://{}".format(URL)\nkeyid = "id1"\n# Set Database Access Level\nurl = HTTP_URL + "/_api/key/" + keyid + "/database/_system"\npayload={\n"grant": "rw"\n}\nresp = session.put(url,data = json.dumps(payload))\nresp = json.loads(resp.text)\nif resp[\'error\'] is True:\n    print("ERROR: " , resp)\nelse:\n    print("Set Database Access Level: ", resp)\n\n# Set Collection Access Level\nurl = HTTP_URL + "/_api/key/" + keyid + "/database/_system/collection/testCollection"\npayload={\n"grant": "rw"\n}\nresp = session.put(url,data = json.dumps(payload))\nresp = json.loads(resp.text)\nif resp[\'error\'] is True:\n    print("ERROR: " , resp)\nelse:\n    print("Set Collection Access Level: ", resp)\n\n# Set Stream Access Level\nurl = HTTP_URL + "/_api/key/" + keyid + "/database/_system/stream/c8globals.testStream"\npayload={\n"grant": "rw"\n}\nresp = session.put(url,data = json.dumps(payload))\nresp = json.loads(resp.text)\nif resp[\'error\'] is True:\n    print("ERROR: " , resp)\nelse:\n    print("Set Stream Access Level: ", resp)\n')))))}d.isMDXComponent=!0}}]);