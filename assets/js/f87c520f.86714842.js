"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9862],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=u(n),d=a,N=m["".concat(s,".").concat(d)]||m[d]||c[d]||o;return n?r.createElement(N,l(l({ref:t},p),{},{components:n})):r.createElement(N,l({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var u=2;u<o;u++)l[u]=n[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5614:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var r=n(87462),a=(n(67294),n(3905));const o={sidebar_position:3,title:"RETURN"},l=void 0,i={unversionedId:"queryworkers/c8ql/operations/return",id:"queryworkers/c8ql/operations/return",title:"RETURN",description:"The RETURN statement can be used to produce the result of a query. It is mandatory to specify a RETURN statement at the end of each block in a data-selection query, otherwise the query result would be undefined. Using RETURN on the main level in data-modification queries is optional.",source:"@site/docs/queryworkers/c8ql/operations/return.md",sourceDirName:"queryworkers/c8ql/operations",slug:"/queryworkers/c8ql/operations/return",permalink:"/docs/queryworkers/c8ql/operations/return",draft:!1,editUrl:"https://github.com/macrometacorp/docs/edit/main/docs/queryworkers/c8ql/operations/return.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"RETURN"},sidebar:"defaultSidebar",previous:{title:"FOR",permalink:"/docs/queryworkers/c8ql/operations/for"},next:{title:"FILTER",permalink:"/docs/queryworkers/c8ql/operations/filter"}},s={},u=[{value:"RETURN DISTINCT",id:"return-distinct",level:2}],p={toc:u};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"RETURN")," statement can be used to produce the result of a query. It is mandatory to specify a ",(0,a.kt)("inlineCode",{parentName:"p"},"RETURN")," statement at the end of each block in a data-selection query, otherwise the query result would be undefined. Using ",(0,a.kt)("inlineCode",{parentName:"p"},"RETURN")," on the main level in data-modification queries is optional."),(0,a.kt)("p",null,"The general syntax for ",(0,a.kt)("inlineCode",{parentName:"p"},"RETURN")," is:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"RETURN expression\n")),(0,a.kt)("p",null,"The ",(0,a.kt)("em",{parentName:"p"},"expression")," returned by ",(0,a.kt)("inlineCode",{parentName:"p"},"RETURN")," is produced for each iteration in the block the ",(0,a.kt)("inlineCode",{parentName:"p"},"RETURN")," statement is placed in. That means the result of a ",(0,a.kt)("inlineCode",{parentName:"p"},"RETURN")," statement is ",(0,a.kt)("strong",{parentName:"p"},"always an array"),". This includes an empty array if no documents matched the query and a single return value returned as array with one element."),(0,a.kt)("p",null,"To return all elements from the currently iterated array without modification, the following simple form can be used:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"FOR variableName IN expression\n  RETURN variableName\n")),(0,a.kt)("p",null,"As ",(0,a.kt)("inlineCode",{parentName:"p"},"RETURN")," allows specifying an expression, arbitrary computations can be performed to calculate the result elements. Any of the variables valid in the scope the ",(0,a.kt)("inlineCode",{parentName:"p"},"RETURN")," is placed in can be used for the computations."),(0,a.kt)("p",null,"To iterate over all documents of a collection called ",(0,a.kt)("em",{parentName:"p"},"users")," and return the full documents, you can write:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"FOR u IN users\n  RETURN u\n")),(0,a.kt)("p",null,"In each iteration of the for-loop, a document of the ",(0,a.kt)("em",{parentName:"p"},"users")," collection is assigned to a variable ",(0,a.kt)("em",{parentName:"p"},"u")," and returned unmodified in this example. To return only one attribute of each document, you could use a different return expression:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"FOR u IN users\n  RETURN u.name\n")),(0,a.kt)("p",null,"Or to return multiple attributes, an object can be constructed like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"FOR u IN users\n  RETURN { name: u.name, age: u.age }\n")),(0,a.kt)("p",null,"Note: ",(0,a.kt)("inlineCode",{parentName:"p"},"RETURN")," will close the current scope and eliminate all local variables in it. This is important to remember when working with ",(0,a.kt)("a",{parentName:"p",href:"../examples/#subqueries"},"subqueries"),"."),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/docs/queryworkers/c8ql/data-types"},"Dynamic attribute names")," are supported as well:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"FOR u IN users\n  RETURN { [ u._id ]: u.age }\n")),(0,a.kt)("p",null,"The document _",(0,a.kt)("em",{parentName:"p"},"id")," of every user is used as expression to compute the attribute key in this example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'[\n  {\n    "users/9883": 32\n  },\n  {\n    "users/9915": 27\n  },\n  {\n    "users/10074": 69\n  }\n]\n')),(0,a.kt)("p",null,"The result contains one object per user with a single key/value pair each. This is usually not desired. For a single object, that maps user IDs to ages, the individual results need to be merged and returned with another ",(0,a.kt)("inlineCode",{parentName:"p"},"RETURN"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"RETURN MERGE(\n  FOR u IN users\n    RETURN { [ u._id ]: u.age }\n)\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'[\n  {\n    "users/10074": 69,\n    "users/9883": 32,\n    "users/9915": 27\n  }\n]\n')),(0,a.kt)("p",null,"Keep in mind that if the key expression evaluates to the same value multiple times, only one of the key/value pairs with the duplicate name will survive ",(0,a.kt)("a",{parentName:"p",href:"/docs/queryworkers/c8ql/functions/document#merge"},"MERGE()"),". To avoid this, you can go without dynamic attribute names, use static names instead and return all document properties as attribute values:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"FOR u IN users\n  RETURN { name: u.name, age: u.age }\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'[\n  {\n    "name": "John Smith",\n    "age": 32\n  },\n  {\n    "name": "James Hendrix",\n    "age": 69\n  },\n  {\n    "name": "Katie Foster",\n    "age": 27\n  }\n]\n')),(0,a.kt)("h2",{id:"return-distinct"},"RETURN DISTINCT"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"RETURN")," can optionally be followed by the ",(0,a.kt)("inlineCode",{parentName:"p"},"DISTINCT")," keyword. The ",(0,a.kt)("inlineCode",{parentName:"p"},"DISTINCT")," keyword will ensure uniqueness of the values returned by the ",(0,a.kt)("inlineCode",{parentName:"p"},"RETURN")," statement:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"FOR variableName IN expression\n  RETURN DISTINCT expression\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"RETURN DISTINCT")," is not allowed on the top-level of a query if there is no ",(0,a.kt)("inlineCode",{parentName:"p"},"FOR")," loop preceding it."),(0,a.kt)("p",null,"If the ",(0,a.kt)("inlineCode",{parentName:"p"},"DISTINCT")," is applied on an expression that itself is an array or a subquery, the ",(0,a.kt)("inlineCode",{parentName:"p"},"DISTINCT")," will not make the values in each array or subquery result unique, but instead ensure that the result contains only distinct arrays or subquery results. To make the result of an array or a subquery unique, simply apply the ",(0,a.kt)("inlineCode",{parentName:"p"},"DISTINCT")," for the array or the subquery."),(0,a.kt)("p",null,"For example, the following query will apply ",(0,a.kt)("inlineCode",{parentName:"p"},"DISTINCT")," on its subquery results, but not inside the subquery:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"FOR what IN 1..2\n  RETURN DISTINCT (\n    FOR i IN [ 1, 2, 3, 4, 1, 3 ] \n      RETURN i\n  )\n")),(0,a.kt)("p",null,"Here we'll have a ",(0,a.kt)("inlineCode",{parentName:"p"},"FOR")," loop with two iterations that each execute a subquery. The ",(0,a.kt)("inlineCode",{parentName:"p"},"DISTINCT")," here is applied on the two subquery results. Both subqueries return the same result value (that is ","[ 1, 2, 3, 4, 1, 3 ]","), so after ",(0,a.kt)("inlineCode",{parentName:"p"},"DISTINCT")," there will only be one occurrence of the value ","[ 1, 2, 3, 4, 1, 3 ]"," left:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},"[\n  [ 1, 2, 3, 4, 1, 3 ]\n]\n")),(0,a.kt)("p",null,"If the goal is to apply the ",(0,a.kt)("inlineCode",{parentName:"p"},"DISTINCT")," inside the subquery, it needs to be moved there:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"FOR what IN 1..2\n  LET sub = (\n    FOR i IN [ 1, 2, 3, 4, 1, 3 ] \n      RETURN DISTINCT i\n  ) \n  RETURN sub\n")),(0,a.kt)("p",null,"In the above case, the ",(0,a.kt)("inlineCode",{parentName:"p"},"DISTINCT")," will make the subquery results unique, so that each subquery will return a unique array of values (","[ 1, 2, 3, 4 ]","). As the subquery is executed twice and there is no ",(0,a.kt)("inlineCode",{parentName:"p"},"DISTINCT")," on the top-level, that array will be returned twice:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"[\n  [ 1, 2, 3, 4 ],\n  [ 1, 2, 3, 4 ]\n]\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"RETURN DISTINCT")," will not change the order of the results it is applied on."))}c.isMDXComponent=!0}}]);