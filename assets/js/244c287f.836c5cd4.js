"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[85563],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),c=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return o.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=c(n),f=r,m=d["".concat(s,".").concat(f)]||d[f]||p[f]||a;return n?o.createElement(m,l(l({ref:t},u),{},{components:n})):o.createElement(m,l({ref:t},u))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var c=2;c<a;c++)l[c]=n[c];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},47111:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var o=n(87462),r=(n(67294),n(3905));const a={sidebar_position:15,title:"Working with Cloudflare Workers"},l=void 0,i={unversionedId:"tutorials/cloudflare-workers",id:"tutorials/cloudflare-workers",title:"Working with Cloudflare Workers",description:"This brief tutorial will show you have to authenticate to the GDN using it's REST API and Cloudflare workers. It will then create a collection!",source:"@site/docs/tutorials/cloudflare-workers.md",sourceDirName:"tutorials",slug:"/tutorials/cloudflare-workers",permalink:"/docs/tutorials/cloudflare-workers",draft:!1,editUrl:"https://github.com/macrometacorp/docs/edit/main/docs/tutorials/cloudflare-workers.md",tags:[],version:"current",sidebarPosition:15,frontMatter:{sidebar_position:15,title:"Working with Cloudflare Workers"},sidebar:"defaultSidebar",previous:{title:"Tutorials",permalink:"/docs/tutorials/"},next:{title:"Dynamo Mode",permalink:"/docs/tutorials/dynamo"}},s={},c=[{value:"Auth and create first collection",id:"auth-and-create-first-collection",level:2},{value:"Response to collection creation",id:"response-to-collection-creation",level:3}],u={toc:c};function p(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,o.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This brief tutorial will show you have to authenticate to the GDN using it's REST API and Cloudflare workers. It will then create a collection!"),(0,r.kt)("h2",{id:"auth-and-create-first-collection"},"Auth and create first collection"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const macrometaHost = "https://api-play.paas.macrometa.io"\nconst authEndpoint = macrometaHost + "/_open/auth"\nconst collectionEndpoint = macrometaHost + "/_fabric/_system/_api/collection"\nconst type = "application/json;charset=UTF-8"\nconst authInfo = {\n  "email": "nemo@nautilus.com",\n  "password": "xxxxxx"\n}\n\nconst newCollection = {\n  "name": "myCollection"\n}\nconst getOptions = (requestBody, token) => ({\n  method: \'POST\',\n  body: JSON.stringify(requestBody),\n  headers: {\n    authorization: token,\n    "content-type": type\n  }\n});\n\nasync function handleRequest () {\n  const jwtRequest = await fetch(authEndpoint, getOptions(authInfo, ""))\n  const jwtResponse = await jwtRequest.json();\n  const jwtToken = `bearer ${jwtResponse.jwt}`\n\n  const collectionRequest = await fetch(collectionEndpoint, getOptions(newCollection, jwtToken))\n  const collectionResponse = await collectionRequest.json()\n  return new Response(JSON.stringify(collectionResponse))\n}\n\naddEventListener("fetch", event => {\n  return event.respondWith(handleRequest())\n})\n\n')),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Workers",src:n(95411).Z,width:"1909",height:"863"})),(0,r.kt)("h3",{id:"response-to-collection-creation"},"Response to collection creation"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "error":false,\n    "code":200,\n    "type":2,\n    "searchEnabled":false,\n    "name":"myFirstCollection",\n    "isSystem":false,\n    "collectionModel":"DOC",\n    "waitForSync":false,\n    "objectId":"550803885",\n    "cacheEnabled":false,\n    "keyOptions":{"allowUserKeys":true,"type":"traditional","lastValue":0},\n    "globallyUniqueId":"hEF7A96BFCCB/550803886",\n    "statusString":"loaded",\n    "id":"550803886",\n    "isLocal":false,\n    "status":3,\n    "isSpot":false\n}\n')),(0,r.kt)("p",null,"Now you have a collection created, you can check it out in the Macrometa console in ",(0,r.kt)("strong",{parentName:"p"},"Collections"),"."))}p.isMDXComponent=!0},95411:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/worker-console-3b956d8ee01a23efdb87f57305705d44.png"}}]);