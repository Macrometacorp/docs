"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[86779],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),p=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(i.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(n),g=r,u=d["".concat(i,".").concat(g)]||d[g]||h[g]||l;return n?a.createElement(u,o(o({ref:t},c),{},{components:n})):a.createElement(u,o({ref:t},c))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var p=2;p<l;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8430:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const l={title:"Graph Vertex Commands"},o="Graph Vertices (gdnsl graph vertex)",s={unversionedId:"cli/graph-vertex-cli",id:"cli/graph-vertex-cli",title:"Graph Vertex Commands",description:"gdnsl graph vertex create",source:"@site/docs/cli/graph-vertex-cli.md",sourceDirName:"cli",slug:"/cli/graph-vertex-cli",permalink:"/docs/cli/graph-vertex-cli",draft:!1,editUrl:"https://github.com/macrometacorp/docs/edit/main/docs/cli/graph-vertex-cli.md",tags:[],version:"current",frontMatter:{title:"Graph Vertex Commands"},sidebar:"defaultSidebar",previous:{title:"Graph Edge Commands",permalink:"/docs/cli/graph-edges-cli"},next:{title:"Import and Export Commands",permalink:"/docs/cli/import-export-cli"}},i={},p=[{value:"gdnsl graph vertex create",id:"gdnsl-graph-vertex-create",level:2},{value:"gdnsl graph vertex delete",id:"gdnsl-graph-vertex-delete",level:2},{value:"gdnsl graph vertex describe",id:"gdnsl-graph-vertex-describe",level:2},{value:"gdnsl graph vertex replace",id:"gdnsl-graph-vertex-replace",level:2},{value:"gdnsl graph vertex update",id:"gdnsl-graph-vertex-update",level:2}],c={toc:p};function h(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"graph-vertices-gdnsl-graph-vertex"},"Graph Vertices (gdnsl graph vertex)"),(0,r.kt)("h2",{id:"gdnsl-graph-vertex-create"},"gdnsl graph vertex create"),(0,r.kt)("p",null,"Create a vertex."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"gdnsl graph vertex create GRAPH-NAME [flags]\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'\n  # Create a vertex in the graph "social" with the vertex collection as "male"\n  gdnsl graph vertex create social --collection male --data \'{"name": "John"}\'\n\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Options:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"  -h, --help                Help for graph describe.\n      --collection          The name of the vertex collection the vertex belongs to.\n      --return-new          Define if the response should contain the complete new version of the document.\n      --data                json string of the data to be stored.\n      --fabric              Name of the fabric to use.\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Options inherited:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"      --config string       gdnsl config file (default is ./gdnsl.yaml)\n")),(0,r.kt)("h2",{id:"gdnsl-graph-vertex-delete"},"gdnsl graph vertex delete"),(0,r.kt)("p",null,"Remove vertex from a collection."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"gdnsl graph vertex delete GRAPH-NAME [flags]\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'\n  # Delete a vertex in the graph "social" with the vertex collection as "male"\n  gdnsl graph vertex delete social --collection male --vertex "John"\n\n  # Delete a vertex in the graph "social" with the vertex collection as "male" and return the old object\n  gdnsl graph vertex delete social --collection male --vertex "John" --return-old\n\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Options:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'  -h, --help                Help for graph describe.\n      --collection          The name of the vertex collection the vertex belongs to.\n      --vertex              The _key attribute of the vertex.\n      --return-old          Define if a presentation of the deleted document should\n                            be returned within the response object. Default is false.\n      --if-match            If the "If-Match" header is given, then it must contain exactly one Etag. The document is updated, if it has the same revision as the given Etag. Otherwise a HTTP 412 is returned.\n      --fabric              Name of the fabric to use.\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Options inherited:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"      --config string       gdnsl config file (default is ./gdnsl.yaml)\n")),(0,r.kt)("h2",{id:"gdnsl-graph-vertex-describe"},"gdnsl graph vertex describe"),(0,r.kt)("p",null,"Get details about a vertex."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"gdnsl graph vertex describe GRAPH-NAME [flags]\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'\n  # Describe the vertex with the _key as "bob" in the collection "male"\n  gdnsl graph vertex describe social --collection male --vertex bob\n\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Options:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'  -h, --help                Help to describe graph vertex.\n      --collection          The name of the vertex collection the vertex belongs to.\n      --vertex              The _key attribute of the vertex.\n      --rev                 Must contain a revision. If this is set a document is only returned if it has exactly this revision. Also see if-match header as an alternative to this. Default is false.\n      \n      --if-match            If the "If-Match" header is given, then it must contain exactly one Etag. The document is returned, if it has the same revision as the given Etag. Otherwise a HTTP 412 is returned. As an alternative you can supply the Etag in an query parameter rev.\n      \n      --if-none-match       If the "If-None-Match" header is given, then it must contain exactly one Etag. The document is returned, only if it has a different revision as the given Etag. Otherwise a HTTP 304 is returned.\n      \n      --fabric              Name of the fabric to use.\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Options inherited:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"      --config string       gdnsl config file (default is ./gdnsl.yaml)\n")),(0,r.kt)("h2",{id:"gdnsl-graph-vertex-replace"},"gdnsl graph vertex replace"),(0,r.kt)("p",null,"Replace the data of a vertex in the collection."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"gdnsl graph vertex replace GRAPH-NAME [flags]\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'\n    # Update a vertex in the graph "social" with the vertex collection as "male"\n    gdnsl graph vertex replace social --collection male --vertex "John" --data \'{"name": "John", "lname": "Doe"}\'\n\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Options:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'  -h, --help                Help to replace graph vertex.\n      --collection          The name of the vertex collection the vertex belongs to.\n      --vertex              The _key attribute of the vertex.\n      --return-new          Define if the response should contain the complete new version of the document. Default is false.\n      --keep-null           Define if values set to null should be stored. By default the key is not removed from the document. Default is false.\n      --return-old          Define if a presentation of the deleted document should\nbe returned within the response object. Default is false.\n      --data                json string of the data to be stored.\n      --if-match            If the "If-Match" header is given, then it must contain exactly one Etag. The document is updated, if it has the same revision as the given Etag. Otherwise a HTTP 412 is returned.\n      --fabric              Name of the fabric to use.\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Options inherited:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"      --config string       gdnsl config file (default is ./gdnsl.yaml)\n")),(0,r.kt)("h2",{id:"gdnsl-graph-vertex-update"},"gdnsl graph vertex update"),(0,r.kt)("p",null,"Update the data of a vertex in the collection."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"gdnsl graph vertex replace GRAPH-NAME [flags]\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Examples:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'\n  # Update a vertex in the graph "social" with the vertex collection as "male"\n  gdnsl graph vertex update social --collection male --vertex "John" --data \'{"name": "John", "lname": "Doe"}\'\n\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Options:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'  -h, --help                  Help to update graph vertex.\n      --collection            The name of the vertex collection the vertex belongs to.\n      --vertex                The _key attribute of the vertex.\n      --return-new            Define if the response should contain the complete new version of the document. Default is false.\n      --keep-null             Define if values set to null should be stored. By default the key is not removed from the document. Default is false.\n      --return-old            Define if a presentation of the deleted document should\nbe returned within the response object. Default is false.\n      --data                  json string of the data to be stored\n      --if-match              If the "If-Match" header is given, then it must contain exactly one Etag. The document is updated, if it has the same revision as the given Etag. Otherwise a HTTP 412 is returned.\n      --fabric                Name of the fabric to use.\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Options inherited:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"      --config string         gdnsl config file (default is ./gdnsl.yaml)\n")))}h.isMDXComponent=!0}}]);