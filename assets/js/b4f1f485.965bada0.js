"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[31033],{3905:(e,t,s)=>{s.d(t,{Zo:()=>i,kt:()=>u});var a=s(67294);function n(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}function l(e,t){var s=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),s.push.apply(s,a)}return s}function r(e){for(var t=1;t<arguments.length;t++){var s=null!=arguments[t]?arguments[t]:{};t%2?l(Object(s),!0).forEach((function(t){n(e,t,s[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(s)):l(Object(s)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(s,t))}))}return e}function o(e,t){if(null==e)return{};var s,a,n=function(e,t){if(null==e)return{};var s,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)s=l[a],t.indexOf(s)>=0||(n[s]=e[s]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)s=l[a],t.indexOf(s)>=0||Object.prototype.propertyIsEnumerable.call(e,s)&&(n[s]=e[s])}return n}var p=a.createContext({}),m=function(e){var t=a.useContext(p),s=t;return e&&(s="function"==typeof e?e(t):r(r({},t),e)),s},i=function(e){var t=m(e.components);return a.createElement(p.Provider,{value:t},e.children)},g={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var s=e.components,n=e.mdxType,l=e.originalType,p=e.parentName,i=o(e,["components","mdxType","originalType","parentName"]),c=m(s),u=n,d=c["".concat(p,".").concat(u)]||c[u]||g[u]||l;return s?a.createElement(d,r(r({ref:t},i),{},{components:s})):a.createElement(d,r({ref:t},i))}));function u(e,t){var s=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=s.length,r=new Array(l);r[0]=c;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:n,r[1]=o;for(var m=2;m<l;m++)r[m]=s[m];return a.createElement.apply(null,r)}return a.createElement.apply(null,s)}c.displayName="MDXCreateElement"},84700:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>p,contentTitle:()=>r,default:()=>g,frontMatter:()=>l,metadata:()=>o,toc:()=>m});var a=s(87462),n=(s(67294),s(3905));const l={title:"Stream Commands"},r="Streams (gdnsl streams)",o={unversionedId:"cli/streams-cli",id:"cli/streams-cli",title:"Stream Commands",description:"gdnsl streams publish",source:"@site/docs/cli/streams-cli.md",sourceDirName:"cli",slug:"/cli/streams-cli",permalink:"/docs/cli/streams-cli",draft:!1,editUrl:"https://github.com/macrometacorp/docs/edit/main/docs/cli/streams-cli.md",tags:[],version:"current",frontMatter:{title:"Stream Commands"},sidebar:"defaultSidebar",previous:{title:"Stream Worker Commands",permalink:"/docs/cli/stream-workers-cli"},next:{title:"User Commands",permalink:"/docs/cli/users-cli"}},p={},m=[{value:"gdnsl streams publish",id:"gdnsl-streams-publish",level:2},{value:"gdnsl streams create",id:"gdnsl-streams-create",level:2},{value:"gdnsl streams delete",id:"gdnsl-streams-delete",level:2},{value:"gdnsl streams list",id:"gdnsl-streams-list",level:2},{value:"gdnsl streams describe",id:"gdnsl-streams-describe",level:2},{value:"gdnsl streams expire",id:"gdnsl-streams-expire",level:2},{value:"gdnsl streams backlog",id:"gdnsl-streams-backlog",level:2},{value:"gdnsl streams subscription",id:"gdnsl-streams-subscription",level:2},{value:"gdnsl streams ttl",id:"gdnsl-streams-ttl",level:2}],i={toc:m};function g(e){let{components:t,...s}=e;return(0,n.kt)("wrapper",(0,a.Z)({},i,s,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"streams-gdnsl-streams"},"Streams (gdnsl streams)"),(0,n.kt)("h2",{id:"gdnsl-streams-publish"},"gdnsl streams publish"),(0,n.kt)("p",null,"Publish message to a stream."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"}," gdnsl streams publish <stream-name> [flags] <message-string>\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Examples:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'\n  #Publish message to a stream of type global  \n  gdnsl streams publish testStream --message "This is global stream"  --global\n\n  #Publish message to a stream of type local\n  gdnsl streams publish testStream --message "This is local stream" \n\n')),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Options:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"    -h, --help              Help to publish message to a stream.\n    --global                Is stream global or not.\n    --message               Message to be published to the stream.\n    --fabric                Name of the fabric to use.\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Options inherited:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"      --config string         gdnsl config file (default is ./gdnsl.yaml)\n")),(0,n.kt)("h2",{id:"gdnsl-streams-create"},"gdnsl streams create"),(0,n.kt)("p",null,"Create a stream."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"  gdnsl streams create <stream-name> [flags]\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Examples:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"\n  # Create a new stream name testStream of type global.\n  gdnsl streams create testStream --global\n\n  # Create a new stream name testStream of type local.\n  gdnsl streams create testStream\n\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Options:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"  -h, --help                  Help for streams create.\n      --global                Is stream global or not.\n      --fabric                Name of the fabric to use.\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Options inherited:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"      --config string         gdnsl config file (default is ./gdnsl.yaml)\n")),(0,n.kt)("h2",{id:"gdnsl-streams-delete"},"gdnsl streams delete"),(0,n.kt)("p",null,"Delete a stream."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"gdnsl streams delete <stream-name> [flags]\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Examples:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"\n  # Delete a stream of type global\n  gdnsl streams delete testStream --global\n\n  # Delete a stream of type local\n  gdnsl streams delete testStream\n\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Options:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"    -h, --help                    Help for deleting a stream.\n    --global                  Is stream global or not.\n    --fabric                  Name of the fabric to use.\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Options inherited:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"      --config string         gdnsl config file (default is ./gdnsl.yaml)\n")),(0,n.kt)("h2",{id:"gdnsl-streams-list"},"gdnsl streams list"),(0,n.kt)("p",null,"List streams."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"gdnsl streams list [flags]\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Examples:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"\n  # list streams \n  gdnsl streams list \n\n  # list streams's ttl\n  gdnsl streams list --ttl\n\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Options:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"    -h, --help                      Help to list streams.\n    --fabric                    Name of the fabric to use.\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Options inherited:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"      --config string         gdnsl config file (default is ./gdnsl.yaml)\n")),(0,n.kt)("h2",{id:"gdnsl-streams-describe"},"gdnsl streams describe"),(0,n.kt)("p",null,"Describe a stream."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"}," gdnsl streams describe <stream-name> [flags]\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Examples:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"\n  # Get  stream's backlog  for stream type global\n  gdnsl streams describe testStream --backlog --global\n\n  # Get  stream's backlog  for stream type local\n  gdnsl streams describe testStream --backlog\n\n  # Get  stream's stats  for stream type global\n  gdnsl streams describe testStream --stats --global\n\n  # Get  stream's stats  for stream type local\n  gdnsl streams describe testStream --stats\n\n  # Get  stream's subscription  for stream type global\n  gdnsl streams describe testStream --subscription --global\n\n  # Get  stream's subscription  for stream type local\n  gdnsl streams describe testStream --subscription \n\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Options:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"      -h, --help              Help to describe a stream.\n          --subscription      Subscription for a particular stream.\n          --backlog           Backlog for a particular stream.\n          --stats             Stats for a particular stream.\n          --global            Global stream. ( default is local )\n          --fabric            Name of the fabric to use.\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Options inherited:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"      --config string         gdnsl config file (default is ./gdnsl.yaml)\n")),(0,n.kt)("h2",{id:"gdnsl-streams-expire"},"gdnsl streams expire"),(0,n.kt)("p",null,"Expire messages on the stream for all subscriptions."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"gdnsl streams expire <stream-name> [flags] <second-value-number>\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Examples:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"\n  # Expire messages on the stream for all subscriptions for stream type global\n  gdnsl streams expire testStream --seconds 9600 --global\n\n  # Expire messages on the stream for all subscriptions for stream type local\n  gdnsl streams expire testStream --seconds 9600 \n\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Options:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"      -h, --help              Help for expiration time for messages on stream for all subscriptions.\n          --global            Is stream global or not.\n          --seconds           Value for expiring a stream message.\n          --fabric            Name of the fabric to use.\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Options inherited:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"      --config string         gdnsl config file (default is ./gdnsl.yaml)\n")),(0,n.kt)("h2",{id:"gdnsl-streams-backlog"},"gdnsl streams backlog"),(0,n.kt)("p",null,"Delete backlog for all streams or for a subscription."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"gdnsl streams backlog [flags]\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Examples:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"\n  # Clear backlog for all streams\n  gdnsl streams backlog --delete\n\n  # Clear subscription\u2019s backlog    \n  gdnsl streams backlog --delete --subscription MyTopic\n\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Options:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"      -h, --help              Help for deleting backlog.\n      --subscription          Subscription for a particular stream.\n      --delete                Delete backlog for streams. Default is all if subscription is not specified.\n      --fabric                Name of the fabric to use.\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Options inherited:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"      --config string         gdnsl config file (default is ./gdnsl.yaml)\n")),(0,n.kt)("h2",{id:"gdnsl-streams-subscription"},"gdnsl streams subscription"),(0,n.kt)("p",null,"Delete subscription either on all streams or an a particular stream."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"gdnsl streams subscription NAME [flags]\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Examples:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"\n  # Delete the given subscription on all streams\n  gdnsl streams subscription mysubscription --delete \n\n  # Delete subscription on a specific stream\n  gdnsl streams subscription mysubscription --stream stream1\n\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Options:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'  -h, --help            Help for deleting subscriptions\n  --delete              Delete the given subscription on all streams\n  --fabric=<value>      Name of the fabric. Default will be "_system"\n  --global              Is stream global or not.\n  --stream=<value>      Name of the streams.\n')),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Options inherited:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"-c, --config=<value>     gdnsl config file (default is ./gdnsl.yaml)\n")),(0,n.kt)("h2",{id:"gdnsl-streams-ttl"},"gdnsl streams ttl"),(0,n.kt)("p",null,"Get or set message TTL (time-to-live) in seconds for streams."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"gdnsl streams ttl [flags]\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Examples:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"\n  # Get streams TTL\n  gdnsl streams ttl \n\n  # Set message TTL for 3600 seconds on all streams\n  gdnsl streams ttl --seconds 3600\n\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Options:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"    -h, --help              Help for getting streams ttl.\n            --seconds           Message TTL in seconds.\n            --fabric            Name of the fabric to use.\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Options inherited:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"      --config string         gdnsl config file (default is ./gdnsl.yaml)\n")))}g.isMDXComponent=!0}}]);