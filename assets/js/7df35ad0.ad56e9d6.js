"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[13229],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>g});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),p=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(i.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,l=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=p(n),g=o,m=d["".concat(i,".").concat(g)]||d[g]||c[g]||l;return n?r.createElement(m,a(a({ref:t},u),{},{components:n})):r.createElement(m,a({ref:t},u))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=n.length,a=new Array(l);a[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var p=2;p<l;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},89392:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>a,default:()=>c,frontMatter:()=>l,metadata:()=>s,toc:()=>p});var r=n(87462),o=(n(67294),n(3905));const l={title:"Route Commands"},a="Route (gdnsl route)",s={unversionedId:"cli/route-cli",id:"cli/route-cli",title:"Route Commands",description:"Route command group.",source:"@site/docs/cli/route-cli.md",sourceDirName:"cli",slug:"/cli/route-cli",permalink:"/docs/cli/route-cli",draft:!1,editUrl:"https://github.com/macrometacorp/docs/edit/main/docs/cli/route-cli.md",tags:[],version:"current",frontMatter:{title:"Route Commands"},sidebar:"defaultSidebar",previous:{title:"Revision Commands",permalink:"/docs/cli/revision-cli"},next:{title:"Search Commands",permalink:"/docs/cli/search-cli"}},i={},p=[{value:"gdnsl route list",id:"gdnsl-route-list",level:2},{value:"gdnsl route describe",id:"gdnsl-route-describe",level:2}],u={toc:p};function c(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"route-gdnsl-route"},"Route (gdnsl route)"),(0,o.kt)("p",null,"Route command group."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"gdnsl route [flags]\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Options:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"  -r, --regions             List of region names or keywords (LOCAL or ALL). Overrides the region setting in gdnsl.yml config file.\n  -h, --help                Help for route.\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Options inherited:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"      --config string       gdnsl config file (default is ./gdnsl.yaml)\n      --log-http            Log http traffic.\n")),(0,o.kt)("h2",{id:"gdnsl-route-list"},"gdnsl route list"),(0,o.kt)("p",null,"List available routes."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"gdnsl route list NAME [flags]\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Examples:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"  # List all routes\n  gdnsl route list\n\n  # List route 'web' in namespace 'dev'\n  gdnsl route list web -n dev\n\n  # List all routes in yaml format\n  gdnsl route list -o yaml\n\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Options:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"  -r, --regions               List of region names or keywords (LOCAL or ALL). Overrides the region setting in gdnsl.yml config file.\n  -h, --help                  Help to list revisions.\n      --no-headers            When using the default output format, don't print headers (default: print headers).\n  -o, --output string         Output format. One of: json|yaml\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Options inherited:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"      --config string         gdnsl config file (default is ./gdnsl.yaml)\n      --log-http              Log http traffic.\n")),(0,o.kt)("h2",{id:"gdnsl-route-describe"},"gdnsl route describe"),(0,o.kt)("p",null,"Describe available route."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"gdnsl route describe NAME [flags]\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Options:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"  -r, --regions              List of region names or keywords (LOCAL or ALL). Overrides the region setting in gdnsl.yml config file.\n  -h, --help                 help to describe a route.\n  -o, --output string        Output format. One of: json|yaml\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Options inherited:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"      --config string        gdnsl config file (default is ./gdnsl.yaml)\n      --log-http             Log http traffic.\n")))}c.isMDXComponent=!0}}]);