"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[70802],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=c(n),d=r,y=m["".concat(l,".").concat(d)]||m[d]||p[d]||o;return n?a.createElement(y,s(s({ref:t},u),{},{components:n})):a.createElement(y,s({ref:t},u))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var c=2;c<o;c++)s[c]=n[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},85162:(e,t,n)=>{n.d(t,{Z:()=>s});var a=n(67294),r=n(34334);const o="tabItem_Ymn6";function s(e){let{children:t,hidden:n,className:s}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(o,s),hidden:n},t)}},65488:(e,t,n)=>{n.d(t,{Z:()=>d});var a=n(87462),r=n(67294),o=n(34334),s=n(72389),i=n(67392),l=n(7094),c=n(12466);const u="tabList__CuJ",p="tabItem_LNqP";function m(e){const{lazy:t,block:n,defaultValue:s,values:m,groupId:d,className:y}=e,h=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),f=m??h.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),b=(0,i.l)(f,((e,t)=>e.value===t.value));if(b.length>0)throw new Error(`Docusaurus error: Duplicate values "${b.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const g=null===s?s:s??h.find((e=>e.props.default))?.props.value??h[0].props.value;if(null!==g&&!f.some((e=>e.value===g)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${g}" but none of its children has the corresponding value. Available values are: ${f.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:k,setTabGroupChoices:v}=(0,l.U)(),[P,w]=(0,r.useState)(g),I=[],{blockElementScrollPositionUntilNextRender:A}=(0,c.o5)();if(null!=d){const e=k[d];null!=e&&e!==P&&f.some((t=>t.value===e))&&w(e)}const T=e=>{const t=e.currentTarget,n=I.indexOf(t),a=f[n].value;a!==P&&(A(t),w(a),null!=d&&v(d,String(a)))},_=e=>{let t=null;switch(e.key){case"ArrowRight":{const n=I.indexOf(e.currentTarget)+1;t=I[n]??I[0];break}case"ArrowLeft":{const n=I.indexOf(e.currentTarget)-1;t=I[n]??I[I.length-1];break}}t?.focus()};return r.createElement("div",{className:(0,o.Z)("tabs-container",u)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},y)},f.map((e=>{let{value:t,label:n,attributes:s}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:P===t?0:-1,"aria-selected":P===t,key:t,ref:e=>I.push(e),onKeyDown:_,onFocus:T,onClick:T},s,{className:(0,o.Z)("tabs__item",p,s?.className,{"tabs__item--active":P===t})}),n??t)}))),t?(0,r.cloneElement)(h.filter((e=>e.props.value===P))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},h.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==P})))))}function d(e){const t=(0,s.Z)();return r.createElement(m,(0,a.Z)({key:String(t)},e))}},93150:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>c,toc:()=>p});var a=n(87462),r=(n(67294),n(3905)),o=n(65488),s=n(85162);const i={title:"API Key Authentication",sidebar_position:10},l=void 0,c={unversionedId:"account-management/auth/api-key-auth",id:"account-management/auth/api-key-auth",title:"API Key Authentication",description:"API keys are the recommended authentication method for access by apps and APIs.",source:"@site/docs/account-management/auth/api-key-auth.md",sourceDirName:"account-management/auth",slug:"/account-management/auth/api-key-auth",permalink:"/docs/account-management/auth/api-key-auth",draft:!1,editUrl:"https://github.com/macrometacorp/docs/edit/main/docs/account-management/auth/api-key-auth.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{title:"API Key Authentication",sidebar_position:10},sidebar:"defaultSidebar",previous:{title:"Authentication",permalink:"/docs/account-management/auth/"},next:{title:"User Authentication",permalink:"/docs/account-management/auth/user-auth"}},u={},p=[],m={toc:p};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"API keys are the recommended authentication method for access by apps and APIs."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"You can apply granular permissions to API keys. For more information, refer to ",(0,r.kt)("a",{parentName:"li",href:"/docs/account-management/permissions/"},"Permissions"),"."),(0,r.kt)("li",{parentName:"ul"},"You can manage API keys in multiple ways, including the web console.")),(0,r.kt)("p",null,"For more information about creating and managing API keys, refer to ",(0,r.kt)("a",{parentName:"p",href:"/docs/account-management/api-keys/"},"Manage API Keys"),"."),(0,r.kt)(o.Z,{groupId:"operating-systems",mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"js",label:"Javascript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const jsc8 = require("jsc8");\n// Replace the apiKey placeholder with your API key.\n// Update the fabricName if you need to log in to a fabric other than _system.\nconst client = new jsc8({url: "https://play.paas.macrometa.io", apiKey: "XXXX", fabricName: \'_system\'});\n'))),(0,r.kt)(s.Z,{value:"py",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},'from c8 import C8Client\n\n# Define constants\nURL = "play.paas.macrometa.io"\nGEO_FABRIC = "_system" # Change this if you need to log in to a fabric other than _system.\nAPI_KEY = "my API key" # Change this to your API key.\n\nprint("--- Connecting to C8")\nclient = C8Client(protocol=\'https\', host=URL, port=443, apikey = API_KEY, geofabric = GEO_FABRIC)\n'))),(0,r.kt)(s.Z,{value:"api",label:"REST API",mdxType:"TabItem"},(0,r.kt)("p",null,"Sample Python code demonstrating how to use API key to make REST API calls:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},'import requests\n\n# Constants\n\nURL = "api-play.paas.macrometa.io"\nHTTP_URL = f"https://{URL}"\nFABRIC = "_system"\nAPI_KEY = "XXXXX" # To be replaced by your apikey\n\n# apikey keyword needs to be appended to the apikey\nAUTH_TOKEN = f"apikey {API_KEY}"\n\n# Create a HTTPS Session authenticated with apikey\nsession = requests.session()\nsession.headers.update({"content-type": \'application/json\'})\nsession.headers.update({"authorization": AUTH_TOKEN})\n\n# Now you can use the above session to make any API request\n# For example we are calling the \'List all collections\' API below\nurl = f"{HTTP_URL}/_fabric/{FABRIC}/_api/collection"\n\nresponse = session.get(url)\nprint(response.text)\n')),(0,r.kt)("p",null,"Sample Javascript code demonstrating how to use API key to make REST API calls:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'class APIRequest {\n  _headers = {\n    Accept: "application/json",\n    "Content-Type": "application/json"\n  };\n\u200b\n  constructor (url, apiKey) {\n    this._url = url;\n    this._headers.authorization = `apikey ${apiKey}`; // apikey keyword needs to be appended\n  }\n\u200b\n  _handleResponse (response, resolve, reject) {\n    if (response.ok) {\n      resolve(response.json());\n    } else {\n      reject(response);\n    }\n  }\n\u200b\n  req (endpoint, { body, ...options } = {}) {\n    const self = this;\n    return new Promise(function (resolve, reject) {\n      fetch(self._url + endpoint, {\n        headers: self._headers,\n        body: body ? JSON.stringify(body) : undefined,\n        ...options\n      }).then((response) => self._handleResponse(response, resolve, reject));\n    });\n  }\n}\n\u200b\nconst federationName = "api-play.paas.macrometa.io";\nconst federationUrl = `https://${federationName}`;\nconst fabric = "_system";\nconst apiKey = "XXXXX";\n\u200b\nconst run = async function () {\n  try {\n    const connection = new APIRequest(federationUrl, apiKey);\n\u200b\n    // Now we can use the above connection to call APIs\n    // For example we are calling the \'List all collections\' API below\n    const response = await connection.req(`/_fabric/${fabric}/_api/collection`, {\n      method: "GET"\n    });\n    console.log(response)\n  } catch (e) {\n    console.error(e);\n  }\n};\n\u200b\nrun();\n')))))}d.isMDXComponent=!0}}]);