"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[86745],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>d});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},m=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),c=l(r),d=a,f=c["".concat(s,".").concat(d)]||c[d]||u[d]||o;return r?n.createElement(f,i(i({ref:t},m),{},{components:r})):n.createElement(f,i({ref:t},m))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=c;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:a,i[1]=p;for(var l=2;l<o;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},43817:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>p,toc:()=>l});var n=r(87462),a=(r(67294),r(3905));const o={sidebar_position:2,title:"Streams and Queries Example"},i=void 0,p={unversionedId:"cep/examples/streams-and-queries-example",id:"cep/examples/streams-and-queries-example",title:"Streams and Queries Example",description:"This page provides an example of streams and queries, and how multiple queries can be chained to one another.",source:"@site/docs/cep/examples/streams-and-queries-example.md",sourceDirName:"cep/examples",slug:"/cep/examples/streams-and-queries-example",permalink:"/docs/cep/examples/streams-and-queries-example",draft:!1,editUrl:"https://github.com/macrometacorp/docs/edit/main/docs/cep/examples/streams-and-queries-example.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Streams and Queries Example"},sidebar:"defaultSidebar",previous:{title:"Basic Stream Worker Example",permalink:"/docs/cep/examples/basic-sw-example"},next:{title:"Source and Sink Example",permalink:"/docs/cep/examples/source-and-sink-example"}},s={},l=[{value:"Example",id:"example",level:2},{value:"Events at Each Stream",id:"events-at-each-stream",level:2}],m={toc:l};function u(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This page provides an example of ",(0,a.kt)("inlineCode",{parentName:"p"},"streams")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"queries"),", and how multiple queries can be chained to one another."),(0,a.kt)("p",null,"There are multiple type of queries such as ",(0,a.kt)("inlineCode",{parentName:"p"},"window query"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"join query"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"pattern query"),", etc. Below example explains how ",(0,a.kt)("inlineCode",{parentName:"p"},"pass-through")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"selection queries")," work. For more info refer the ",(0,a.kt)("a",{parentName:"p",href:"/docs/cep/query-guide/"},"Stream Query Guide"),"."),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("p",null,"The following is an example annotated with descriptive comments."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"-- Defines `InputTemperatureStream` stream to pass events having `sensorId` and `temperature` attributes of types `string` and `double`.\nCREATE STREAM InputTemperatureStream (sensorId string, temperature double);\n\n-- Optional `@info` annotation to name the query.\n@info(name = 'Pass-through')\n\n-- Query to consume events from `InputTemperatureStream`, produce new events by selecting all the attributes from the incoming events, and outputs them to `TemperatureStream`.\ninsert into TemperatureAndSensorStream\nselect *\nfrom InputTemperatureStream;\n\n@info(name = 'Simple-selection')\n\n-- Selects only the `temperature` attribute from events, and outputs to `TemperatureOnlyStream`.\n-- Consumes events from `TemperatureAndSensorStream`. The schema of the stream is inferred from the previous query, hence no need to be defined.\ninsert into TemperatureOnlyStream\nselect temperature\nfrom TemperatureAndSensorStream;\n")),(0,a.kt)("h2",{id:"events-at-each-stream"},"Events at Each Stream"),(0,a.kt)("p",null,"When an event with values ","[",(0,a.kt)("inlineCode",{parentName:"p"},"'aq-14'"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"35.4"),"]"," is sent to ",(0,a.kt)("inlineCode",{parentName:"p"},"InputTemperatureStream")," stream, it is converted and travels through the streams as below."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"InputTemperatureStream : ","[",(0,a.kt)("inlineCode",{parentName:"li"},"'aq-14'"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"35.4"),"]"),(0,a.kt)("li",{parentName:"ul"},"TemperatureAndSensorStream : ","['aq-14', ",(0,a.kt)("inlineCode",{parentName:"li"},"35.4"),"]"),(0,a.kt)("li",{parentName:"ul"},"TemperatureOnlyStream : ","[",(0,a.kt)("inlineCode",{parentName:"li"},"35.4"),"]")))}u.isMDXComponent=!0}}]);