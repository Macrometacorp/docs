"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[31857],{3905:(e,r,t)=>{t.d(r,{Zo:()=>u,kt:()=>m});var n=t(67294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function a(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=n.createContext({}),l=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):a(a({},r),e)),t},u=function(e){var r=l(e.components);return n.createElement(c.Provider,{value:r},e.children)},y={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},p=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(t),m=o,f=p["".concat(c,".").concat(m)]||p[m]||y[m]||i;return t?n.createElement(f,a(a({ref:r},u),{},{components:t})):n.createElement(f,a({ref:r},u))}));function m(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=p;var s={};for(var c in r)hasOwnProperty.call(r,c)&&(s[c]=r[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var l=2;l<i;l++)a[l]=t[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,t)}p.displayName="MDXCreateElement"},24189:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>a,default:()=>y,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var n=t(87462),o=(t(67294),t(3905));const i={sidebar_position:10,title:"Queries Without Collections"},a=void 0,s={unversionedId:"queryworkers/c8ql/examples/queries-without-collections",id:"queryworkers/c8ql/examples/queries-without-collections",title:"Queries Without Collections",description:"Following is a query that returns a string value. The result string is contained in an array because the result of every valid query is an array:",source:"@site/docs/queryworkers/c8ql/examples/queries-without-collections.md",sourceDirName:"queryworkers/c8ql/examples",slug:"/queryworkers/c8ql/examples/queries-without-collections",permalink:"/docs/queryworkers/c8ql/examples/queries-without-collections",draft:!1,editUrl:"https://github.com/macrometacorp/docs/edit/main/docs/queryworkers/c8ql/examples/queries-without-collections.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10,title:"Queries Without Collections"},sidebar:"defaultSidebar",previous:{title:"Projections & Filters",permalink:"/docs/queryworkers/c8ql/examples/projections-and-filters"},next:{title:"Remove Vertex",permalink:"/docs/queryworkers/c8ql/examples/remove-vertex"}},c={},l=[],u={toc:l};function y(e){let{components:r,...t}=e;return(0,o.kt)("wrapper",(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Following is a query that returns a string value. The result string is contained in an array because the result of every valid query is an array:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'RETURN "this will be returned"\n[ \n  "this will be returned" \n]\n')),(0,o.kt)("p",null,"Here is a query that creates the cross products of two arrays and runs a projection on it, using a few of C8QL's built-in functions:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'FOR year in [ 2011, 2012, 2013 ]\n  FOR quarter IN [ 1, 2, 3, 4 ]\n    RETURN { \n      "y" : "year", \n      "q" : quarter, \n      "nice" : CONCAT(quarter, "/", year) \n    }\n[ \n  { "y" : "year", "q" : 1, "nice" : "1/2011" }, \n  { "y" : "year", "q" : 2, "nice" : "2/2011" }, \n  { "y" : "year", "q" : 3, "nice" : "3/2011" }, \n  { "y" : "year", "q" : 4, "nice" : "4/2011" }, \n  { "y" : "year", "q" : 1, "nice" : "1/2012" }, \n  { "y" : "year", "q" : 2, "nice" : "2/2012" }, \n  { "y" : "year", "q" : 3, "nice" : "3/2012" }, \n  { "y" : "year", "q" : 4, "nice" : "4/2012" }, \n  { "y" : "year", "q" : 1, "nice" : "1/2013" }, \n  { "y" : "year", "q" : 2, "nice" : "2/2013" }, \n  { "y" : "year", "q" : 3, "nice" : "3/2013" }, \n  { "y" : "year", "q" : 4, "nice" : "4/2013" } \n]\n')))}y.isMDXComponent=!0}}]);