"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[89853],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>k});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),d=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=d(e.components);return a.createElement(o.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),u=d(n),k=r,N=u["".concat(o,".").concat(k)]||u[k]||s[k]||i;return n?a.createElement(N,l(l({ref:t},m),{},{components:n})):a.createElement(N,l({ref:t},m))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=u;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p.mdxType="string"==typeof e?e:r,l[1]=p;for(var d=2;d<i;d++)l[d]=n[d];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},85020:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>s,frontMatter:()=>i,metadata:()=>p,toc:()=>d});var a=n(87462),r=(n(67294),n(3905));const i={sidebar_position:80,title:"Data Pipeline Examples"},l=void 0,p={unversionedId:"cep/examples/data-pipelines",id:"cep/examples/data-pipelines",title:"Data Pipeline Examples",description:"This page explains ways to create data pipelines.",source:"@site/docs/cep/examples/data-pipelines.md",sourceDirName:"cep/examples",slug:"/cep/examples/data-pipelines",permalink:"/docs/cep/examples/data-pipelines",draft:!1,editUrl:"https://github.com/macrometacorp/docs/edit/main/docs/cep/examples/data-pipelines.md",tags:[],version:"current",sidebarPosition:80,frontMatter:{sidebar_position:80,title:"Data Pipeline Examples"},sidebar:"defaultSidebar",previous:{title:"Patterns and Trends Detection Examples",permalink:"/docs/cep/examples/patterns-and-trends"},next:{title:"Join and Enrich Data",permalink:"/docs/cep/enrich-data/"}},o={},d=[{value:"Stream Joins",id:"stream-joins",level:2},{value:"Stream Joins Example",id:"stream-joins-example",level:3},{value:"JOIN Behavior",id:"join-behavior",level:3},{value:"Partition Events by Value",id:"partition-events-by-value",level:2},{value:"Partition Events by Value Example",id:"partition-events-by-value-example",level:3},{value:"Partition Behavior",id:"partition-behavior",level:3},{value:"Scatter and Gather (String)",id:"scatter-and-gather-string",level:2},{value:"Scatter and Gather (String) Example",id:"scatter-and-gather-string-example",level:3},{value:"Scatter and Gather (String) Input",id:"scatter-and-gather-string-input",level:3},{value:"Scatter and Gather (String) Output",id:"scatter-and-gather-string-output",level:3},{value:"Scatter and Gather (JSON)",id:"scatter-and-gather-json",level:2},{value:"Scatter and Gather (JSON) Example",id:"scatter-and-gather-json-example",level:3},{value:"Scatter and Gather (JSON) Input",id:"scatter-and-gather-json-input",level:3},{value:"Scatter and Gather (JSON) Output",id:"scatter-and-gather-json-output",level:3}],m={toc:d};function s(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This page explains ways to create data pipelines."),(0,r.kt)("h2",{id:"stream-joins"},"Stream Joins"),(0,r.kt)("p",null,"This example shows joining two stream based on a condition."),(0,r.kt)("p",null,"For more information on other ",(0,r.kt)("a",{parentName:"p",href:"/docs/cep/query-guide/query#join-stream"},"join operations"),", refer to the ",(0,r.kt)("a",{parentName:"p",href:"/docs/cep/query-guide/"},"Stream Worker Query Guide"),"."),(0,r.kt)("h3",{id:"stream-joins-example"},"Stream Joins Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE STREAM TemperatureStream (roomNo string, temperature double);\n\nCREATE STREAM HumidityStream (roomNo string, humidity double);\n\n@info(name = 'Equi-join')\n-- Join latest `temperature` and `humidity` events arriving within 1 minute for each `roomNo`.\nINSERT INTO TemperatureHumidityStream\nSELECT t.roomNo, t.temperature, h.humidity\nFROM TemperatureStream window unique:time(roomNo, 1 min) as t\n    join HumidityStream window unique:time(roomNo, 1 min) as h\n    on t.roomNo == h.roomNo;\n\n\n@info(name = 'Join-on-temperature')\nINSERT INTO EnrichedTemperatureStream\nSELECT t.roomNo, t.temperature, h.humidity\n-- Join when events arrive in `TemperatureStream`.\nFROM TemperatureStream as t\n-- When events get matched in `time()` window, all matched events are emitted, else `null` is emitted.\n    LEFT OUTER JOIN HumidityStream window sliding_time(1 min) AS h\n    ON t.roomNo == h.roomNo;\n")),(0,r.kt)("h3",{id:"join-behavior"},"JOIN Behavior"),(0,r.kt)("p",null,"When events are sent to ",(0,r.kt)("inlineCode",{parentName:"p"},"TemperatureStream")," stream and ",(0,r.kt)("inlineCode",{parentName:"p"},"HumidityStream")," stream, the following events are emitted at ",(0,r.kt)("inlineCode",{parentName:"p"},"TemperatureHumidityStream")," via ",(0,r.kt)("inlineCode",{parentName:"p"},"Equi-JOIN")," query, and ",(0,r.kt)("inlineCode",{parentName:"p"},"EnrichedTemperatureStream")," via ",(0,r.kt)("inlineCode",{parentName:"p"},"JOIN-on-temperature")," query:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Time"),(0,r.kt)("th",{parentName:"tr",align:null},"Input to ",(0,r.kt)("inlineCode",{parentName:"th"},"TemperatureStream")),(0,r.kt)("th",{parentName:"tr",align:null},"Input to ",(0,r.kt)("inlineCode",{parentName:"th"},"HumidityStream")),(0,r.kt)("th",{parentName:"tr",align:null},"Output at ",(0,r.kt)("inlineCode",{parentName:"th"},"TemperatureHumidityStream")),(0,r.kt)("th",{parentName:"tr",align:null},"Output at ",(0,r.kt)("inlineCode",{parentName:"th"},"EnrichedTemperatureStream")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"9:00:00"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"18.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"18.0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"null"),"]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"9:00:10"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"72.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"9:00:15"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"73.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"9:00:30"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"22.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"22.0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"73.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"22.0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"72.0"),"]",", ",(0,r.kt)("br",null),"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"22.0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"73.0"),"]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"9:00:50"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"60.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"18.0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"60.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"9:01:10"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"62.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"9:01:20"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"17.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"17.0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"62.0"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"17.0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"60.0"),"]",", ",(0,r.kt)("br",null),"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"17.0"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"62.0"),"]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"9:02:10"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"23.5"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"23.5"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"null"),"]")))),(0,r.kt)("h2",{id:"partition-events-by-value"},"Partition Events by Value"),(0,r.kt)("p",null,"This example shows partitioning events by attribute values. For more informatiON ON ",(0,r.kt)("a",{parentName:"p",href:"/docs/cep/query-guide/partition"},"partition")," refer the ",(0,r.kt)("a",{parentName:"p",href:"/docs/cep/query-guide/"},"Stream Query Guide"),"."),(0,r.kt)("h3",{id:"partition-events-by-value-example"},"Partition Events by Value Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE STREAM LoginStream ( userID string, loginSuccessful bool);\n\n-- Optional purging configuratiON to remove partitiON instances that haven't received events for `1 hour` by checking every `10 sec`.\n@purge(enable='true', interval='10 sec', idle.period='1 hour')\n-- Partitions the events based ON `userID`.\npartitiON with ( userID of LoginStream )\n\nbegin\n    @info(name='Aggregation-query')\n-- Calculates success and failure login attempts FROM the last 3 events of each `userID`.\n    INSERT INTO #LoginAttempts\n    SELECT userID, loginSuccessful, count() AS attempts\n    FROM LoginStream window sliding_length(3)\n    GROUP BY loginSuccessful;\n-- Inserts results to `#LoginAttempts` inner stream that is only accessible within the partitiON instance.\n\n    @info(name='Alert-query')\n-- Consumes events FROM the inner stream, and suspends `userID`s that have 3 consecutive login failures.\n    INSERT INTO UserSuspensionStream\n    SELECT userID, \"3 consecutive login failures!\" AS message\n    FROM #LoginAttempts[loginSuccessful==false and attempts==3];\nend;\n")),(0,r.kt)("h3",{id:"partition-behavior"},"Partition Behavior"),(0,r.kt)("p",null,"When events are sent to ",(0,r.kt)("inlineCode",{parentName:"p"},"LoginStream")," stream, following events will be generated at ",(0,r.kt)("inlineCode",{parentName:"p"},"#LoginAttempts")," inner stream via ",(0,r.kt)("inlineCode",{parentName:"p"},"Aggregation-query")," query, and ",(0,r.kt)("inlineCode",{parentName:"p"},"UserSuspensionStream")," via ",(0,r.kt)("inlineCode",{parentName:"p"},"Alert-query")," query:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Input to ",(0,r.kt)("inlineCode",{parentName:"th"},"TemperatureStream")),(0,r.kt)("th",{parentName:"tr",align:null},"At ",(0,r.kt)("inlineCode",{parentName:"th"},"#LoginAttempts")),(0,r.kt)("th",{parentName:"tr",align:null},"Output at ",(0,r.kt)("inlineCode",{parentName:"th"},"UserSuspensionStream")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"1"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"1"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"1"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"2"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"2"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"1"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"2"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"false"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"2"),"]"),(0,r.kt)("td",{parentName:"tr",align:null},"[",(0,r.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"'3 consecutive login failures!'"),"]")))),(0,r.kt)("h2",{id:"scatter-and-gather-string"},"Scatter and Gather (String)"),(0,r.kt)("p",null,"This example shows performing scatter and gather ON string values."),(0,r.kt)("h3",{id:"scatter-and-gather-string-example"},"Scatter and Gather (String) Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE STREAM PurchaseStream (userId string, items string, store string);\n\n@info(name = 'Scatter-query')\n-- Scatter value of `items` in to separate events by `,`.\nINSERT INTO TokenizedItemStream\nSELECT userId, token AS item, store\nFROM PurchaseStream#str:tokenize(items, ',', true);\n\n@info(name = 'Transform-query')\n-- Concat tokenized `item` with `store`.\nINSERT INTO TransformedItemStream\nSELECT userId, str:concat(store, \"-\", item) AS itemKey\nFROM TokenizedItemStream;\n\n@info(name = 'Gather-query')\nINSERT INTO GroupedPurchaseItemStream\n-- Concat all events in a batch separating them by `,`.\nSELECT userId, str:groupConcat(itemKey, \",\") AS itemKeys\n-- Collect events traveling AS a batch via `batch()` window.\nFROM TransformedItemStream window batch();\n")),(0,r.kt)("h3",{id:"scatter-and-gather-string-input"},"Scatter and Gather (String) Input"),(0,r.kt)("p",null,"The following event containing a JSON string is sent to ",(0,r.kt)("inlineCode",{parentName:"p"},"PurchaseStream"),":"),(0,r.kt)("p",null,"[",(0,r.kt)("inlineCode",{parentName:"p"},"'501'"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"'cake,cookie,bun,cookie'"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"'CA'"),"]"),(0,r.kt)("h3",{id:"scatter-and-gather-string-output"},"Scatter and Gather (String) Output"),(0,r.kt)("p",null,"After processing, the events arrive at ",(0,r.kt)("inlineCode",{parentName:"p"},"TokenizedItemStream"),":"),(0,r.kt)("p",null,"[",(0,r.kt)("inlineCode",{parentName:"p"},"'501'"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"'cake'"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"'CA'"),"]",", ","[",(0,r.kt)("inlineCode",{parentName:"p"},"'501'"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"'cookie'"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"'CA'"),"]",", ","[",(0,r.kt)("inlineCode",{parentName:"p"},"'501'"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"'bun'"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"'CA'"),"]"),(0,r.kt)("p",null,"The events arrive at ",(0,r.kt)("inlineCode",{parentName:"p"},"TransformedItemStream"),":"),(0,r.kt)("p",null,"[",(0,r.kt)("inlineCode",{parentName:"p"},"'501'"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"'CA-cake'"),"]",", ","[",(0,r.kt)("inlineCode",{parentName:"p"},"'501'"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"'CA-cookie'"),"]",", ","[",(0,r.kt)("inlineCode",{parentName:"p"},"'501'"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"'CA-bun'"),"]"),(0,r.kt)("p",null,"The event arrive at ",(0,r.kt)("inlineCode",{parentName:"p"},"GroupedPurchaseItemStream"),":"),(0,r.kt)("p",null,"[",(0,r.kt)("inlineCode",{parentName:"p"},"'501'"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"'CA-cake,CA-cookie,CA-bun'"),"]"),(0,r.kt)("h2",{id:"scatter-and-gather-json"},"Scatter and Gather (JSON)"),(0,r.kt)("p",null,"This example shows performing scatter and gather ON JSON values."),(0,r.kt)("h3",{id:"scatter-and-gather-json-example"},"Scatter and Gather (JSON) Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},'CREATE STREAM PurchaseStream (order string, store string);\n\n@info(name = \'Scatter-query\')\n-- Scatter elements under `$.order.items` in to separate events.\nINSERT INTO TokenizedItemStream\nSELECT json:getString(order, \'$.order.id\') AS orderId,\n       jsonElement AS item,\n       store\nFROM PurchaseStream#json:tokenize(order, \'$.order.items\');\n\n\n@info(name = \'Transform-query\')\n-- Provide `$5` discount to cakes.\nINSERT INTO DiscountedItemStream\nSELECT orderId,\n       ifThenElse(json:getString(item, \'name\') == "cake",\n                  json:toString(\n                    json:setElement(item, \'price\',\n                      json:getDouble(item, \'price\') - 5\n                    )\n                  ),\n                  item) AS item,\n       store\nFROM TokenizedItemStream;\n\n\n@info(name = \'Gather-query\')\nINSERT INTO GroupedItemStream\n-- Combine `item` FROM all events in a batch AS a single JSON array.\nSELECT orderId, json:group(item) AS items, store\n-- Collect events traveling AS a batch via `batch()` window.\nFROM DiscountedItemStream window batch();\n\n\n@info(name = \'Format-query\')\nINSERT INTO DiscountedOrderStream\n-- Format the final JSON by combining `orderId`, `items`, and `store`.\nSELECT str:fillTemplate("""\n    {"discountedOrder":\n        {"id":"{{1}}", "store":"{{3}}", "items":{{2}} }\n    }""", orderId, items, store) AS discountedOrder\nFROM GroupedItemStream;\n')),(0,r.kt)("h3",{id:"scatter-and-gather-json-input"},"Scatter and Gather (JSON) Input"),(0,r.kt)("p",null,"Below event is sent to ",(0,r.kt)("inlineCode",{parentName:"p"},"PurchaseStream"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'[{\n   "order":{\n      "id":"501",\n      "items":[{"name":"cake", "price":25.0},\n               {"name":"cookie", "price":15.0},\n               {"name":"bun", "price":20.0}\n      ]\n   }\n}, \'CA\']\n')),(0,r.kt)("h3",{id:"scatter-and-gather-json-output"},"Scatter and Gather (JSON) Output"),(0,r.kt)("p",null,"After processing, following events arrive at ",(0,r.kt)("inlineCode",{parentName:"p"},"TokenizedItemStream"),":"),(0,r.kt)("p",null,"[",(0,r.kt)("inlineCode",{parentName:"p"},"'501'"),", ",(0,r.kt)("inlineCode",{parentName:"p"},'\'{"name":"cake","price":25.0}\''),", ",(0,r.kt)("inlineCode",{parentName:"p"},"'CA'"),"]",",",(0,r.kt)("br",null),"\n","[",(0,r.kt)("inlineCode",{parentName:"p"},"'501'"),", ",(0,r.kt)("inlineCode",{parentName:"p"},'\'{"name":"cookie","price":15.0}\''),", ",(0,r.kt)("inlineCode",{parentName:"p"},"'CA'"),"]",",",(0,r.kt)("br",null),"\n","[",(0,r.kt)("inlineCode",{parentName:"p"},"'501'"),", ",(0,r.kt)("inlineCode",{parentName:"p"},'\'{"name":"bun","price":20.0}\''),", ",(0,r.kt)("inlineCode",{parentName:"p"},"'CA'"),"]"),(0,r.kt)("p",null,"The events arrive at ",(0,r.kt)("inlineCode",{parentName:"p"},"DiscountedItemStream"),":"),(0,r.kt)("p",null,"[",(0,r.kt)("inlineCode",{parentName:"p"},"'501'"),", ",(0,r.kt)("inlineCode",{parentName:"p"},'\'{"name":"cake","price":20.0}\''),", ",(0,r.kt)("inlineCode",{parentName:"p"},"'CA'"),"]",",",(0,r.kt)("br",null),"\n","[",(0,r.kt)("inlineCode",{parentName:"p"},"'501'"),", ",(0,r.kt)("inlineCode",{parentName:"p"},'\'{"name":"cookie","price":15.0}\''),", ",(0,r.kt)("inlineCode",{parentName:"p"},"'CA'"),"]",",",(0,r.kt)("br",null),"\n","[",(0,r.kt)("inlineCode",{parentName:"p"},"'501'"),", ",(0,r.kt)("inlineCode",{parentName:"p"},'\'{"name":"bun","price":20.0}\''),", ",(0,r.kt)("inlineCode",{parentName:"p"},"'CA'"),"]"),(0,r.kt)("p",null,"The event arriving at ",(0,r.kt)("inlineCode",{parentName:"p"},"GroupedItemStream")," is:"),(0,r.kt)("p",null,"[",(0,r.kt)("inlineCode",{parentName:"p"},"'501'"),", ",(0,r.kt)("inlineCode",{parentName:"p"},'\'[{"price":20.0,"name":"cake"},{"price":15.0,"name":"cookie"},{"price":20.0,"name":"bun"}]\''),", ",(0,r.kt)("inlineCode",{parentName:"p"},"'CA'"),"]"),(0,r.kt)("p",null,"The event arriving at ",(0,r.kt)("inlineCode",{parentName:"p"},"DiscountedOrderStream")," is:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'    [\n        {"discountedOrder":\n            {\n                "id":"501",\n                "store":"CA",\n                "items":[{"price":20.0,"name":"cake"},\n                        {"price":15.0,"name":"cookie"},\n                        {"price":20.0,"name":"bun"}] \n            }\n        }\n    ]\n')))}s.isMDXComponent=!0}}]);