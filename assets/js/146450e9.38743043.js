"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5976],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=r,k=d["".concat(c,".").concat(m)]||d[m]||u[m]||o;return n?a.createElement(k,i(i({ref:t},p),{},{components:n})):a.createElement(k,i({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},34675:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var a=n(87462),r=(n(67294),n(3905));const o={sidebar_position:50,title:"Kafka NodeJS Client"},i=void 0,s={unversionedId:"streams/kafka_on_gdn/kafka-nodejs-client",id:"streams/kafka_on_gdn/kafka-nodejs-client",title:"Kafka NodeJS Client",description:"The Kafka-Node client can be used to create Kafka producers, consumers, and topics in Node.js.",source:"@site/docs/streams/kafka_on_gdn/kafka-nodejs-client.md",sourceDirName:"streams/kafka_on_gdn",slug:"/streams/kafka_on_gdn/kafka-nodejs-client",permalink:"/docs/streams/kafka_on_gdn/kafka-nodejs-client",draft:!1,editUrl:"https://github.com/macrometacorp/docs/edit/main/docs/streams/kafka_on_gdn/kafka-nodejs-client.md",tags:[],version:"current",sidebarPosition:50,frontMatter:{sidebar_position:50,title:"Kafka NodeJS Client"},sidebar:"defaultSidebar",previous:{title:"KafkaJS Client",permalink:"/docs/streams/kafka_on_gdn/kafkajs-client"},next:{title:"Fluent Bit Client",permalink:"/docs/streams/kafka_on_gdn/fluent-bit-client"}},c={},l=[{value:"Installation",id:"installation",level:2},{value:"Create a Client",id:"create-a-client",level:2},{value:"Create a Topic",id:"create-a-topic",level:2},{value:"Producer",id:"producer",level:2},{value:"Consumer",id:"consumer",level:2}],p={toc:l};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The ",(0,r.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/kafka-node"},"Kafka-Node")," client can be used to create Kafka producers, consumers, and topics in Node.js."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"We recommend using ",(0,r.kt)("a",{parentName:"p",href:"https://kafka.js.org/"},"kafkajs")," client instead, because ",(0,r.kt)("inlineCode",{parentName:"p"},"kafka-node")," has not been supporting since 2019.")),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("p",null,"Install Kafka-Node using npm:"),(0,r.kt)("p",null,"npm install kafka-node"),(0,r.kt)("h2",{id:"create-a-client"},"Create a Client"),(0,r.kt)("p",null,"In order to interact with Kafka, needs to be created a client instance:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const kafka = require('kafka-node');\n\nconst client = new kafka.KafkaClient(\n    {   \n        kafkaHost: '<my-gdn>.<my-paas>.macrometa.io:9093',\n        fromOffset: 'latest',\n        sasl: { mechanism: 'plain', username: '<my-tenant>/<my-fabric>', password: 'token:<my-api-key>' },\n        ssl: true,\n        sslOptions: {\n          rejectUnauthorized: false\n        }\n    });\n")),(0,r.kt)("h2",{id:"create-a-topic"},"Create a Topic"),(0,r.kt)("p",null,"This client requires to create a topic before running consumer."),(0,r.kt)("p",null,"Here is an example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"client.createTopics([{topic: '<c8globals or c8locals>.<my-topic>' ,partitions: 1, replicationFactor: 1}], (error, result) => {\n    ...\n});\n")),(0,r.kt)("h2",{id:"producer"},"Producer"),(0,r.kt)("p",null,"This example creates a Node.js producer for the my-topic topic and sends messages to that topic:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const producer = new kafka.HighLevelProducer(client);\nproducer.on('ready', function () {\n    console.log('starting to produce');\n    send();\n});\n\nfunction send() {\n    producer.send([{ topic: argv.topic, messages: ['<my-message-value>'] }], function (err, data) {\n        ...\n    });\n}\n")),(0,r.kt)("h2",{id:"consumer"},"Consumer"),(0,r.kt)("p",null,"Kafka consumers subscribe to one or more Kafka topics and listen for incoming messages produced on that topic or multiple topics with global either local distribution. For example: ",(0,r.kt)("inlineCode",{parentName:"p"},"new kafka.Consumer(client, [{ topic: 'c8globals.topic-1', topic: 'c8locals.topic-2'}])"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const consumer = new kafka.Consumer(client, [{ topic: \'<c8globals or c8locals>.<my-topic>\', groupId: \'<my-group-id>\' partition: 0}], {\n    autoCommit: true,\n    autoCommitIntervalMs: 500\n});\n\nconsumer.on("message", function (message) {\n    console.log("Received a message: " + message["value"]);\n});\n')))}u.isMDXComponent=!0}}]);