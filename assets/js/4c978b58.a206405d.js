"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[54779],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(67294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var i=r.createContext({}),c=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,a=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=s,b=d["".concat(i,".").concat(m)]||d[m]||p[m]||a;return n?r.createElement(b,o(o({ref:t},u),{},{components:n})):r.createElement(b,o({ref:t},u))}));function m(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var a=n.length,o=new Array(a);o[0]=d;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:s,o[1]=l;for(var c=2;c<a;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},85162:(e,t,n)=>{n.d(t,{Z:()=>o});var r=n(67294),s=n(34334);const a="tabItem_Ymn6";function o(e){let{children:t,hidden:n,className:o}=e;return r.createElement("div",{role:"tabpanel",className:(0,s.Z)(a,o),hidden:n},t)}},65488:(e,t,n)=>{n.d(t,{Z:()=>m});var r=n(87462),s=n(67294),a=n(34334),o=n(72389),l=n(67392),i=n(7094),c=n(12466);const u="tabList__CuJ",p="tabItem_LNqP";function d(e){const{lazy:t,block:n,defaultValue:o,values:d,groupId:m,className:b}=e,f=s.Children.map(e.children,(e=>{if((0,s.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),y=d??f.map((e=>{let{props:{value:t,label:n,attributes:r}}=e;return{value:t,label:n,attributes:r}})),g=(0,l.l)(y,((e,t)=>e.value===t.value));if(g.length>0)throw new Error(`Docusaurus error: Duplicate values "${g.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const h=null===o?o:o??f.find((e=>e.props.default))?.props.value??f[0].props.value;if(null!==h&&!y.some((e=>e.value===h)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${h}" but none of its children has the corresponding value. Available values are: ${y.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:k,setTabGroupChoices:v}=(0,i.U)(),[w,T]=(0,s.useState)(h),x=[],{blockElementScrollPositionUntilNextRender:O}=(0,c.o5)();if(null!=m){const e=k[m];null!=e&&e!==w&&y.some((t=>t.value===e))&&T(e)}const E=e=>{const t=e.currentTarget,n=x.indexOf(t),r=y[n].value;r!==w&&(O(t),T(r),null!=m&&v(m,String(r)))},j=e=>{let t=null;switch(e.key){case"ArrowRight":{const n=x.indexOf(e.currentTarget)+1;t=x[n]??x[0];break}case"ArrowLeft":{const n=x.indexOf(e.currentTarget)-1;t=x[n]??x[x.length-1];break}}t?.focus()};return s.createElement("div",{className:(0,a.Z)("tabs-container",u)},s.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":n},b)},y.map((e=>{let{value:t,label:n,attributes:o}=e;return s.createElement("li",(0,r.Z)({role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,key:t,ref:e=>x.push(e),onKeyDown:j,onFocus:E,onClick:E},o,{className:(0,a.Z)("tabs__item",p,o?.className,{"tabs__item--active":w===t})}),n??t)}))),t?(0,s.cloneElement)(f.filter((e=>e.props.value===w))[0],{className:"margin-top--md"}):s.createElement("div",{className:"margin-top--md"},f.map(((e,t)=>(0,s.cloneElement)(e,{key:t,hidden:e.props.value!==w})))))}function m(e){const t=(0,o.Z)();return s.createElement(d,(0,r.Z)({key:String(t)},e))}},55877:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>c,toc:()=>p});var r=n(87462),s=(n(67294),n(3905)),a=n(65488),o=n(85162);const l={sidebar_position:30,title:"Get Resources"},i=void 0,c={unversionedId:"sdks/get-resources",id:"sdks/get-resources",title:"Get Resources",description:"Get all accessible resources.",source:"@site/docs/sdks/get-resources.md",sourceDirName:"sdks",slug:"/sdks/get-resources",permalink:"/docs/sdks/get-resources",draft:!1,editUrl:"https://github.com/macrometacorp/docs/edit/main/docs/sdks/get-resources.md",tags:[],version:"current",sidebarPosition:30,frontMatter:{sidebar_position:30,title:"Get Resources"},sidebar:"defaultSidebar",previous:{title:"Install SDKs",permalink:"/docs/sdks/install-sdks"},next:{title:"APIs",permalink:"/docs/api-docs/"}},u={},p=[],d={toc:p};function m(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)(a.Z,{groupId:"operating-systems",mdxType:"Tabs"},(0,s.kt)(o.Z,{value:"js",label:"Javascript",mdxType:"TabItem"},(0,s.kt)("p",null,"Get all accessible resources."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'const jsc8 = require("jsc8");\n\n// Email and password to authenticate client instance\nconst email = "nemo@nautilus.com";\nconst password = "xxxxxx";\nconst fabric = "_system";\n// API key ID\nconst keyid = "id1";\n\nconst client = new jsc8({\n  url: "https://play.paas.macrometa.io",\n  fabricName: fabric\n});\n// Choose one of the following authentication methods and remove the commenting.\n\n// Create an authenticated instance with a JWT token.\n// const clientUsingJwt = new jsc8({url: "https://play.paas.macrometa.io" , token: "XXXX" , fabricName: fabric});\n// Create an authenticated instance with a API key.\n// const clientUsingApiKey = new jsc8({url: "https://play.paas.macrometa.io" , apiKey: "XXXX" , fabricName: fabric });\nfunction messageHandler(error) {\n  const message = {\n    "StatusCode ": error.statusCode,\n    "ErrorMessage ": error.message,\n    "ErrorNum ": error.errorNum\n  };\n  console.log(message);\n}\nasync function main() {\n  await client\n    .login(email, password)\n    .then((e) => console.log("1. User authentication done!"))\n    .catch((error) => error);\n\n  console.log("\\n2. Listing accessible databases for Key_ID = " + keyid);\n  await client\n    .listAccessibleDatabases(keyid)\n    .then((databases) => {\n      console.log(databases.result);\n    })\n    .catch((error) => messageHandler(error));\n\n  console.log("\\n3. Listing accessible streams for Key_ID = " + keyid);\n  await client\n    .listAccessibleStreams(keyid, fabric, (full = false))\n    .then((streams) => {\n      console.log(streams.result);\n    })\n    .catch((error) => messageHandler(error));\n\n  console.log("\\n4. Listing accessible collections for Key_ID = " + keyid);\n  await client\n    .listAccessibleCollections(keyid, fabric, (full = false))\n    .then((collections) => {\n      console.log(collections.result);\n    })\n    .catch((error) => messageHandler(error));\n}\n\nmain()\n  .then()\n  .catch((error) => console.log(error));\n\n'))),(0,s.kt)(o.Z,{value:"py",label:"Python",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-py"},"from c8 import C8Client\n\n# Create a connection to gdn\nclient = C8Client(protocol='https', host='play.paas.macrometa.io', port=443,\n                        email='nemo@nautilus.com', password='xxxxx',\n                        geofabric='_system')\n\n# API key ID\nkeyid = \"id1\"\n\n# Fetch List of accessible databases and streams\nprint(\"Accessible Databases: \", client.list_accessible_databases(keyid))\n\nprint(\"Accessible Streams of a db: \", client.list_accessible_streams(keyid, '_system'))\n"))),(0,s.kt)(o.Z,{value:"RA",label:"Rest API",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},'# Fetch List of accessible databases and streams\nURL = "api-gdn.macrometa.io"\nHTTP_URL = "https://{}".format(URL)\nkeyid = "id1"\nurl = HTTP_URL + "/_api/key/" + keyid + "/database/_system/stream"\nresp = session.get(url)\nresp = json.loads(resp.text)\nif resp[\'error\'] is True:\n    print("ERROR: " , resp)\nelse:\n    print("Accessible Streams: ", resp)\n\nurl = HTTP_URL + "/_api/key/" + keyid + "/database/_system/collection"\nresp = session.get(url)\nresp = json.loads(resp.text)\nif resp[\'error\'] is True:\n    print("ERROR: " , resp)\nelse:\n    print("Accessible Collections: ", resp)\n\nurl = HTTP_URL + "/_api/key/" + keyid + "/database"\nresp = session.get(url)\nresp = json.loads(resp.text)\nif resp[\'error\'] is True:\n    print("ERROR: " , resp)\nelse:\n    print("Accessible Databases: ", resp)\n')))))}m.isMDXComponent=!0}}]);