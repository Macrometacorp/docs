{
  "openapi": "3.0.3",
  "info": {
    "title": "PhotonIQ FaaS API",
    "description": "API documentation for the PhotonIQ FaaS Service",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api-demo-faas.paas.macrometa.io",
      "description": "PhotonIQ FaaS API"
    }
  ],
  "paths": {
    "/api/faas/v1/health": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "Check the health of the service",
        "description": "Check the health of the service.",
        "operationId": "handle_mm_health",
        "responses": {
          "200": {
            "description": "The system is up and running."
          }
        }
      }
    },
    "/api/faas/v1/deploy": {
      "post": {
        "tags": [
          "Function"
        ],
        "summary": "Deploy the function",
        "description": "Deploy the function for the specified key function name.",
        "operationId": "handle_mm_deploy",
        "parameters": [
          {
            "name": "X-PhotonIQ-CustomerID",
            "in": "header",
            "description": "The customer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/FunctionDataForm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully deployed the function."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/api/faas/v1/download/{functionName}": {
      "get": {
        "tags": [
          "Function"
        ],
        "summary": "Download the latest version of a function",
        "description": "Download the latest version of a function for the specified key function name.",
        "operationId": "handle_latest_mm_download",
        "parameters": [
          {
            "name": "X-PhotonIQ-CustomerID",
            "in": "header",
            "description": "The customer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "functionName",
            "in": "path",
            "description": "The function name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "metaOnly",
            "in": "query",
            "description": "If true, it specifies if want to download the meta data only but if false, the file will be downloaded",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the function."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/api/faas/v1/download/{functionName}/{version}": {
      "get": {
        "tags": [
          "Function"
        ],
        "summary": "Download a particular version of the function",
        "description": "Download the function for the specified key function name.",
        "operationId": "handle_mm_download",
        "parameters": [
          {
            "name": "X-PhotonIQ-CustomerID",
            "in": "header",
            "description": "The customer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "functionName",
            "in": "path",
            "description": "The function name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "metaOnly",
            "in": "query",
            "description": "If true, it specifies if want to download the meta data only but if false, the file will be downloaded",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the function."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/api/faas/v1/function/{functionName}": {
      "delete": {
        "tags": [
          "Function"
        ],
        "summary": "Delete All versions",
        "description": "Delete All versions for the specified function name.",
        "operationId": "handle_all_mm_delete_function",
        "parameters": [
          {
            "name": "X-PhotonIQ-CustomerID",
            "in": "header",
            "description": "The customer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "functionName",
            "in": "path",
            "description": "The function name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the function."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/api/faas/v1/function/{functionName}/{version}": {
      "delete": {
        "tags": [
          "Function"
        ],
        "summary": "Delete the function",
        "description": "Delete the function for the specified function name.",
        "operationId": "handle_mm_delete_function",
        "parameters": [
          {
            "name": "X-PhotonIQ-CustomerID",
            "in": "header",
            "description": "The customer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "functionName",
            "in": "path",
            "description": "The function name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the function."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/api/faas/v1/functions": {
      "get": {
        "tags": [
          "Function"
        ],
        "summary": "Retrieve the function names",
        "description": "Retrieve only the function names.",
        "operationId": "handle_mm_functions",
        "parameters": [
          {
            "name": "X-PhotonIQ-CustomerID",
            "in": "header",
            "description": "The customer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the function names."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/api/faas/v1/function/{functionName}/versions": {
      "get": {
        "tags": [
          "Function"
        ],
        "summary": "Retrieve all versions",
        "description": "Retrieve all versions for the specified key function name.",
        "operationId": "handle_mm_versions",
        "parameters": [
          {
            "name": "X-PhotonIQ-CustomerID",
            "in": "header",
            "description": "The customer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "functionName",
            "in": "path",
            "description": "The function name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the function versions."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/api/faas/v1/execute/{functionName}": {
      "post": {
        "tags": [
          "Function"
        ],
        "summary": "Execute the latest version of a function",
        "description": "Execute the latest version of a function for the specified function name on body.",
        "operationId": "handle_latest_mm_execute",
        "parameters": [
          {
            "name": "X-PhotonIQ-CustomerID",
            "in": "header",
            "description": "The customer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "functionName",
            "in": "path",
            "description": "The function name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "A valid JSON body is accepted",
          "content": {
            "application/json": {
              "schema": {},
              "example": {}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully executed the function."
          }
        }
      }
    },
    "/api/faas/v1/execute/{functionName}/{versionOrAlias}": {
      "post": {
        "tags": [
          "Function"
        ],
        "summary": "Execute the function",
        "description": "Execute the function for the specified function name on body.",
        "operationId": "handle_mm_execute",
        "parameters": [
          {
            "name": "X-PhotonIQ-CustomerID",
            "in": "header",
            "description": "The customer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "functionName",
            "in": "path",
            "description": "The function name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "versionOrAlias",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "A valid JSON body is accepted",
          "content": {
            "application/json": {
              "schema": {},
              "example": {}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully executed the function."
          }
        }
      }
    },
    "/api/faas/v1/function/{functionName}/alias/{aliasName}": {
      "put": {
        "tags": [
          "Function"
        ],
        "summary": "Update the alias",
        "description": "Update the alias for the specified key function name.",
        "operationId": "handle_mm_alias_update",
        "parameters": [
          {
            "name": "X-PhotonIQ-CustomerID",
            "in": "header",
            "description": "The customer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "functionName",
            "in": "path",
            "description": "The function name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "aliasName",
            "in": "path",
            "description": "Alias name of a function version",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "An array of alias object that includes valid 'version' and 'weight'",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {}
              },
              "example": [
                {
                  "version": "1.0.0",
                  "weight": 0
                }
              ]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully updated the alias."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      },
      "get": {
        "tags": [
          "Function"
        ],
        "summary": "Retrieve the alias",
        "description": "Retrieve the alias for the specified key function name.",
        "operationId": "handle_mm_alias",
        "parameters": [
          {
            "name": "X-PhotonIQ-CustomerID",
            "in": "header",
            "description": "The customer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "functionName",
            "in": "path",
            "description": "The function name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "aliasName",
            "in": "path",
            "description": "Alias name of a function version",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the function alias."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/api/faas/v1/function/{functionName}/aliases": {
      "get": {
        "tags": [
          "Function"
        ],
        "summary": "Retrieve all aliases",
        "description": "Retrieve all aliased for the specified key function name.",
        "operationId": "handle_mm_aliases",
        "parameters": [
          {
            "name": "X-PhotonIQ-CustomerID",
            "in": "header",
            "description": "The customer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "functionName",
            "in": "path",
            "description": "The function name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the function aliases."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CorsSettings": {
        "type": "object",
        "description": "CORS settings to enable the function for doing HTTP requests from inside of function files",
        "required": [
          "allowedMethods",
          "allowedHosts"
        ],
        "properties": {
          "allowedMethods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HttpMethod"
            },
            "example": [
              "GET",
              "POST"
            ]
          },
          "allowedHosts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "macrometa.com"
            ]
          },
          "allowHttp": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "FunctionDataForm": {
        "type": "object",
        "required": [
          "functionFile",
          "photoniqToml"
        ],
        "properties": {
          "functionFile": {
            "type": "string",
            "format": "binary",
            "description": "The file to be executed"
          },
          "photoniqToml": {
            "type": "string",
            "format": "binary",
            "description": "The photoniq.toml file for metadata"
          }
        }
      },
      "HttpMethod": {
        "type": "string",
        "description": "Specifies the HTTP methods.",
        "enum": [
          "GET",
          "HEAD",
          "POST",
          "PUT",
          "DELETE",
          "CONNECT",
          "OPTIONS",
          "TRACE",
          "PATCH"
        ]
      }
    }
  }
}
